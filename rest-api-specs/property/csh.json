{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Cashiering API",
    "description": "APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/csh/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cashierReportPostings": {
      "get": {
        "summary": "Get Cashier Report Postings",
        "description": "You can use this API to get Cashier Report postings. <p><strong>OperationId:</strong>getCashierReportPostings</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getCashierReportPostings",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "requestType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Shift drop report created when cashier closure is completed. It is an integral part of closure report and is not to be printed or accessed by itself.",
            "uniqueItems": true,
            "enum": [
              "Cash",
              "Check",
              "ForeignCurrency",
              "CreditCard",
              "Miscellaneous",
              "ArSettlements",
              "DepositTransfers",
              "Shiftdrop"
            ]
          },
          {
            "name": "closureNo",
            "in": "query",
            "required": false,
            "description": "The Cashier Shift Number.",
            "type": "number"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "shiftDropLocationCode",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop location code.",
            "type": "string"
          },
          {
            "name": "bagNumberForOthers",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop others payment method type bag number.",
            "type": "string"
          },
          {
            "name": "bagNumberForCash",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop cash payment method type bag number.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching the Cashier report transactions.",
            "schema": {
              "$ref": "#/definitions/cashierReportPostingsInfo"
            }
          },
          "204": {
            "description": "CashierReportPostings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/cashiers/{cashierId}/closure": {
      "put": {
        "summary": "Close Cashier",
        "description": "You can use this API to change Cashier Closure. <p><strong>OperationId:</strong>putCashier</p>",
        "operationId": "putCashier",
        "parameters": [
          {
            "name": "cashierId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the cashier."
          },
          {
            "name": "cashierClosure",
            "in": "body",
            "required": true,
            "description": "Request to close cashier's shift.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashierClosure"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/cashiers/{cashierId}/locks": {
      "get": {
        "summary": "Acquire Cashier Locks",
        "description": "You can use this API to Acquire Cashier Locks. <p><strong>OperationId:</strong>getCashierLock</p>",
        "operationId": "getCashierLock",
        "parameters": [
          {
            "name": "cashierId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the cashier."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the Cashier Lock request.",
            "schema": {
              "$ref": "#/definitions/acquiredCashierLock"
            }
          },
          "204": {
            "description": "CashierLock not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "delete": {
        "summary": "Break Cashier Lock",
        "description": "You can use this API to Break Cashier Lock. <p><strong>OperationId:</strong>breakCashierLock</p>",
        "operationId": "breakCashierLock",
        "parameters": [
          {
            "name": "cashierId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the cashier."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/cashiers/{cashierId}/transactions": {
      "get": {
        "summary": "Get Cashier Transactions",
        "description": "You can use this API to get Cashier Transactions. <p><strong>OperationId:</strong>getCashierTransactions</p>",
        "operationId": "getCashierTransactions",
        "parameters": [
          {
            "name": "cashierId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the cashier."
          },
          {
            "name": "closureNo",
            "in": "query",
            "required": false,
            "description": "The Cashier Shift Number.",
            "type": "number"
          },
          {
            "name": "shiftDropLocationCode",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop location code.",
            "type": "string"
          },
          {
            "name": "bagNumberForOthers",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop others payment method type bag number.",
            "type": "string"
          },
          {
            "name": "bagNumberForCash",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop cash payment method type bag number.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch cashier's shift transactions.",
            "schema": {
              "$ref": "#/definitions/cashierTransactionsDetails"
            }
          },
          "204": {
            "description": "CashierTransactions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/cashiersLock/{lockId}": {
      "delete": {
        "summary": "Release Cashier Lock",
        "description": "You can use this API to Release Cashier Lock. <p><strong>OperationId:</strong>releaseCashierLock</p>",
        "operationId": "releaseCashierLock",
        "parameters": [
          {
            "name": "lockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the lock."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/compAccountingJournal": {
      "get": {
        "summary": "Get Comp Accounting Journal",
        "description": "You can use this API to get Comp Accounting Journal. <br><p><strong><mark>This API is deprecated. Please use getCompPostingJournal instead</mark></strong></p> <p><strong>OperationId:</strong>getCompAccountingJournal</p> <p>The maximum allowable limit for this API is <strong>50</strong>.</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getCompAccountingJournal",
        "deprecated": true,
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "filterRoomNumber",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "approvalCode",
            "in": "query",
            "required": false,
            "description": "Filters the results for approval code.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "authorizerNameCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "referenceNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Filters the results for reference number.",
            "type": "string"
          },
          {
            "name": "supplementWildCard",
            "in": "query",
            "required": false,
            "description": "Filter the results for supplement.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching the Complimentary Posting Journal.",
            "schema": {
              "$ref": "#/definitions/compAccountingJournal"
            }
          },
          "204": {
            "description": "CompAccountingJournal not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/fbaReimbursements": {
      "post": {
        "summary": "Create FBA Reimbursement",
        "description": "You can use this API to create FBA Reimbursement. <p><strong>OperationId:</strong>postFBAReimbursement</p>",
        "operationId": "postFBAReimbursement",
        "parameters": [
          {
            "name": "fbaReimbursementCriteria",
            "in": "body",
            "required": true,
            "description": "PostFBAReimbursement operation posts reimbursement against the selected certificate records.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fbaReimbursementCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/fbaSettlements": {
      "post": {
        "summary": "Create FBA Settlement",
        "description": "You can use this API to create FBA Settlement. <p><strong>OperationId:</strong>postFBASettlement</p>",
        "operationId": "postFBASettlement",
        "parameters": [
          {
            "name": "fbaReimbursementCriteria",
            "in": "body",
            "required": true,
            "description": "PostFBASettlement operation posts settlement against the selected certificate records.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fbaReimbursementCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/foreignCurrency": {
      "put": {
        "summary": "Calculate Foreign Currency",
        "description": "This API will allow you to Calculate Foreign Currency exchange. <p><strong>OperationId:</strong>calculateForeignCurrency</p>",
        "operationId": "calculateForeignCurrency",
        "parameters": [
          {
            "name": "foreignCurrencyCriteria",
            "in": "body",
            "required": true,
            "description": "Operation to calculate foreign currency exchange.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/foreignCurrencyCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Information regarding charges in batch result for each reservation.",
            "schema": {
              "$ref": "#/definitions/calculatedForeignCurrency"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/foreignCurrencyExchange": {
      "post": {
        "summary": "Create Foreign Currency Exchange",
        "description": "You can use this API to Create Foreign Currency Exchange. <p><strong>OperationId:</strong>postForeignCurrencyExchange</p>",
        "operationId": "postForeignCurrencyExchange",
        "parameters": [
          {
            "name": "foreignCurrencyExchange",
            "in": "body",
            "required": true,
            "description": "A set of posting transactions that need to be posted with regards to exchange.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/foreignCurrencyExchange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response of the posting foreign currency exchange transaction.",
            "schema": {
              "$ref": "#/definitions/foreignCurrencyExchangeTransaction"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/advanceFolio/batchJobs": {
      "post": {
        "summary": "Create Batch Advance Folio",
        "description": "You can use this API to create Batch Advance Folio. <p><strong>OperationId:</strong>postAdvanceFolio</p>",
        "operationId": "postAdvanceFolio",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "batchAdvanceFolio",
            "in": "body",
            "required": true,
            "description": "Request for submitting batch advance folio.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchAdvanceFolio"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/articlesSale": {
      "post": {
        "summary": "Create Articles Sale",
        "description": "You can use this API to create Articles Sale. <p><strong>OperationId:</strong>postArticlesSale</p>",
        "operationId": "postArticlesSale",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "articlesSaleCriteria",
            "in": "body",
            "required": true,
            "description": "Request to post a set of charges, payments and generate a bill for a PasserBy or for the Post-It functionality . A PasserBy is someone who is not staying at the Property. A PasserBy transaction requires a Profile in Opera for whom the the folio is being created.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articlesSaleCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Details of the folio created.",
            "schema": {
              "$ref": "#/definitions/articlesSale"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/authorizers/credits": {
      "get": {
        "summary": "Get Authorizers Credit Info",
        "description": "You can use this API to get Authorizers Credit Info. <p><strong>OperationId:</strong>getAuthorizersCreditInfo</p>",
        "operationId": "getAuthorizersCreditInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeCreditDetails",
            "in": "query",
            "required": false,
            "description": "This flag will notify the service if the Credit details will also be returned or not.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Returns credit information of Comp Accounting Authorizers.",
            "schema": {
              "$ref": "#/definitions/authorizersCreditInfo"
            }
          },
          "204": {
            "description": "AuthorizersCreditInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/autoCheckoutReservations/batchJobs": {
      "post": {
        "summary": "Create Auto Checkout Reservation Batch ",
        "description": "You can use this API to create Auto Checkout Reservation Batch. <p><strong>OperationId:</strong>postAutoCheckoutReservations</p>",
        "operationId": "postAutoCheckoutReservations",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "batchAutoCheckoutReservation",
            "in": "body",
            "required": true,
            "description": "Request type for batch auto checkout.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchAutoCheckoutReservation"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for batch auto check out.",
            "schema": {
              "$ref": "#/definitions/batchAutoCheckoutDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/autoSettlements/batchJobs": {
      "post": {
        "summary": "Create Batch Auto Settlement",
        "description": "You can use this API to create Batch Auto Settlement. <p><strong>OperationId:</strong>postBatchAutoSettlement</p>",
        "operationId": "postBatchAutoSettlement",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "batchAutoSettlementCriteria",
            "in": "body",
            "required": true,
            "description": "Request type for batch auto settlement.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchAutoSettlementCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/batchDeposits": {
      "post": {
        "summary": "Create batch deposits",
        "description": "You can use this API to create batch deposits. <p><strong>OperationId:</strong>postBatchDeposit</p>",
        "operationId": "postBatchDeposit",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "batchDeposit",
            "in": "body",
            "required": true,
            "description": "Request for submitting batch deposit for reservations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchDeposit"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/bedTax": {
      "get": {
        "summary": "Get bed tax information",
        "description": "You can use this API to Retrieve bed tax information for a property. <p><strong>OperationId:</strong>getBedTaxInfo</p>",
        "operationId": "getBedTaxInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "arrival",
            "in": "query",
            "required": false,
            "description": "Arrival Date of the reservation",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for bed transaction info",
            "schema": {
              "$ref": "#/definitions/bedTaxInfo"
            }
          },
          "204": {
            "description": "BedTaxInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Create bed tax information",
        "description": "You can use this API to create new bed tax information for a property. <p><strong>OperationId:</strong>postBedTaxInfo</p>",
        "operationId": "postBedTaxInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "bedTaxCriteria",
            "in": "body",
            "required": true,
            "description": "Request type for create bed transaction info",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bedTaxCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/bedTax/{taxRegistraitionNo}": {
      "put": {
        "summary": "Change bed tax information",
        "description": "You can use this API to Update bed tax information for a property. <p><strong>OperationId:</strong>putBedTaxInfo</p>",
        "operationId": "putBedTaxInfo",
        "deprecated": true,
        "parameters": [
          {
            "name": "taxRegistraitionNo",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique number of the tax registration."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "bedTaxCriteria",
            "in": "body",
            "required": true,
            "description": "Request type for change bed transaction info",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bedTaxCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "delete": {
        "summary": "Delete bed tax information",
        "description": "You can use this API to delete bed tax information for a property. <p><strong>OperationId:</strong>removeBedTaxInfo</p>",
        "operationId": "removeBedTaxInfo",
        "deprecated": true,
        "parameters": [
          {
            "name": "taxRegistraitionNo",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique number of the tax registration."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/billingCharges": {
      "put": {
        "summary": "Change Billing Charges",
        "description": "You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharges</p>",
        "operationId": "putBillingCharges",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "putBillingCharges",
            "in": "body",
            "required": true,
            "description": "Request to edit multiple billing charge information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/putBillingCharges"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/putBillingChargesStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/bulkCCSettlements/{batchId}/status": {
      "get": {
        "summary": "Get Batch CC Settlements Status",
        "description": "You can use this API to get Batch CC Settlements Status. <p><strong>OperationId:</strong>getBatchCCSettlementsStatus</p>",
        "operationId": "getBatchCCSettlementsStatus",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the batch"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for credit card settlements status.",
            "schema": {
              "$ref": "#/definitions/ccBatchSettlementsStatus"
            }
          },
          "204": {
            "description": "BatchCCSettlementsStatus not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/bulkPrepaidCards": {
      "post": {
        "summary": "Create multiple Prepaid Cards",
        "description": "You can use this API to create multiple Prepaid Cards. <p><strong>OperationId:</strong>postBulkPrepaidCards</p>",
        "operationId": "postBulkPrepaidCards",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "bulkPrepaidCardCriteria",
            "in": "body",
            "required": true,
            "description": "Request type for bulk prepaid card creation process",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bulkPrepaidCardCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/bulkPrepaidCardsType"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/cashiers/{cashierId}/closure": {
      "get": {
        "summary": "Get Cashier Closure",
        "description": "You can use this API to get Cashier Closure. <p><strong>OperationId:</strong>getCashierClosure</p>",
        "operationId": "getCashierClosure",
        "parameters": [
          {
            "name": "cashierId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the cashier."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cashierLockHandle",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier Lock Handle to pass along with operation which required cashier to be locked."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch Cashier Closure information.",
            "schema": {
              "$ref": "#/definitions/cashierClosureDetails"
            }
          },
          "204": {
            "description": "CashierClosure not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/cashiers/{cashierId}/closureReports": {
      "get": {
        "summary": "Get Cashier Closure Reports List",
        "description": "You can use this API to get Cashier Closure Reports List. <p><strong>OperationId:</strong>getCashierClosureReportsList</p>",
        "operationId": "getCashierClosureReportsList",
        "parameters": [
          {
            "name": "cashierId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the cashier."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "closureNo",
            "in": "query",
            "required": false,
            "description": "The Cashier Shift Number.",
            "type": "number"
          },
          {
            "name": "shiftDropLocationCode",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop location code.",
            "type": "string"
          },
          {
            "name": "bagNumberForOthers",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop others payment method type bag number.",
            "type": "string"
          },
          {
            "name": "bagNumberForCash",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop cash payment method type bag number.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Returns whether a particular report is applicable or not based on payment posting type. When no postings for a particular payment type is found, that report is marked as not applicable in the closure report.",
            "schema": {
              "$ref": "#/definitions/cashierClosureReportsList"
            }
          },
          "204": {
            "description": "CashierClosureReportsList not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/cashiers/{cashierId}/folioTaxPayments": {
      "put": {
        "summary": "Change folio tax payments",
        "description": "You can use this API to change folio tax payments. <p><strong>OperationId:</strong>reverseFolioTaxPayment</p>",
        "operationId": "reverseFolioTaxPayment",
        "parameters": [
          {
            "name": "cashierId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the cashier."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "transactionReversal",
            "in": "body",
            "required": true,
            "description": "Request to reverse a Payment Tax record for Thailand Tax requirement.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionReversal"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the reverse Thailand Tax Payment Tax record request.",
            "schema": {
              "$ref": "#/definitions/folioTaxPaymentReversal"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/cashierslock/{lockId}": {
      "put": {
        "summary": "Extend Cashier Lock",
        "description": "You can use this API to Extend cashiers lock. <p><strong>OperationId:</strong>putCashierLock</p>",
        "operationId": "putCashierLock",
        "parameters": [
          {
            "name": "lockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the lock."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cashierLockCriteriaToExtend",
            "in": "body",
            "required": true,
            "description": "Operation for extending the lifetime of a lock on a cashier.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashierLockCriteriaToExtend"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "This response will indicate whether or not the extension was successful. This operation may return errors when the lock being requested to be extended no longer exists. This can happen when the lock has already expired and cleaned up.",
            "schema": {
              "$ref": "#/definitions/extendedCashierLock"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/ccSettlement": {
      "post": {
        "summary": "Create CreditCard Settlement",
        "description": "You can use this API to create cc Settlement. <p><strong>OperationId:</strong>postCCSettlement</p>",
        "operationId": "postCCSettlement",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "ccSettlementCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to change credit card settlement information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccSettlementCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/ccSettlements/batchJobs": {
      "post": {
        "summary": "Create Batch CC Settlements",
        "description": "You can use this API to create Batch CC Settlements. <p><strong>OperationId:</strong>postBatchCCSettlements</p>",
        "operationId": "postBatchCCSettlements",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "ccBatchSettlementsProcessCriteria",
            "in": "body",
            "required": true,
            "description": "Request to process batch settlements",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccBatchSettlementsProcessCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/check/{checkNumber}": {
      "get": {
        "summary": "Get check details",
        "description": "You can use this API to get check details. <p><strong>OperationId:</strong>getCheckDetails</p>",
        "operationId": "getCheckDetails",
        "parameters": [
          {
            "name": "checkNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique number of the check"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to Fetch the check details for a given posting posted through the POS.",
            "schema": {
              "$ref": "#/definitions/checkDetails"
            }
          },
          "204": {
            "description": "CheckDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Post Guest Check Details",
        "description": "This operation is to add guest check details for posted check transactions. <p><strong>OperationId:</strong>postGuestCheckDetails</p>",
        "operationId": "postGuestCheckDetails",
        "parameters": [
          {
            "name": "checkNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique number of the check"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "guestCheckDetails",
            "in": "body",
            "required": true,
            "description": "Request to process a guest check detail.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guestCheckDetails"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/check/{checkNumber}/charges": {
      "delete": {
        "summary": "Delete Billing Check Charges",
        "description": "You can use this API to delete (void) Billing Check Charges. <p><strong>OperationId:</strong>voidBillingCheckCharges</p>",
        "operationId": "voidBillingCheckCharges",
        "parameters": [
          {
            "name": "checkNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique number of the check."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "revenueDate",
            "in": "query",
            "required": false,
            "description": "The date against which void (reverse) charges are posted.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "checkId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "checkIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "checkIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "postingRemark",
            "in": "query",
            "required": false,
            "description": "Text describing any applicable detail of the posting.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/closureList": {
      "get": {
        "summary": "Get Cashier Closure Information",
        "description": "You can use this API to get Cashier Closure Information. <p><strong>OperationId:</strong>getCashierClosureInfo</p>",
        "operationId": "getCashierClosureInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "closureNo",
            "in": "query",
            "required": false,
            "description": "The Cashier Shift Number.",
            "type": "number"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "shiftDropLocationCode",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop location code.",
            "type": "string"
          },
          {
            "name": "bagNumberForOthers",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop others payment method type bag number.",
            "type": "string"
          },
          {
            "name": "bagNumberForCash",
            "in": "query",
            "required": false,
            "description": "Cashier closure shift drop cash payment method type bag number.",
            "type": "string"
          },
          {
            "name": "closureBusinessDate",
            "in": "query",
            "required": false,
            "description": "Business Date of cashier closure.",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to get financial details for a Posting Activity. This will return the before and after values for the transactions which were changed.",
            "schema": {
              "$ref": "#/definitions/cashierClosureInformation"
            }
          },
          "204": {
            "description": "CashierClosureInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/compAccountingJournal": {
      "get": {
        "summary": "Get Comp Accounting Journal",
        "description": "You can use this API to get Comp Accounting Journal. <p><strong>OperationId:</strong>getCompPostingJournal</p> <p>The maximum allowable limit for this API is <strong>50</strong>.</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getCompPostingJournal",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "filterRoomNumber",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "approvalCode",
            "in": "query",
            "required": false,
            "description": "Filters the results for approval code.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "authorizerNameCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "referenceNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Filters the results for reference number.",
            "type": "string"
          },
          {
            "name": "supplementWildCard",
            "in": "query",
            "required": false,
            "description": "Filter the results for supplement.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching the Complimentary Posting Journal.",
            "schema": {
              "$ref": "#/definitions/compAccountingJournal"
            }
          },
          "204": {
            "description": "CompAccountingJournal not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/compRoutingInstructions": {
      "get": {
        "summary": "Get Comp Routing Instructions",
        "description": "You can use this API to get Comp Routing Instructions. <p><strong>OperationId:</strong>getCompRoutingInstructions</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getCompRoutingInstructions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "nameWildcard",
            "in": "query",
            "required": false,
            "description": "Family name or last name of the guest",
            "type": "string"
          },
          {
            "name": "firstNameWildCard",
            "in": "query",
            "required": false,
            "description": "Given name or first name of the guest.",
            "type": "string"
          },
          {
            "name": "roomNumberCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "membershipId",
            "in": "query",
            "required": false,
            "description": "Membership Card number.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "resStatusCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Reserved",
                "Requested",
                "NoShow",
                "Cancelled",
                "InHouse",
                "CheckedOut",
                "Waitlisted",
                "DueIn",
                "DueOut",
                "Walkin",
                "PendingCheckout"
              ]
            },
            "required": false
          },
          {
            "name": "compRoutingStatuses",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Status which indicates that the Request of Comp Routing was declined",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Request",
                "Comp",
                "Declined"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object containing comp routing instructions for a reservation .",
            "schema": {
              "$ref": "#/definitions/compRoutingInstructions"
            }
          },
          "204": {
            "description": "CompRoutingInstructions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/compTrxAuthorizers": {
      "get": {
        "summary": "Get Comp Trx Authorizers",
        "description": "You can use this API to get Comp Trx Authorizers. <p><strong>OperationId:</strong>getCompTrxAuthorizers</p>",
        "operationId": "getCompTrxAuthorizers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "targetFolioWindowNo",
            "in": "query",
            "required": false,
            "description": "Folio Window Number to where transactions will be transfered.",
            "type": "integer"
          },
          {
            "name": "uniqueIdId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "uniqueIdIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "uniqueIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transaction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of transactions to be transfered.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "authorizerIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "authorizerIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "authorizerIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch comp authorizers operation.",
            "schema": {
              "$ref": "#/definitions/compTrxAuthorizers"
            }
          },
          "204": {
            "description": "CompTrxAuthorizers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/covers": {
      "get": {
        "summary": "Get transaction covers",
        "description": "You can use this API to get Trx Covers. <p><strong>OperationId:</strong>getTransactionCovers</p>",
        "operationId": "getTransactionCovers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "coversDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "transactionCode",
            "in": "query",
            "required": false,
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction Code to search.",
            "items": {
              "type": "string",
              "maxItems": 4000
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response when searching for trx covers.",
            "schema": {
              "$ref": "#/definitions/coversInfo"
            }
          },
          "204": {
            "description": "PostCovers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "put": {
        "summary": "Change Transaction Covers",
        "description": "You can use this API to change Trx Covers. <p><strong>OperationId:</strong>changeTransactionCovers</p>",
        "operationId": "changeTransactionCovers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "coversInfo",
            "in": "body",
            "required": true,
            "description": "To change the trx cover for the given date and transaction code.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/coversInfo"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/creditBill": {
      "post": {
        "summary": "Create Credit Bill",
        "description": "You can use this API to create Credit Bill. <p><strong>OperationId:</strong>postCreditBill</p>",
        "operationId": "postCreditBill",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "creditBillCriteria",
            "in": "body",
            "required": true,
            "description": "Request to post a Credit Folio for an existing Folio. Credit Bill Functionality parameter is required.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditBillCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the request to create a Credit Folio.",
            "schema": {
              "$ref": "#/definitions/postedCreditBill"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/creditBill/action/validate": {
      "put": {
        "summary": "Validate Credit Bill",
        "description": "You can use this API to validate credit Bill. <p><strong>OperationId:</strong>validateCreditBill</p>",
        "operationId": "validateCreditBill",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "creditBillCriteria",
            "in": "body",
            "required": true,
            "description": "Request to check if a Folio is valid for Credit Bill.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditBillCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response to the request to check if a Folio is valid for Credit Bill.",
            "schema": {
              "$ref": "#/definitions/validatedCreditBill"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/creditLimitsOveragePayments": {
      "get": {
        "summary": "Get Credit Limits Overage Payments",
        "description": "You can use this API to get Credit Limits Overage Payments. <p><strong>OperationId:</strong>getCreditLimitOveragePayments</p>",
        "operationId": "getCreditLimitOveragePayments",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "guestNameWildCard",
            "in": "query",
            "required": false,
            "description": "Guest name associated with the transaction.",
            "type": "string"
          },
          {
            "name": "roomNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Room number associated with the transaction.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for Fetch Credit Limit Overage Payments request",
            "schema": {
              "$ref": "#/definitions/creditLimitOveragePaymentsInfo"
            }
          },
          "204": {
            "description": "CreditLimitOveragePayments not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Create Credit Limit Overage Payments",
        "description": "You can use this API to create Credit Limit Overage Payments. <p><strong>OperationId:</strong>postCreditLimitOveragePayments</p>",
        "operationId": "postCreditLimitOveragePayments",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "creditLimitOveragePayments",
            "in": "body",
            "required": true,
            "description": "Request to start the Credit Limit Overage process for the reservations with a folio window balance equal or higher to the credit limit set for the credit card payment method of that folio window.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditLimitOveragePayments"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for Submit Credit Limit Overage Payments request",
            "schema": {
              "$ref": "#/definitions/creditLimitOveragePaymentsDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/creditcardTransaction/logs": {
      "post": {
        "summary": "Register Vault Transaction",
        "description": "You can use this API to create vault transaction. <p><strong>OperationId:</strong>registerVaultTransaction</p>",
        "operationId": "registerVaultTransaction",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "vaultTransaction",
            "in": "body",
            "required": true,
            "description": "Request to register the vault HTTP transaction.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/vaultTransaction"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/creditcardsurcharge": {
      "get": {
        "summary": "Get CC Surcharge Information",
        "description": "You can use this API to get CC Surcharge Information. <p><strong>OperationId:</strong>getCCSurchargeInfo</p>",
        "operationId": "getCCSurchargeInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "track2Data",
            "in": "query",
            "required": false,
            "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
            "type": "string"
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmountNeededAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "balanceAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "The authorization rule code.",
            "type": "integer"
          },
          {
            "name": "amountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "amountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "percent",
            "in": "query",
            "required": false,
            "description": "A percentage value if the authorization rule is percentage based.",
            "type": "number"
          },
          {
            "name": "emailFolio",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "uniqueIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "uniqueIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "uniqueIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "createDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of the creation.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "creatorId",
            "in": "query",
            "required": false,
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "type": "string"
          },
          {
            "name": "emailAddress",
            "in": "query",
            "required": false,
            "description": "Defines the e-mail address.",
            "type": "string"
          },
          {
            "name": "emailFormat",
            "in": "query",
            "required": false,
            "description": "Supported Email format.",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ]
          },
          {
            "name": "lastModifierId",
            "in": "query",
            "required": false,
            "description": "Identifies the last software system or person to modify a record.",
            "type": "string"
          },
          {
            "name": "lastModifyDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of last modification.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderSequence",
            "in": "query",
            "required": false,
            "description": "Display Order sequence.",
            "type": "number"
          },
          {
            "name": "primaryInd",
            "in": "query",
            "required": false,
            "description": "When true, indicates a primary information.",
            "type": "boolean"
          },
          {
            "name": "purgeDate",
            "in": "query",
            "required": false,
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "emailType",
            "in": "query",
            "required": false,
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "type": "string"
          },
          {
            "name": "typeDescription",
            "in": "query",
            "required": false,
            "description": "Describes the Type code",
            "type": "string"
          },
          {
            "name": "approvalCode",
            "in": "query",
            "required": false,
            "description": "The approval code authenticates the authorization.",
            "type": "string"
          },
          {
            "name": "originalAuthSequence",
            "in": "query",
            "required": false,
            "description": "Unique Authorization Sequence for the authorization and settlement.",
            "type": "integer"
          },
          {
            "name": "vendorTranId",
            "in": "query",
            "required": false,
            "description": "Vendor transaction id for the authorization.",
            "type": "string"
          },
          {
            "name": "approvalAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "postingAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "postingAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch Credit Card Surcharge information for a Credit Card Payment.",
            "schema": {
              "$ref": "#/definitions/ccSurchargeDetails"
            }
          },
          "204": {
            "description": "CCSurchargeInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/depositFolio": {
      "get": {
        "summary": "Get Deposit Folio",
        "description": "You can use this API to get Deposit Folio. <p><strong>OperationId:</strong>getDepositFolio</p>",
        "operationId": "getDepositFolio",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for deposit folio instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ProjectedRevenue"
              ]
            },
            "required": false
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "policyIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "blockIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Deposit Posting Information for a reservation. Contains all deposit payments made for a reservation.",
            "schema": {
              "$ref": "#/definitions/reservationDepositFolios"
            }
          },
          "204": {
            "description": "DepositFolio not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/depositTransactions": {
      "get": {
        "summary": "Get Deposit Folio Transaction Details",
        "description": "You can use this API to get Deposit Folio Transaction Details. <p><strong>OperationId:</strong>getDepositFolioTransactionDetails</p>",
        "operationId": "getDepositFolioTransactionDetails",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "includeGenerates",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the automatically generated transactions, related to the main transaction number above, are also to be retrieved as part of this request.",
            "type": "boolean"
          },
          {
            "name": "transactionNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Transaction Number of the transaction(posting) for which details are required.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeExchangeInformation",
            "in": "query",
            "required": false,
            "description": "Flag to indicate what currency exchange information text needs to be included in response.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
            "schema": {
              "$ref": "#/definitions/depositFolioTransactionDetails"
            }
          },
          "204": {
            "description": "DepositFolioTransactionDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/depositfolios/action/validate": {
      "put": {
        "summary": "Validate Deposit Folio",
        "description": "You can use this API to validate Deposit Folio. <p><strong>OperationId:</strong>validateDepositFolio</p>",
        "operationId": "validateDepositFolio",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "depositFolioValidateCriteria",
            "in": "body",
            "required": true,
            "description": "Request to validate a Deposit Folio for a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositFolioValidateCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Information regarding the Deposit Policy if a Deposit Folio is going to be created for this policy.",
            "schema": {
              "$ref": "#/definitions/depositedFolioValidate"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/externalSystems/{externalSysCode}/reservations/{reservationId}/depositPayments": {
      "post": {
        "summary": "Create Deposit Payment using external reference.",
        "description": "You can use this API to create Deposit Payment with external reference. <p><strong>OperationId:</strong>postDepositPaymentByExtId</p>",
        "operationId": "postDepositPaymentByExtId",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "External System's reservation ID."
          },
          {
            "name": "externalSysCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Code to identify the external system from which the request is coming. This is the ExternalSystem ID used to exchange information between OPERA and the external system."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "depositPayment",
            "in": "body",
            "required": true,
            "description": "Request to post a deposit payment to a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositPayment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the post deposit payment request.",
            "schema": {
              "$ref": "#/definitions/depositedPayment"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/financialPostings": {
      "get": {
        "summary": "Get Financial Postings",
        "description": "You can use this API to get Financial postings. <p><strong>OperationId:</strong>getFinancialPostings</p> <p>The maximum allowable limit for this API is <strong>50</strong>.</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getFinancialPostings",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "filterTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "filterRoomNumber",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "referenceNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Filters the results for reference number.",
            "type": "string"
          },
          {
            "name": "checkNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Filter the results for Cheque number's code.",
            "type": "string"
          },
          {
            "name": "supplementWildCard",
            "in": "query",
            "required": false,
            "description": "Filter the results for supplement.",
            "type": "string"
          },
          {
            "name": "approvalCode",
            "in": "query",
            "required": false,
            "description": "Filters the results for approval code.",
            "type": "string"
          },
          {
            "name": "approvalStatusCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Filters the result to only include transactions in this window number.",
            "items": {
              "type": "integer",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmountNeededAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "closureNo",
            "in": "query",
            "required": false,
            "description": "Filters the result to only display the postings that were made during the cashier closure range",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching the Posting Journal.",
            "schema": {
              "$ref": "#/definitions/financialPostings"
            }
          },
          "204": {
            "description": "FinancialPostings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/financialPostingsNetVat": {
      "get": {
        "summary": "Get Financial Postings with breakdown",
        "description": "You can use this API to get Financial postings with Net and Vat breakdown. <p><strong>OperationId:</strong>financialPostingsNetVat</p> <p>The maximum allowable limit for this API is <strong>50</strong>.</p>",
        "operationId": "getFinancialPostingsNetVat",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "required": true,
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching the Posting Journal with Net and Vat breakdown.",
            "schema": {
              "$ref": "#/definitions/financialPostingsNetVat"
            }
          },
          "204": {
            "description": "FinancialPostings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/fiscalCommands": {
      "post": {
        "summary": "Create Fiscal Invoice",
        "description": "You can use this API to create Fiscal Invoice. <p><strong>OperationId:</strong>postFiscalCommandInvoice</p>",
        "operationId": "postFiscalCommandInvoice",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fiscalFolioCriteria",
            "in": "body",
            "required": true,
            "description": "Request to generate commands and communicate with fiscal service from fiscal terminals screen..",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response after generating a commands from Fiscal Terminals screen.",
            "schema": {
              "$ref": "#/definitions/fiscalCommandsResponseInfo"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/fiscalFolioResponse": {
      "get": {
        "summary": "Get the Fiscal Folio Activity for a folio",
        "description": "You can use this API to get the fiscal folio activity details for a folio. <p><strong>OperationId:</strong>getFiscalFolioActivity</p>",
        "operationId": "getFiscalFolioActivity",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "folioSeqNo",
            "in": "query",
            "required": false,
            "description": "Folio Sequence number for a folio",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Details of Fiscal Folio Activity made.",
            "schema": {
              "$ref": "#/definitions/folioActivityDetailsType"
            }
          },
          "204": {
            "description": "FiscalFolioActivity not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/fiscalFolioResponse/{folioSeqNo}": {
      "get": {
        "summary": "Get the Fiscal Folio Activity Response details for a folio",
        "description": "You can use this API to get the fiscal folio activity response details for a folio. <p><strong>OperationId:</strong>getFiscalFolioActivityDetails</p>",
        "operationId": "getFiscalFolioActivityDetails",
        "parameters": [
          {
            "name": "folioSeqNo",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the folio"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "responseAttemptNo",
            "in": "query",
            "required": false,
            "description": "Number of fiscal response attempt made for the folio",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Details of response for the Fiscal Folio Activity made.",
            "schema": {
              "$ref": "#/definitions/folioActivityResponseDetailType"
            }
          },
          "204": {
            "description": "FiscalFolioActivityDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/fiscalFolios": {
      "post": {
        "summary": "Create Fiscal Information Folio",
        "description": "You can use this API to create Fiscal Information Folio. <p><strong>OperationId:</strong>generateFiscalFolio</p>",
        "operationId": "generateFiscalFolio",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fiscalInfoFolioCriteria",
            "in": "body",
            "required": true,
            "description": "Request to generate fiscal Information folio.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalInfoFolioCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Provides information which is used for fiscal response processing.",
            "schema": {
              "$ref": "#/definitions/fiscalInformationFolio"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/fiscalPrinting": {
      "get": {
        "summary": "Get Fiscal Printing Details",
        "description": "You can use this API to get Fiscal Printing Details. <p><strong>OperationId:</strong>getValidateFiscalPrintingDetails</p>",
        "operationId": "getValidateFiscalPrintingDetails",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "description": "The folio window where this settlement is applied.",
            "type": "integer"
          },
          {
            "name": "folioType",
            "in": "query",
            "required": false,
            "description": "Folio Type",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fetchInstruction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "Reservation Related information.",
            "items": {
              "type": "string",
              "enum": [
                "Paymentmethod",
                "Profile",
                "Foliotype",
                "Reservation"
              ]
            },
            "required": false
          },
          {
            "name": "profileIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "fiscalServiceMode",
            "in": "query",
            "type": "string",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "Mode when fiscal printing is called.",
            "items": {
              "type": "string",
              "enum": [
                "CheckOut",
                "Credit",
                "Deposit",
                "Invoice",
                "PasserBy",
                "PostIt"
              ]
            },
            "required": false
          },
          {
            "name": "cashieringEventType",
            "in": "query",
            "required": false,
            "description": "Cashiering event triggered.",
            "uniqueItems": true,
            "type": "string",
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "ChargesAndPayments",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ]
          },
          {
            "name": "balance",
            "in": "query",
            "required": false,
            "description": "A monetary amount",
            "type": "number"
          },
          {
            "name": "queueName",
            "in": "query",
            "required": false,
            "description": "Folio Queue Name",
            "type": "string"
          },
          {
            "name": "debitFolio",
            "in": "query",
            "required": false,
            "description": "This flag indicates if the folio to be generated is a Debit Folio.",
            "type": "boolean"
          },
          {
            "name": "simpleFolio",
            "in": "query",
            "required": false,
            "description": "This flag indicates if the folio to be generated is a Simple Folio.",
            "type": "boolean"
          },
          {
            "name": "manualFolioNo",
            "in": "query",
            "required": false,
            "description": "User provided folio number.",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Check if it will call fiscal printing or not.",
            "schema": {
              "$ref": "#/definitions/fiscalCallStatus"
            }
          },
          "204": {
            "description": "ValidateFiscalPrintingDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/fiscalSupportingDocuments": {
      "get": {
        "summary": "Get supporting documents details.",
        "description": "This API is used to get the list of supporting documents for the reservations. <p><strong>OperationId:</strong>getSupportingDocuments</p> <p>The maximum allowable limit for this API is <strong>20</strong>.</p>",
        "operationId": "getFiscalSupportingDocuments",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel."
          },
          {
            "name": "surname",
            "in": "query",
            "required": false,
            "description": "Family name, last name.",
            "type": "string"
          },
          {
            "name": "givenName",
            "in": "query",
            "required": false,
            "description": "Given name, first name or names.",
            "type": "string"
          },
          {
            "name": "confirmationNo",
            "in": "query",
            "required": false,
            "description": "Confirmation number of the reservation.",
            "type": "string"
          },
          {
            "name": "arrivalStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "arrivalEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "departureStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "departureEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "roomId",
            "in": "query",
            "required": false,
            "description": "Room number of the the transaction.",
            "type": "string"
          },
          {
            "name": "documentType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Supporting document type.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "InformationFolio",
                "ProformaFolio",
                "ConfirmationLetter"
              ]
            },
            "required": false
          },
          {
            "name": "documentNo",
            "in": "query",
            "required": false,
            "description": "Supporting document number.",
            "type": "string"
          },
          {
            "name": "pendingDocumentsOnly",
            "in": "query",
            "required": false,
            "description": "Indicator to fetch only failed supporting documents, that were not sent successfully to the fiscal partner.",
            "type": "boolean"
          },
          {
            "name": "fromCreateDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of the creation.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records the API should return. Default is 50",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index of the page being requested. If the index goes out of the bounds of the total set count, no data will be returned.",
            "type": "integer"
          },
          {
            "name": "orderBy",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "enum": [
                "ArrivalDate",
                "DepartureDate",
                "Room",
                "DocumentUpdatedDate"
              ]
            },
            "required": false
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "default": [
              "Desc"
            ],
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Asc",
                "Desc"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the supporting documents.",
            "schema": {
              "$ref": "#/definitions/fiscalSupportingDocumentsResponse"
            }
          },
          "204": {
            "description": "Supporting Documents not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Operation to resend the failed supporting documents to fiscal partner.",
        "description": "This API is used to resend the failed supporting documents. <p><strong>OperationId:</strong>resendSupportingDocument</p>",
        "operationId": "resendSupportingDocument",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fiscalSupportingDocumentCriteria",
            "in": "body",
            "required": true,
            "description": "Request to send supporting document.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalSupportingDocumentCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/folio/{folioId}/convert": {
      "put": {
        "summary": "Convert Folio",
        "description": "You can use this API to Convert folio.This API is deprecated. Please use putFolioType instead <p><strong>OperationId:</strong>convertFolio</p>",
        "operationId": "convertFolio",
        "deprecated": true,
        "parameters": [
          {
            "name": "folioId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the folio"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "convertFolioCriteria",
            "in": "body",
            "required": true,
            "description": "Request to convert folio from a Non Fiscal Folio type to a Fiscal Folio Type. Functionality is used in Italy and is only available when the country mode is set to Italy.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/convertFolioCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response to the request to Convert Folio. Includes the new converted folio information.",
            "schema": {
              "$ref": "#/definitions/convertFolioDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/folio/{folioId}/fiscalCommands": {
      "post": {
        "summary": "Create Fiscal Invoice",
        "description": "You can use this API to create Fiscal Invoice.<br><p><strong><mark>This API is deprecated. Please use postFiscalCommandInvoice instead</mark></strong></p> <p><strong>OperationId:</strong>postFiscalInvoice</p>",
        "operationId": "postFiscalInvoice",
        "deprecated": true,
        "parameters": [
          {
            "name": "folioId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the folio."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fiscalFolioCriteria",
            "in": "body",
            "required": true,
            "description": "Request to generate commands and communicate with fiscal service from fiscal terminals screen..",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/folioHistory": {
      "get": {
        "summary": "Get folio history",
        "description": "You can use this API to get folio history for a reservation. <p><strong>OperationId:</strong>getFolioHistory</p>",
        "operationId": "getFolioHistory",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "aR",
            "in": "query",
            "required": false,
            "description": "Indicates if search includes AR Folios.",
            "type": "boolean"
          },
          {
            "name": "checkOut",
            "in": "query",
            "required": false,
            "description": "Indicates if search includes Check Out Folios.",
            "type": "boolean"
          },
          {
            "name": "creditBill",
            "in": "query",
            "required": false,
            "description": "Indicates if search includes Credit Bill Folios.",
            "type": "boolean"
          },
          {
            "name": "supplementalFolio",
            "in": "query",
            "required": false,
            "description": "Indicates if search includes Debit Bill Folios.",
            "type": "boolean"
          },
          {
            "name": "includeAssociatedFolios",
            "in": "query",
            "required": false,
            "description": "Indicates if search result includes Associated Bills and is only applied when Folio History for a particular reservation (i.e. ReservationID has a value) is requested.",
            "type": "boolean"
          },
          {
            "name": "noShow",
            "in": "query",
            "required": false,
            "description": "Indicates if search includes No Show Folios.",
            "type": "boolean"
          },
          {
            "name": "offlineFolio",
            "in": "query",
            "required": false,
            "description": "Indicates if search includes Offline Folios.",
            "type": "boolean"
          },
          {
            "name": "passerBy",
            "in": "query",
            "required": false,
            "description": "Indicates if search includes Passer By Folios.",
            "type": "boolean"
          },
          {
            "name": "postIt",
            "in": "query",
            "required": false,
            "description": "Indicates if search includes Post-It Folios.",
            "type": "boolean"
          },
          {
            "name": "videoCheckOut",
            "in": "query",
            "required": false,
            "description": "Indicates if search includes Video Check Out Folios.",
            "type": "boolean"
          },
          {
            "name": "folioDate",
            "in": "query",
            "required": false,
            "description": "Folio History Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "reservationIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "room",
            "in": "query",
            "required": false,
            "description": "Room Number to which this record applies.",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Family name, last name or Company Name.",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "required": false,
            "description": "Given name, first name or names.",
            "type": "string"
          },
          {
            "name": "creditCardNo",
            "in": "query",
            "required": false,
            "description": "Credit card number used.",
            "type": "string"
          },
          {
            "name": "folioNo",
            "in": "query",
            "required": false,
            "description": "Folio Number.",
            "type": "string"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice Number.",
            "type": "number"
          },
          {
            "name": "addresseeName",
            "in": "query",
            "required": false,
            "description": "Addressee Name filter. Works with the Addressee Functionality.",
            "type": "string"
          },
          {
            "name": "fiscalFolioNo",
            "in": "query",
            "required": false,
            "description": "Fiscal Folio Number filter. Works with the Fiscal Folio Number Functionality.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "partnerFiscalFolioStatusCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "customNumber",
            "in": "query",
            "required": false,
            "description": "Custom number",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch Folio History.",
            "schema": {
              "$ref": "#/definitions/folioHistoryResponse"
            }
          },
          "204": {
            "description": "FolioHistory not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/folioPrinters": {
      "get": {
        "summary": "Get folio printers",
        "description": "You can use this API to get folio printers. <p><strong>OperationId:</strong>getFolioPrinters</p>",
        "operationId": "getFolioPrinters",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "allFolioWindow",
            "in": "query",
            "required": false,
            "description": "Flag to decide if folios is to be generated for all windows in addition to the one requested with applicable postings and zero balance. If any of the windows have non-zero balance then folios are not generated for other windows.",
            "type": "boolean"
          },
          {
            "name": "correction",
            "in": "query",
            "required": false,
            "description": "Correction flag",
            "type": "boolean"
          },
          {
            "name": "debitFolio",
            "in": "query",
            "required": false,
            "description": "Indicates the type of folio to be generated",
            "type": "boolean"
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "manualFolioNo",
            "in": "query",
            "required": false,
            "description": "Manual Folio Number used for settlement during checkout",
            "type": "integer"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "fiscalTerminalId",
            "in": "query",
            "required": false,
            "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
            "type": "string"
          },
          {
            "name": "eventType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ]
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Description of currency Code.",
            "type": "string"
          },
          {
            "name": "exchangeRate",
            "in": "query",
            "required": false,
            "description": "Description of exchange rate.",
            "type": "number"
          },
          {
            "name": "associatedBillNumber",
            "in": "query",
            "required": false,
            "description": "The bill number of the original bill for which the Credit Bill is being generated.",
            "type": "number"
          },
          {
            "name": "associatedBillFolioType",
            "in": "query",
            "required": false,
            "description": "The folio type of the original bill for which the Credit Bill is being generated.",
            "type": "string"
          },
          {
            "name": "associatedBillQueueName",
            "in": "query",
            "required": false,
            "description": "The folio number queue(used in certain countries) of the original bill for which the Credit Bill is being generated.",
            "type": "string"
          },
          {
            "name": "associatedBillFiscalBillNumber",
            "in": "query",
            "required": false,
            "description": "The Fiscal Folio Bill Number(from a Fiscal System) of the original bill for which the Credit Bill is being generated.",
            "type": "string"
          },
          {
            "name": "associatedBillGenerationDate",
            "in": "query",
            "required": false,
            "description": "The bill generation date of the original bill for which the Credit Bill is being generated.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "folioType",
            "in": "query",
            "required": false,
            "description": "Folio Type to be assigned to generated folio. This is a country requirement.",
            "type": "string"
          },
          {
            "name": "generateFiscalFolio",
            "in": "query",
            "required": false,
            "description": "Fiscal folio flag to call fiscal folio web service after folio generation.",
            "type": "boolean"
          },
          {
            "name": "queueName",
            "in": "query",
            "required": false,
            "description": "Folio Queue name.",
            "type": "string"
          },
          {
            "name": "folioSeqId",
            "in": "query",
            "required": false,
            "description": "Fiscal Folio sequence ID stored in queue table.",
            "type": "integer"
          },
          {
            "name": "fiscalFolioInstruction",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Action to generate Offline folio when no reponse is received from fiscal service.",
            "uniqueItems": true,
            "enum": [
              "Retry",
              "New",
              "Void",
              "Offline"
            ]
          },
          {
            "name": "transactionServiceType",
            "in": "query",
            "required": false,
            "description": "Contains transaction service type.",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch the Folio Printers applicable for a Folio, based on the",
            "schema": {
              "$ref": "#/definitions/folioPrinters"
            }
          },
          "204": {
            "description": "FolioPrinters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/folioTypeNames": {
      "get": {
        "summary": "Get Folio Type Name",
        "description": "You can use this API to get Folio Type Name. <p><strong>OperationId:</strong>getFolioTypeName</p>",
        "operationId": "getFolioTypeName",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "internalFolioWindowId",
            "in": "query",
            "required": false,
            "description": "The internal folio window Id for the reservation to determine the guest language details.",
            "type": "string"
          },
          {
            "name": "languageCode",
            "in": "query",
            "required": false,
            "description": "The Filter language code which will be used to retrieve the report name set for this language.",
            "type": "string"
          },
          {
            "name": "folioTypeName",
            "in": "query",
            "required": false,
            "description": "The Folio Type for which the details are requested.",
            "type": "string"
          },
          {
            "name": "folioReportGroup",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The Folio Report Group name. The folio report will be defined under each group and based on where the folio has to be printed, Opera will pick up the correct folio report name to print.",
            "uniqueItems": true,
            "enum": [
              "Guest",
              "Group",
              "AccountsReceivables",
              "PasserBy",
              "PostIt",
              "Expense",
              "CorrectionHeader"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch Folio Type Information.",
            "schema": {
              "$ref": "#/definitions/folioTypeNameInfo"
            }
          },
          "204": {
            "description": "FolioTypeName not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/folioTypes": {
      "get": {
        "summary": "Get Folio Types",
        "description": "You can use this API to get Folio Types. <p><strong>OperationId:</strong>getFolioTypes</p>",
        "operationId": "getFolioTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "includeCompress",
            "in": "query",
            "required": false,
            "description": "Folio to be use for compress bills.",
            "type": "boolean"
          },
          {
            "name": "includeCredit",
            "in": "query",
            "required": false,
            "description": "Folio to be use for credit bills.",
            "type": "boolean"
          },
          {
            "name": "folioType",
            "in": "query",
            "required": false,
            "description": "Folio Type.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Information regarding the Folio Types.",
            "schema": {
              "$ref": "#/definitions/folioTypesInfo"
            }
          },
          "204": {
            "description": "FolioTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/folios/{folioId}/fiscal": {
      "put": {
        "summary": "Process Fiscal retry",
        "description": "You can use this API to process fiscal retry status. <p><strong>OperationId:</strong>processFiscalRetry</p>",
        "operationId": "processFiscalRetry",
        "parameters": [
          {
            "name": "folioId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the folio."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "processFiscalRetry",
            "in": "body",
            "required": true,
            "description": "The request object to process fiscal retry functionality.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/processFiscalRetry"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "The response object to send back the fiscal service response to opera.",
            "schema": {
              "$ref": "#/definitions/processFiscalRetryStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/passerBySale": {
      "post": {
        "summary": "Create passer by sale",
        "description": "You can use this API to create passer by sale. <p><strong>OperationId:</strong>postPasserBySale</p>",
        "operationId": "postPasserBySale",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "passerBySalesCriteria",
            "in": "body",
            "required": true,
            "description": "Request to post a set of charges, payments and generate a bill for a PasserBy or for the Post-It functionality . A PasserBy is someone who is not staying at the Property. A PasserBy transaction requires a Profile in Opera for whom the the folio is being created.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/passerBySalesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Details of the folio created.",
            "schema": {
              "$ref": "#/definitions/passerBySale"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/payees/{payeeId}/taxNumber": {
      "put": {
        "summary": "Change Payee Tax Number",
        "description": "You can use this API to change Payee Tax Number. <p><strong>OperationId:</strong>putPayeeTaxNumber</p>",
        "operationId": "putPayeeTaxNumber",
        "parameters": [
          {
            "name": "payeeId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the payee"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "payeeTaxNumber",
            "in": "body",
            "required": true,
            "description": "Request to validate and change Payee Tax Number.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/payeeTaxNumber"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/policies/{policyId}/transactions/{transactionId}/deposit": {
      "put": {
        "summary": "Attach Deposit Policy to Payment",
        "description": "You can use this API to attach Deposit Policy to Payment. <p><strong>OperationId:</strong>attachDepositPolicyToPayment</p>",
        "operationId": "attachDepositPolicyToPayment",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "policyId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the policy"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "attachPolicyApplyCriteria",
            "in": "body",
            "required": true,
            "description": "Request to attach an existing Deposit Policy on a reservation towards an existing deposit payment on the same reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attachPolicyApplyCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/postingDates/date/postingSummary": {
      "get": {
        "summary": "Get Posting Summary",
        "description": "You can use this API to get posting Summary. <p><strong>OperationId:</strong>getPostingSummary</p>",
        "operationId": "getPostingSummary",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "includeGenerates",
            "in": "query",
            "required": false,
            "description": "Configuring this flag to be TRUE will return transactions that are auto generated like taxes.",
            "type": "boolean"
          },
          {
            "name": "postingDate",
            "in": "query",
            "required": false,
            "description": "The date on which the charge is posted.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "checkPostings",
            "in": "query",
            "required": false,
            "description": "When set to true,the summary of only the postings using checks will be fetched.",
            "type": "boolean"
          },
          {
            "name": "postingsByExternalSystem",
            "in": "query",
            "required": false,
            "description": "When set to true,the summary of only the postings done by external systems will be fetched.",
            "type": "boolean"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "description": "Currency in which the postings are done. If null,amounts posted in local currency will be fetched.",
            "type": "string"
          },
          {
            "name": "postingSummaryType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Enumeration Type of Posting Summary Information.",
            "uniqueItems": true,
            "enum": [
              "Postings",
              "Adjustments",
              "All"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch daily summary charges from Opera which are posted in Opera by external system.",
            "schema": {
              "$ref": "#/definitions/postingSummaryList"
            }
          },
          "204": {
            "description": "PostingSummary not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/prepaidCards": {
      "post": {
        "summary": "Create Prepaid Cards",
        "description": "You can use this API to create Prepaid Cards. <p><strong>OperationId:</strong>postPrepaidCards</p>",
        "operationId": "postPrepaidCards",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "prepaidCardCriteria",
            "in": "body",
            "required": true,
            "description": "Request type for Prepaid card creation process",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/prepaidCardCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/prepaidCards/activate": {
      "put": {
        "summary": "Operation to activate prepaid card.",
        "description": "You can use this API to activate Prepaid Card. <p><strong>OperationId:</strong>activatePrepaidCard</p>",
        "operationId": "activatePrepaidCard",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "activatePrepaidCard",
            "in": "body",
            "required": true,
            "description": "Request type for activate prepaid card.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/activatePrepaidCard"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/activatePrepaidCardStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/prepaidCards/cancel": {
      "put": {
        "summary": "Operation to cancel prepaid card transaction.",
        "description": "You can use this API to cancel PrepaidCard Transaction. <p><strong>OperationId:</strong>cancelPrepaidCardTransaction</p>",
        "operationId": "cancelPrepaidCardTransaction",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cancelPrepaidCardTransaction",
            "in": "body",
            "required": true,
            "description": "Request type for reload prepaid card.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cancelPrepaidCardTransaction"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/cancelPrepaidCardTransactionStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/prepaidCards/cashOut": {
      "put": {
        "summary": "Operation to cash out prepaid card.",
        "description": "You can use this API to cashOut Prepaid Card. <p><strong>OperationId:</strong>cashOutPrepaidCard</p>",
        "operationId": "cashOutPrepaidCard",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cashOutPrepaidCard",
            "in": "body",
            "required": true,
            "description": "Request type for cashout prepaid card.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashOutPrepaidCard"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/cashOutPrepaidCardStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/prepaidCards/reload": {
      "put": {
        "summary": "Operation to reload prepaid card.",
        "description": "You can use this API to reload Prepaid Card. <p><strong>OperationId:</strong>reloadPrepaidCard</p>",
        "operationId": "reloadPrepaidCard",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reloadPrepaidCard",
            "in": "body",
            "required": true,
            "description": "Request type for reload prepaid card.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reloadPrepaidCard"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/reloadPrepaidCardStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/creditCardWallet": {
      "get": {
        "summary": "credit card wallet",
        "description": "This API is used to fetch the credit card wallet from the specified hotel and profile. <p><strong>OperationId: getHotelCreditCardWallet</strong></p>",
        "operationId": "getHotelCreditCardWallet",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the profile"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to get Credit Card Wallet Information",
            "schema": {
              "$ref": "#/definitions/creditCardWallet"
            }
          },
          "204": {
            "description": "HotelCreditCardWallet not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/paymentMethods/creditCard/authorize": {
      "post": {
        "summary": "Authorize Credit Card Amount by Profile",
        "description": "You can use this API to authorize Credit Card Amount by Profile. <p><strong>OperationId:</strong>authorizeCreditCardAmountByProfile</p>",
        "operationId": "authorizeCreditCardAmountByProfile",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the profile"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "ccAuthorizationCriteria",
            "in": "body",
            "required": true,
            "description": "Request for a credit card authorization. An authorization request will be sent to the Credit Card Vendor as part of this request.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccAuthorizationCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response to the credit card authorization request.",
            "schema": {
              "$ref": "#/definitions/authorizationInfo"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/paymentMethods/creditCard/authorizeInstructions": {
      "get": {
        "summary": "Get CC Authorization Instructions by Profile",
        "description": "You can use this API to get Credit Card Authorization Instructions by Profile. <p><strong>OperationId:</strong>getCCAuthorizationInstructionsByProfile</p>",
        "operationId": "getCCAuthorizationInstructionsByProfile",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the profile"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "evaluateApprovalAmount",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the approval amount should be calculated before authorization. If this is true and if the amount is 0 the approval amount will be calculated based on the rules.",
            "type": "boolean"
          },
          {
            "name": "sourceOfAuthorization",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ]
          },
          {
            "name": "updateReservation",
            "in": "query",
            "required": false,
            "description": "Update the card details on the reservations for Chip and Pin Authorizations.",
            "type": "boolean"
          },
          {
            "name": "idContext",
            "in": "query",
            "default": "OPERA",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "default": "Reservation",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "profileIdIdContext",
            "in": "query",
            "default": "OPERA",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileIdType",
            "in": "query",
            "default": "Profile",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "description": "The folio window where this authorization is applied.",
            "type": "integer"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "paymentFolioView",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "track2Data",
            "in": "query",
            "required": false,
            "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
            "type": "string"
          },
          {
            "name": "storeToCreditCardWallet",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to the wallet.",
            "type": "boolean"
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "cardPresent",
            "in": "query",
            "required": false,
            "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
            "type": "boolean"
          },
          {
            "name": "citId",
            "in": "query",
            "required": false,
            "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
            "type": "string"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "cardIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "cardIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "cardIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "currentAuthorizedAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmountNeededAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "balanceAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "The authorization rule code.",
            "type": "integer"
          },
          {
            "name": "amountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "amountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "percent",
            "in": "query",
            "required": false,
            "description": "A percentage value if the authorization rule is percentage based.",
            "type": "number"
          },
          {
            "name": "emailFolio",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "uniqueIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "uniqueIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "uniqueIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "createDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of the creation.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "creatorId",
            "in": "query",
            "required": false,
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "type": "string"
          },
          {
            "name": "emailAddress",
            "in": "query",
            "required": false,
            "description": "Defines the e-mail address.",
            "type": "string"
          },
          {
            "name": "emailFormat",
            "in": "query",
            "required": false,
            "description": "Supported Email format.",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ]
          },
          {
            "name": "lastModifierId",
            "in": "query",
            "required": false,
            "description": "Identifies the last software system or person to modify a record.",
            "type": "string"
          },
          {
            "name": "lastModifyDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of last modification.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderSequence",
            "in": "query",
            "required": false,
            "description": "Display Order sequence.",
            "type": "number"
          },
          {
            "name": "primaryInd",
            "in": "query",
            "required": false,
            "description": "When true, indicates a primary information.",
            "type": "boolean"
          },
          {
            "name": "purgeDate",
            "in": "query",
            "required": false,
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "emailType",
            "in": "query",
            "required": false,
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "type": "string"
          },
          {
            "name": "typeDescription",
            "in": "query",
            "required": false,
            "description": "Describes the Type code",
            "type": "string"
          },
          {
            "name": "approvalCode",
            "in": "query",
            "required": false,
            "description": "The approval code authenticates the authorization.",
            "type": "string"
          },
          {
            "name": "originalAuthSequence",
            "in": "query",
            "required": false,
            "description": "Unique Authorization Sequence for the authorization and settlement.",
            "type": "integer"
          },
          {
            "name": "vendorTranId",
            "in": "query",
            "required": false,
            "description": "Vendor transaction id for the authorization.",
            "type": "string"
          },
          {
            "name": "approvalAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "terminalId",
            "in": "query",
            "required": false,
            "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected.",
            "type": "string"
          },
          {
            "name": "incidentalAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "incidentalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the fetch authorization instructions. Based on the criteria requested, the response can contain information required to send a credit card authorization to the Vendor.",
            "schema": {
              "$ref": "#/definitions/ccAuthorizationInstructions"
            }
          },
          "204": {
            "description": "CCAuthorizationInstructionsByProfile not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/receiptHistory": {
      "get": {
        "summary": "Get Receipt History",
        "description": "You can use this API to get Receipt History. <p><strong>OperationId:</strong>getReceiptHistory</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getReceiptHistory",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "description": "Receipt History Date Range(from).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "description": "Receipt History Date Range(to).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Family name, last name or Company Name.",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "required": false,
            "description": "Given name, first name or names.",
            "type": "string"
          },
          {
            "name": "receiptTypeName",
            "in": "query",
            "required": false,
            "description": "Receipt Type.",
            "type": "string"
          },
          {
            "name": "taxInvoice",
            "in": "query",
            "required": false,
            "description": "Tax Invoice Number.",
            "type": "string"
          },
          {
            "name": "receiptNo",
            "in": "query",
            "required": false,
            "description": "Receipt Number.",
            "type": "number"
          },
          {
            "name": "customNumber",
            "in": "query",
            "required": false,
            "description": "Custom number",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch Receipt History.",
            "schema": {
              "$ref": "#/definitions/receiptHistoryResponse"
            }
          },
          "204": {
            "description": "ReceiptHistory not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservation/{reservationId}/rateCode/{rateCode}": {
      "post": {
        "summary": "Create rate codes",
        "description": "You can use this API to create rate codes. <p><strong>OperationId:</strong>postRateCode</p>",
        "operationId": "postRateCode",
        "parameters": [
          {
            "name": "rateCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The Rate Code which is to be posted on the Guest Folio."
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "postRateCodeCriteria",
            "in": "body",
            "required": true,
            "description": "Operation to post a Rate Code amount to the Reservation. Based on the criteria, Products(Packages) which are included as part of the Rate Code may be posted along with the room rate amount.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postRateCodeCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the operation that posts a Rate Code amount on the reservation.",
            "schema": {
              "$ref": "#/definitions/postedRateCode"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservation/{reservationId}/rateCode/{rateCode}/action/validate": {
      "put": {
        "summary": "Change posted rate codes",
        "description": "You can use this API to change posted rate codes. <p><strong>OperationId:</strong>checkPostRateCode</p>",
        "operationId": "checkPostRateCode",
        "parameters": [
          {
            "name": "rateCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "The Rate Code which is to be posted on the Guest Folio."
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "postRateCodeCriteria",
            "in": "body",
            "required": true,
            "description": "Request to check if a Rate Code can be posted to the room manually. This will check if the Rate Code is valid, if the Products(Packages) which are defined as part of the Rate Code can be posted or reversed.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postRateCodeCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the request to check if a Rate Code can be posted to a reservation .",
            "schema": {
              "$ref": "#/definitions/checkedRateCode"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/billingCharges": {
      "post": {
        "summary": "Create Billing Charges in Batch",
        "description": "You can use this API to create Billing Charges in Batch. <p><strong>OperationId:</strong>postBillingChargesInBatch</p>",
        "operationId": "postBillingChargesInBatch",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "billingChargesInBatchCriteria",
            "in": "body",
            "required": true,
            "description": "Operation to post billing charge to list of reservations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingChargesInBatchCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Information regarding charges in batch result for each reservation.",
            "schema": {
              "$ref": "#/definitions/postedBillingChargesInBatch"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/cCSettlements": {
      "get": {
        "summary": "Get batch CC Settlements",
        "description": "You can use this API to get batch CC Settlements. <p><strong>OperationId:</strong>getBatchCCSettlements</p>",
        "operationId": "getBatchCCSettlements",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "offlineSettlement",
            "in": "query",
            "required": false,
            "description": "fetch only offline settlements.",
            "type": "boolean"
          },
          {
            "name": "transactionDate",
            "in": "query",
            "required": false,
            "description": "Transaction Date associated with the transaction.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "guestName",
            "in": "query",
            "required": false,
            "description": "Guest name associated with the transaction.",
            "type": "string"
          },
          {
            "name": "roomId",
            "in": "query",
            "required": false,
            "description": "Room number associated with the transaction.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for credit card settlements.",
            "schema": {
              "$ref": "#/definitions/ccBatchSettlements"
            }
          },
          "204": {
            "description": "BatchCCSettlements not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/vouchers": {
      "get": {
        "summary": "Get the list of vouchers generated from a list of reservations.",
        "description": "This API is used to fetch the list of vouchers from a list of reservations. <p><strong>OperationId:</strong>getReservationsVouchers</p>",
        "operationId": "getReservationsVouchers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "guestId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to get the Reservation vouchers.",
            "schema": {
              "$ref": "#/definitions/reservationVouchersType"
            }
          },
          "204": {
            "description": "Get reservation vouchers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/additionalTaxes": {
      "get": {
        "summary": "Get additional Taxes",
        "description": "You can use this API to get Additional Taxes. <p><strong>OperationId:</strong>getAdditionalTaxes</p>",
        "operationId": "getAdditionalTaxes",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "description": "Folio Window.",
            "type": "integer"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Currency code on which tax is to be calculated",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object containing additional tax information.",
            "schema": {
              "$ref": "#/definitions/additionalTaxesDetails"
            }
          },
          "204": {
            "description": "AdditionalTaxes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/advancePaymentBalance": {
      "get": {
        "summary": "Get advance payment balance",
        "description": "You can use this API to get advance payment balance. <p><strong>OperationId:</strong>getAdvancePaymentBalance</p>",
        "operationId": "getAdvancePaymentBalance",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "description": "From date of reservation.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "numberOfNights",
            "in": "query",
            "required": false,
            "description": "Number of nights to calculate advance payment.",
            "type": "integer"
          },
          {
            "name": "eventType",
            "in": "query",
            "required": false,
            "description": "Event to which this process will be logged.",
            "uniqueItems": true,
            "type": "string",
            "enum": [
              "AdvanceBill",
              "Deposit",
              "CheckIn"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the advance payment balance.",
            "schema": {
              "$ref": "#/definitions/advancePaymentBalance"
            }
          },
          "204": {
            "description": "AdvancePaymentBalance not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/advanceRoomCharges": {
      "post": {
        "summary": "Create advance Room Charges",
        "description": "You can use this API to create advance Room Charges. <p><strong>OperationId:</strong>postAdvanceRoomCharges</p>",
        "operationId": "postAdvanceRoomCharges",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "advanceRoomCharges",
            "in": "body",
            "required": true,
            "description": "Request to post the Room Charges for a reservation in advance. This request posts the Room Charges for a reservation for tonight or for many nights starting from the last posted night. This can also be used to verify if the reservation has already been charged for the full stay. Setting the Verify flag will return details regarding the last Room Charge posted date and if there are any available dates for which the room charges can be posted in advance. Room Charges cannot be posted for dates prior to the business date of the resort. To make the actual posting, the verification flag should be false.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/advanceRoomCharges"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the generate advance folio request. Post Advance Room Charges Request can return the below error codes : FOF00065 - Reservation ID or Resort was not supplied. FOF00147 - Reservation is currently not In-House. FOF00148 - Date range requested is not valid. FOF00149 - Advance Room Charges Posting was not completed successfully as there was an Error during posting. FOF00150 - Room Charges have already been posted for the requested dates. FOF00151 - Advance Room Charges could not be completed {the error message if any}.",
            "schema": {
              "$ref": "#/definitions/advanceRoomChargesReservationInfo"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "delete": {
        "summary": "Delete Advance Folio Transactions",
        "description": "You can use this API to reverse the Advance Folio Transactions on a reservation. As part of reversal, the actual charges may not be deleted but only an offset will be posted.<p><strong>OperationId:</strong>reverseAdvanceFolio</p>",
        "operationId": "deleteAdvanceRoomCharges",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/alerts": {
      "get": {
        "summary": "Get Alert Notices",
        "description": "You can use this API to get Alert Notices.<br><p><strong><mark>This API is deprecated.</mark></strong></p> <p><strong>OperationId:</strong>getAlerts</p>",
        "operationId": "getAlerts",
        "deprecated": true,
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "alertArea",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "CheckIn",
              "CheckOut",
              "Reservation",
              "Billing",
              "InHouse"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response with the fetched alerts, includes global alerts.",
            "schema": {
              "$ref": "#/definitions/alertNotices"
            }
          },
          "204": {
            "description": "Alerts not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/authorizationHistory": {
      "get": {
        "summary": "Get authorization history",
        "description": "You can use this API to get authorization history. <p><strong>OperationId:</strong>getAuthorizationHistory</p>",
        "operationId": "getAuthorizationHistory",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "includeAuthorizations",
            "in": "query",
            "required": false,
            "description": "A flag which indicates whether authorizations should be included in the returned list.",
            "type": "boolean"
          },
          {
            "name": "includePayments",
            "in": "query",
            "required": false,
            "description": "A flag which indicates whether payments should be included in the returned list.",
            "type": "boolean"
          },
          {
            "name": "includeRefunds",
            "in": "query",
            "required": false,
            "description": "A flag which indicates whether refunds should be included in the returned list.",
            "type": "boolean"
          },
          {
            "name": "includeFailures",
            "in": "query",
            "required": false,
            "description": "A flag which indicates whether failures should be included in the returned list.",
            "type": "boolean"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "transactionType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "The result element containing a history list of credit card authorizations for a particular reservation, filtered by the requested criteria.",
            "schema": {
              "$ref": "#/definitions/authorizationHistory"
            }
          },
          "204": {
            "description": "AuthorizationHistory not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/charges": {
      "get": {
        "summary": "Get Billing Charges",
        "description": "You can use this API to get post Billing Charges. <p><strong>OperationId:</strong>getPostBillingCharges</p>",
        "operationId": "getPostBillingCharges",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "chargeCashierId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction Code to post.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Article ID.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "postingQuantity",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Quantity to post to the folio.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "postingReference",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "postingRemark",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "checkNumber",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates the Cheque number.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "arrangementCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Corrected arrangement code from the package associated to this transaction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "applyRoutingInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Apply room routing when making this posting.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "usePackageAllowance",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Use the applicable package allowance when making this posting.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "autoPosting",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "True indicates the Transaction Code is allowed to be posted automatically.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "option",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is the Default option. Operation checks if charges can be posted to the reservation based on the status of the reservation.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "PackageAllowance",
                "RoomRouting",
                "PostingStatus"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response when checking or inquiring the available options for a set of billing charges.",
            "schema": {
              "$ref": "#/definitions/billingChargesStatus"
            }
          },
          "204": {
            "description": "PostBillingCharges not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Post Charge to a folio",
        "description": "You can use this API to post a charge to a folio window. <p><strong>OperationId:</strong>postBillingCharges</p>",
        "operationId": "postBillingCharges",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "billingCharges",
            "in": "body",
            "required": true,
            "description": "Request to post a charge on a reservation's folio.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingCharges"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response notifying if the posting of a charge to a reservation was successful.",
            "schema": {
              "$ref": "#/definitions/billingChargesDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/chargesAndPayments": {
      "post": {
        "summary": "Post charges and payments on a reservation",
        "description": "You can use this API to post charges and payments on a reservation.This operation can be used to enforce Payment for additional charges posted on the reservation <p><strong>OperationId:</strong>postChargesAndPayments</p>",
        "operationId": "postChargesAndPayments",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "chargesAndPaymentsCriteria",
            "in": "body",
            "required": true,
            "description": "Request to post charges and payments on a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/chargesAndPaymentsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/check/{checkNumber}/charges": {
      "post": {
        "summary": "Pre-validate the Billing Charge",
        "description": "You can use this API to validate the posting prior to posting the charge to the folio <p><strong>OperationId:</strong>postBillingCheckCharges</p>",
        "operationId": "postBillingCheckCharges",
        "parameters": [
          {
            "name": "checkNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique number of the check."
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "billingCheckChargesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for PostBillingCheckCharges operation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingCheckChargesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/checkOuts": {
      "post": {
        "summary": "Check out a guest",
        "description": "This API enables you to check out a guest reservation which is in due out status, with options to update the room's housekeeping status and set a flag to email the guests folio. <p><strong>OperationId:</strong>postCheckOut</p>",
        "operationId": "postCheckOut",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservation",
            "in": "body",
            "required": true,
            "description": "Checkout request can be used to verify a reservation for checkout and do an actual checkout. In case the verificationOnly attribute is sent false, the operation will perform an actual checkout. In case the verificationOnly attribute is sent true, the operation goes through the reservation in question and verifies if it's Ok to checkout, otherwise the verification status element will provide you the verification code. The verification codes are described in the documentation of verificationOnly attribute.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservation"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/checkOuts/reinstate": {
      "put": {
        "summary": "Reinstate Checked Out Reservation",
        "description": "You can use this API to reinstate Checked Out Reservation. <p><strong>OperationId:</strong>reinstateCheckOut</p>",
        "operationId": "reinstateCheckOut",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reinstateCheckedOutReservation",
            "in": "body",
            "required": true,
            "description": "Request to reinstate checkout reservation in order to post additional transactions, etc.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reinstateCheckedOutReservation"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/comp/folios/autoSettlements": {
      "put": {
        "summary": "Operation to auto settle comp folios.",
        "description": "You can use this API to auto Settle CompFolios <p><strong>OperationId:</strong>autoSettleCompFolios</p>",
        "operationId": "autoSettleCompFolios",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "autoSettleCompFolios",
            "in": "body",
            "required": true,
            "description": "Request to auto settle comp folios. OPERA will reference the 'Default Comp Payment Method' setting to settle the folio if no authorizer AR account is associated with the folio.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoSettleCompFolios"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for auto settle comp folios. This includes collection of auto settled comp folios.",
            "schema": {
              "$ref": "#/definitions/autoSettleCompFoliosStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/compRedemptionPostings": {
      "post": {
        "summary": "Operation to post complimentary bucket redemptions for a guest having PTS Membership Type",
        "description": "You can use this API to post complimentary bucket redemptions for a guest having PTS Membership Type <p><strong>OperationId:</strong>postCompRedemptions</p>",
        "operationId": "postCompRedemptions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "postCompRedemptions",
            "in": "body",
            "required": true,
            "description": "Request type of Complimentary Bucket Redemptions posting.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postCompRedemptions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/compRedemptionReversals": {
      "post": {
        "summary": "Operation to reverse complimentary bucket redemptions for a guest having PTS Membership Type",
        "description": "You can use this API to reverse complimentary bucket redemptions for a guest having PTS Membership Type <p><strong>OperationId:</strong>reverseCompRedemptions</p>",
        "operationId": "reverseCompRedemptions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reverseCompRedemptions",
            "in": "body",
            "required": true,
            "description": "Request type of Complimentary Bucket Redemptions reversal.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reverseCompRedemptions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/deferredTaxesProcess": {
      "post": {
        "summary": "Request to submit a job to post the deferred taxes.",
        "description": "Request to submit a job to post the deferred taxes. <p><strong>OperationId:</strong>postDeferredTaxesProcess</p>",
        "operationId": "postDeferredTaxesProcess",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "deferredTaxesProcess",
            "in": "body",
            "required": true,
            "description": "Request to submit a job to post the deferred taxes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/deferredTaxesProcess"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response containing the job identifier to post the deferred taxes. Returns appropriate warnings in case if deferred tax is not enabled for the hotel or deferred tax is enabled but the reservation has deferred taxes already posted or currently under process",
            "schema": {
              "$ref": "#/definitions/deferredTaxesProcessDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/deposit": {
      "post": {
        "summary": "Process Reservations deposit",
        "description": "You can use this API to Process reservations deposit. <p><strong>OperationId:</strong>processReservationDeposit</p>",
        "operationId": "processReservationDeposit",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationDepositCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to process reservation deposit.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationDepositCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/depositFolios": {
      "post": {
        "summary": "Create Deposit Folio",
        "description": "You can use this API to create Deposit Folio. <p><strong>OperationId:</strong>postDepositFolio</p>",
        "operationId": "postDepositFolio",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "depositFolioCriteria",
            "in": "body",
            "required": true,
            "description": "Request to create a Deposit Folio for a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositFolioCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response to the request to create a Deposit Folio for a reservation.",
            "schema": {
              "$ref": "#/definitions/postedDepositFolio"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/depositMaturity": {
      "get": {
        "summary": "Get Deposit Maturity Information",
        "description": "You can use this API to get Deposit Maturity Information. <p><strong>OperationId:</strong>getDepositMaturityInfo</p>",
        "operationId": "getDepositMaturityInfo",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for deposit maturity information type.",
            "schema": {
              "$ref": "#/definitions/depositMaturityDetails"
            }
          },
          "204": {
            "description": "DepositMaturityInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/depositPayments": {
      "post": {
        "summary": "Create Deposit Payment",
        "description": "You can use this API to create Deposit Payment. <p><strong>OperationId:</strong>postDepositPayment</p>",
        "operationId": "postDepositPayment",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "depositPayment",
            "in": "body",
            "required": true,
            "description": "Request to post a deposit payment to a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositPayment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the post deposit payment request.",
            "schema": {
              "$ref": "#/definitions/depositedPayment"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "get": {
        "summary": "Get matured deposits",
        "description": "You can use this API to fetch matured deposits. <p><strong>OperationId:</strong>getMaturedDeposits</p>",
        "operationId": "getMaturedDeposits",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response of matured deposits.",
            "schema": {
              "$ref": "#/definitions/maturedDepositsDetails"
            }
          },
          "204": {
            "description": "MaturedDeposits not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/depositTransition": {
      "put": {
        "summary": "Transition Deposit to Guest Folio",
        "description": "You can use this API to Transfer Deposit to Guest Folio. <p><strong>OperationId:</strong>transitionDepositToGuestFolio</p>",
        "operationId": "transitionDepositToGuestFolio",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "depositToGuestFolio",
            "in": "body",
            "required": true,
            "description": "Request to post an existing deposit on a reservation to the Guest Folio for No Show or Cancelled Reservations. Deposits remain in the deposit ledger until Checkin/Checkout. In the case of No Show or Cancelled reservations they remain in the deposit ledger until this request is done.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositToGuestFolio"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "This element returns any automatically generated folios during Deposit Transfer. When the parameter \"Auto Generate Credit Bill for Deposit upon Check In\" is enabled, during deposit transfer,the credit bills are automatically generated for the deposits.",
            "schema": {
              "$ref": "#/definitions/depositTransitionStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/earlyDeparture": {
      "put": {
        "summary": "Change early Departure",
        "description": "You can use this API to change early Departure. <p><strong>OperationId:</strong>putForEarlyDeparture</p>",
        "operationId": "putForEarlyDeparture",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "earlyDeparture",
            "in": "body",
            "required": true,
            "description": "Request to change a reservation to an Early Departure. As part of this process the reservation will be changed to a Due Out status with the departure date being the current business date. Only Inhouse reservations can be changed to Early Departure. Before changing the reservation to early departure, rate restrictions on the rate code used and any allowances consumed by the guest for today will be checked. If there is a penalty applicable this can be posted to the reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/earlyDeparture"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/earlyDeparture/verify": {
      "get": {
        "summary": "Verify for early Departure",
        "description": "You can use this API to verify early Departure. <p><strong>OperationId:</strong>verifyForEarlyDeparture</p>",
        "operationId": "verifyForEarlyDeparture",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "ignoreCheckOnTieredRate",
            "in": "query",
            "required": false,
            "description": "Indicates if check has to be done for Rate Tiers.",
            "type": "boolean"
          },
          {
            "name": "ignoreRateRestriction",
            "in": "query",
            "required": false,
            "description": "Indicates if Rate Restriction check should be overridden.",
            "type": "boolean"
          },
          {
            "name": "postConsumedAllowanceToGuest",
            "in": "query",
            "required": false,
            "description": "Indicates if any allowance consumed by the guest for today can be posted to the Guest Folio. If this cannot be done then the Early Departure cannot proceed.",
            "type": "boolean"
          },
          {
            "name": "postEarlyDeparturePenalty",
            "in": "query",
            "required": false,
            "description": "Indicates if the early departure penalty should be posted .",
            "type": "boolean"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for Early departure verification. Contains information regarding early departure penalty amount if applicable and any errors or warnings as to why the early departure cannot be done. Possible error codes are: FOF00152: An early departure could result in a change to the room rate, due to the reduced length of stay. FOF00153: Exchange Rates not setup for {currency code} . FOF00155: The partially consumed package(s) will be charged to the guest account. FOF00156: There is a Rate Code Restriction for {restriction information}. FOF00157: The reservation status is not valid for an early departure. FOF00158: Early Departure is not required as the reservation is already in Due Out status.",
            "schema": {
              "$ref": "#/definitions/earlyDepartureInfo"
            }
          },
          "204": {
            "description": "verifyForEarlyDeparture not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/eligibleBillAmount": {
      "get": {
        "summary": "Get Eligible Bill Amount",
        "description": "Retrieves eligible bill amount in order to post redemption on a reservation folio <p><strong>OperationId:</strong>getEligibleBillAmount</p>",
        "operationId": "getEligibleBillAmount",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "description": "The folio window where this settlement is applied.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for Eligible Bill Amount. This object contains details related to amount that is eligible to redeem.",
            "schema": {
              "$ref": "#/definitions/amountEligible"
            }
          },
          "204": {
            "description": "EligibleBillAmount not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/fetchStagedTransactions": {
      "get": {
        "summary": "Get fetchStagedTransactions",
        "description": "This API is used to fetch the staged transactions for a given reservation. <p><strong>OperationId:</strong>getfetchStagedTransactions</p>",
        "operationId": "getfetchStagedTransactions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "required": false,
            "description": "Folio Window Number of the staged transactions.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to get the Reservation's staged comp transactions.",
            "schema": {
              "$ref": "#/definitions/stagedTransactions"
            }
          },
          "204": {
            "description": "fetchStagedTransactions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/finalCharges": {
      "post": {
        "summary": "Apply final Postings",
        "description": "You can use this API to apply final postings on a reservation. <p><strong>OperationId:</strong>applyFinalPostings</p>",
        "operationId": "applyFinalPostings",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "finalPostings",
            "in": "body",
            "required": true,
            "description": "Request to apply any final charges or payments to a reservation prior to checkout. This operation should be called prior to the guest settlement which would then reflect the balance the guest has to pay.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/finalPostings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/fiscalInfo": {
      "post": {
        "summary": "Post fiscal Info",
        "description": "API to generate CHECK OUT payload for a reservation",
        "operationId": "postFiscalInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "postFiscalInfoType",
            "in": "body",
            "required": true,
            "description": "Request to generate CHECK OUT payload for a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postFiscalInfoType"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/fiscalPrinting": {
      "get": {
        "summary": "Get Fiscal Printing Details",
        "description": "You can use this API to get Fiscal Printing Details.<br><p><strong><mark>This API is deprecated. Please use getValidateFiscalPrintingDetails instead</mark></strong></p> <p><strong>OperationId:</strong>getFiscalPrintingDetails</p>",
        "operationId": "getFiscalPrintingDetails",
        "deprecated": true,
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "description": "The folio window where this settlement is applied.",
            "type": "integer"
          },
          {
            "name": "folioType",
            "in": "query",
            "required": false,
            "description": "Folio Type",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fetchInstruction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "Reservation Related information.",
            "items": {
              "type": "string",
              "enum": [
                "Paymentmethod",
                "Profile",
                "Foliotype",
                "Reservation"
              ]
            },
            "required": false
          },
          {
            "name": "profileIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Check if it will call fiscal printing or not.",
            "schema": {
              "$ref": "#/definitions/fiscalCallStatus"
            }
          },
          "204": {
            "description": "FiscalPrintingDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/fixedCharges": {
      "get": {
        "summary": "Get Fixed Charges",
        "description": "You can use this API to get fixed Charges for a reservation. <p><strong>OperationId:</strong>getFixedCharges</p>",
        "operationId": "getFixedCharges",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response that contains either the fixed charges list if fetch was successful or error(s) if not.",
            "schema": {
              "$ref": "#/definitions/fixedChargesDetails"
            }
          },
          "204": {
            "description": "FixedCharges not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "put": {
        "summary": "Updates Fixed Charges ",
        "description": "You can use this API to update fixed Charges for a reservation. <p><strong>OperationId:</strong>updateFixedCharges</p>",
        "operationId": "updateFixedCharges",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fixedCharges",
            "in": "body",
            "required": true,
            "description": "Method to update fixed charges of a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fixedCharges"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "delete": {
        "summary": "Delete Fixed Charges ",
        "description": "You can use this API to remove fixed Charges for a reservation. <p><strong>OperationId:</strong>removeFixedCharges</p>",
        "operationId": "removeFixedCharges",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fixedChargeID",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Create Fixed Charges",
        "description": "You can use this API to create a fixed Charge for a reservation. <p><strong>OperationId:</strong>postFixedCharges</p>",
        "operationId": "postFixedCharges",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fixedCharges",
            "in": "body",
            "required": true,
            "description": "Method to create fixed charges of a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fixedCharges"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/flexibleBenefitPostings": {
      "post": {
        "summary": "Apply flexible benefit postings",
        "description": "You can use this API to apply flexible benefit postings. <p><strong>OperationId:</strong>applyFlexibleBenefitPostings</p>",
        "operationId": "applyFlexibleBenefitPostings",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "flexibleBenefitPostingsCriteria",
            "in": "body",
            "required": true,
            "description": "Apply Flexible Benefit Postings.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/flexibleBenefitPostingsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/folioTaxPayments": {
      "get": {
        "summary": "Get folio tax payments information",
        "description": "You can use this API to get folio tax payments information. <p><strong>OperationId:</strong>getFolioTaxPaymentsInfo</p>",
        "operationId": "getFolioTaxPaymentsInfo",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "track2Data",
            "in": "query",
            "required": false,
            "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
            "type": "string"
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmountNeededAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "balanceAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "The authorization rule code.",
            "type": "integer"
          },
          {
            "name": "amountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "amountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "percent",
            "in": "query",
            "required": false,
            "description": "A percentage value if the authorization rule is percentage based.",
            "type": "number"
          },
          {
            "name": "emailFolio",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "uniqueIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "uniqueIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "uniqueIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "createDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of the creation.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "creatorId",
            "in": "query",
            "required": false,
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "type": "string"
          },
          {
            "name": "emailAddress",
            "in": "query",
            "required": false,
            "description": "Defines the e-mail address.",
            "type": "string"
          },
          {
            "name": "emailFormat",
            "in": "query",
            "required": false,
            "description": "Supported Email format.",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ]
          },
          {
            "name": "lastModifierId",
            "in": "query",
            "required": false,
            "description": "Identifies the last software system or person to modify a record.",
            "type": "string"
          },
          {
            "name": "lastModifyDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of last modification.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderSequence",
            "in": "query",
            "required": false,
            "description": "Display Order sequence.",
            "type": "number"
          },
          {
            "name": "primaryInd",
            "in": "query",
            "required": false,
            "description": "When true, indicates a primary information.",
            "type": "boolean"
          },
          {
            "name": "purgeDate",
            "in": "query",
            "required": false,
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "emailType",
            "in": "query",
            "required": false,
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "type": "string"
          },
          {
            "name": "typeDescription",
            "in": "query",
            "required": false,
            "description": "Describes the Type code",
            "type": "string"
          },
          {
            "name": "approvalCode",
            "in": "query",
            "required": false,
            "description": "The approval code authenticates the authorization.",
            "type": "string"
          },
          {
            "name": "originalAuthSequence",
            "in": "query",
            "required": false,
            "description": "Unique Authorization Sequence for the authorization and settlement.",
            "type": "integer"
          },
          {
            "name": "vendorTranId",
            "in": "query",
            "required": false,
            "description": "Vendor transaction id for the authorization.",
            "type": "string"
          },
          {
            "name": "approvalAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "postingAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "postingAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "postingReference",
            "in": "query",
            "required": false,
            "description": "User-defined posting reference.",
            "type": "string"
          },
          {
            "name": "postingRemark",
            "in": "query",
            "required": false,
            "description": "User-defined posting remark.",
            "type": "string"
          },
          {
            "name": "comments",
            "in": "query",
            "required": false,
            "description": "User Defined Comments. Used for Deposit Payment postings.",
            "type": "string"
          },
          {
            "name": "applyCCSurcharge",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
            "type": "boolean"
          },
          {
            "name": "manualPaymentTaxInfoFolioWindowNo",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "transactionCode",
            "in": "query",
            "required": false,
            "description": "Billing Transaction Code of the Payment.",
            "type": "string"
          },
          {
            "name": "transactionDate",
            "in": "query",
            "required": false,
            "description": "Transaction Date of the Payment.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "transactionDescription",
            "in": "query",
            "required": false,
            "description": "Billing Transaction Description.",
            "type": "string"
          },
          {
            "name": "transactionNo",
            "in": "query",
            "required": false,
            "description": "Unique Transaction Identifier.",
            "type": "number"
          },
          {
            "name": "taxInvoiceNo",
            "in": "query",
            "required": false,
            "description": "The Tax Invoice for this payment.",
            "type": "string"
          },
          {
            "name": "paymentType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The types of Payment Tax transactions.",
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "FrontOffice",
              "CreditNote",
              "CityLedger",
              "AccountsReceivables",
              "NonVat"
            ]
          },
          {
            "name": "manualPaymentTaxAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "manualPaymentTaxCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "taxableAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "taxableAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "nonTaxableAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "nonTaxableAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "availableCreditAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "availableCreditCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "paymentDate",
            "in": "query",
            "required": false,
            "description": "The Payment Invoice date",
            "type": "string",
            "format": "date"
          },
          {
            "name": "taxFolioWindowNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "taxTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Billing Transaction Code of the Payment.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "taxTransactionDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction Date of the Payment.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "taxTransactionDescription",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Billing Transaction Description.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "taxTransactionNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "taxTaxInvoiceNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Tax Invoice for this payment.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "taxPaymentType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The types of Payment Tax transactions.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Deposit",
                "FrontOffice",
                "CreditNote",
                "CityLedger",
                "AccountsReceivables",
                "NonVat"
              ]
            },
            "required": false
          },
          {
            "name": "creditablePaymentTaxesAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "creditablePaymentTaxesCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "creditablePaymentTaxableAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "creditablePaymentTaxableCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "creditablePaymentNonTaxableAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "creditablePaymentNonTaxableCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "availableTaxCreditAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "availableTaxCreditCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "taxPaymentDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Payment Invoice date",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "terminalId",
            "in": "query",
            "required": false,
            "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
            "type": "string"
          },
          {
            "name": "overrideInsufficientCC",
            "in": "query",
            "required": false,
            "description": "Flag to allow a rebate by Credit Card",
            "type": "boolean"
          },
          {
            "name": "changeDueAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "changeDueAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "overrideARCreditLimit",
            "in": "query",
            "required": false,
            "description": "Flag to override account receivable credit limit",
            "type": "boolean"
          },
          {
            "name": "applyCurrencyTaxes",
            "in": "query",
            "required": false,
            "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
            "type": "boolean"
          },
          {
            "name": "vATOffset",
            "in": "query",
            "required": false,
            "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
            "type": "boolean"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Payment action to know from where the payment has been made.",
            "uniqueItems": true,
            "enum": [
              "Billing",
              "Settlefolio",
              "Deposit",
              "Compredemption",
              "Prepaidcardredemption",
              "Advancepayment"
            ]
          },
          {
            "name": "reservationIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "profileIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request for Payment Tax records for a reservation. Lists all the Payment Taxes for the reservation which are available.",
            "schema": {
              "$ref": "#/definitions/folioTaxPaymentsInfo"
            }
          },
          "204": {
            "description": "FolioTaxPaymentsInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/folios": {
      "get": {
        "summary": "Get folios",
        "description": "This API is used to fetch the folios for a given reservation. A guest reservation could have 1 or more folios per reservation. Folios will only exist for a reservation once the guest has checked into the hotel. <p><strong>OperationId:</strong>getFolio</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getFolio",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "guestPayOnly",
            "in": "query",
            "required": false,
            "description": "Flag to return the Folio Windows information where the Reservation Guest is the Payee, i.e the Folio Window is not Routed to another Reservation or another Profile.",
            "type": "boolean"
          },
          {
            "name": "includeFolioHistory",
            "in": "query",
            "required": false,
            "description": "This flag will notify the service if the folio history will also be returned or not.",
            "type": "boolean"
          },
          {
            "name": "reservationBalanceOnly",
            "in": "query",
            "required": false,
            "description": "This flag will notify the service if the reservation summary information will be returned. If TRUE then we will only return the reservation's outstanding balance.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "Posting details of each window.",
            "items": {
              "type": "string",
              "enum": [
                "Reservation",
                "Windowbalances",
                "Payment",
                "Payee",
                "Account",
                "Guestpay",
                "Notifications",
                "Transactioncodes",
                "Foliohistory",
                "Totalbalance",
                "Postings"
              ]
            },
            "required": false
          },
          {
            "name": "end",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The ending value of the date range.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates maximum number of records a Web Service should return.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "start",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The starting value of the date range.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "summaryOnly",
            "in": "query",
            "required": false,
            "description": "This flag will notify the service that transactional postings will not be returned.",
            "type": "boolean"
          },
          {
            "name": "groupType",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "CheckNo",
              "TransactionDate",
              "TransactionCode",
              "TransactionType"
            ],
            "description": "Grouping by Transactin Type."
          },
          {
            "name": "exchangeCurrency",
            "in": "query",
            "required": false,
            "description": "Currency to which the Credit and Debit Amounts will be converted for each Folio. The response will have the ExchangeAmounts element with the converted amounts. The Posting Exchange Rate of the current business date will be used for the conversion",
            "type": "string"
          },
          {
            "name": "calculateCollectingAgentTaxes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "vATOffset",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeDepositTaxes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "simpleFolio",
            "in": "query",
            "required": false,
            "description": "This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to get Financial Information for a Reservation",
            "schema": {
              "$ref": "#/definitions/folio"
            }
          },
          "204": {
            "description": "Folio not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "put": {
        "summary": "Close Reservation Folio",
        "description": "You can use this API to close the Reservation Folio on a reservation. <p><strong>OperationId:</strong>closeReservationFolio</p>",
        "operationId": "closeReservationFolio",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "closeFolioCriteria",
            "in": "body",
            "required": true,
            "description": "Request to close an Open Folio Reservation. The Property should be using the Open Folio Functionality to use this operation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/closeFolioCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Generate Folios",
        "description": "You can use this API to generate folios for a reservation. <p><strong>OperationId:</strong>generateFolio</p>",
        "operationId": "generateFolio",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "folioCriteria",
            "in": "body",
            "required": true,
            "description": "Generate Folio request can be used to create a folio for checked in reservation or reservation with open folios",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Generate Folio Response contains generated folio no and invoice number along or errors and warnings in case if folio couldn't be generated: FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation can't be found with the supplied hotel code and reservation id. FOF00123 - Folio window has a balance and folio cannot be generated. FOF00124 - The guest's reservation is not in a valid status for folio generation.",
            "schema": {
              "$ref": "#/definitions/generatedFolio"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/memberships/{membershipId}/awardTransactions": {
      "post": {
        "summary": "Post a membership award payment transaction.",
        "description": "Creates a new membership award payment transaction. <p><strong>OperationId:</strong>postAwardTransaction</p>",
        "operationId": "postAwardTransaction",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Unique ID of the hotel."
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Unique ID of the reservation."
          },
          {
            "name": "membershipId",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Membership number of the guest in the reservation."
          },
          {
            "name": "awardDetails",
            "in": "body",
            "required": true,
            "description": "Request object for creating an award transaction.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/awardPaymentDetails"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/packageAllowance/links": {
      "delete": {
        "summary": "Unlink reservation package allowance",
        "description": "You can use this API to unlink reservation package allowance. <p><strong>OperationId:</strong>unlinkReservationPackageAllowance</p>",
        "operationId": "unlinkReservationPackageAllowance",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/packageOptions": {
      "get": {
        "summary": "Get Reservation Package Options",
        "description": "You can use this API to get Reservation Package Options. <p><strong>OperationId:</strong>getReservationPackageOptions</p>",
        "operationId": "getReservationPackageOptions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to fetch reservation package options.",
            "schema": {
              "$ref": "#/definitions/reservationPackageOptions"
            }
          },
          "204": {
            "description": "ReservationPackageOptions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/paymentMethods/creditCard/authorize": {
      "post": {
        "summary": "Authorize Credit Card Amount",
        "description": "You can use this API to authorize Credit Card Amount by Reservation. <p><strong>OperationId:</strong>authorizeCreditCardAmount</p>",
        "operationId": "authorizeCreditCardAmount",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "ccAuthorizationCriteria",
            "in": "body",
            "required": true,
            "description": "Request for a credit card authorization. An authorization request will be sent to the Credit Card Vendor as part of this request.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccAuthorizationCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response to the credit card authorization request.",
            "schema": {
              "$ref": "#/definitions/authorizationInfo"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/paymentMethods/creditCard/authorize/manual": {
      "post": {
        "summary": "Register Manual Authorization",
        "description": "You can use this API to register Manual Authorization. <p><strong>OperationId:</strong>registerManualAuthorization</p>",
        "operationId": "registerManualAuthorization",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "ccManualAuthorizationCriteria",
            "in": "body",
            "required": true,
            "description": "Request for registering a Manual Authorization.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ccManualAuthorizationCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/paymentMethods/creditCard/authorizeInstructions": {
      "get": {
        "summary": "Get CC Authorization Instructions",
        "description": "You can use this API to get Credit Card Authorization Instructions by Reservation. <p><strong>OperationId:</strong>getCCAuthorizationInstructions</p>",
        "operationId": "getCCAuthorizationInstructions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "evaluateApprovalAmount",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the approval amount should be calculated before authorization. If this is true and if the amount is 0 the approval amount will be calculated based on the rules.",
            "type": "boolean"
          },
          {
            "name": "sourceOfAuthorization",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ]
          },
          {
            "name": "updateReservation",
            "in": "query",
            "required": false,
            "description": "Update the card details on the reservations for Chip and Pin Authorizations.",
            "type": "boolean"
          },
          {
            "name": "idContext",
            "in": "query",
            "default": "OPERA",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "default": "Reservation",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "profileIdIdContext",
            "in": "query",
            "default": "OPERA",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileIdType",
            "in": "query",
            "default": "Profile",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "description": "The folio window where this authorization is applied.",
            "type": "integer"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "paymentFolioView",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "track2Data",
            "in": "query",
            "required": false,
            "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
            "type": "string"
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "storeToCreditCardWallet",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to the wallet.",
            "type": "boolean"
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "cardPresent",
            "in": "query",
            "required": false,
            "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
            "type": "boolean"
          },
          {
            "name": "citId",
            "in": "query",
            "required": false,
            "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
            "type": "string"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "cardIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "cardIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "cardIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "currentAuthorizedAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmountNeededAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "balanceAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "The authorization rule code.",
            "type": "integer"
          },
          {
            "name": "amountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "amountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "percent",
            "in": "query",
            "required": false,
            "description": "A percentage value if the authorization rule is percentage based.",
            "type": "number"
          },
          {
            "name": "emailFolio",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "uniqueIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "uniqueIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "uniqueIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "createDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of the creation.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "creatorId",
            "in": "query",
            "required": false,
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "type": "string"
          },
          {
            "name": "emailAddress",
            "in": "query",
            "required": false,
            "description": "Defines the e-mail address.",
            "type": "string"
          },
          {
            "name": "emailFormat",
            "in": "query",
            "required": false,
            "description": "Supported Email format.",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ]
          },
          {
            "name": "lastModifierId",
            "in": "query",
            "required": false,
            "description": "Identifies the last software system or person to modify a record.",
            "type": "string"
          },
          {
            "name": "lastModifyDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of last modification.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderSequence",
            "in": "query",
            "required": false,
            "description": "Display Order sequence.",
            "type": "number"
          },
          {
            "name": "primaryInd",
            "in": "query",
            "required": false,
            "description": "When true, indicates a primary information.",
            "type": "boolean"
          },
          {
            "name": "purgeDate",
            "in": "query",
            "required": false,
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "emailType",
            "in": "query",
            "required": false,
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "type": "string"
          },
          {
            "name": "typeDescription",
            "in": "query",
            "required": false,
            "description": "Describes the Type code",
            "type": "string"
          },
          {
            "name": "approvalCode",
            "in": "query",
            "required": false,
            "description": "The approval code authenticates the authorization.",
            "type": "string"
          },
          {
            "name": "originalAuthSequence",
            "in": "query",
            "required": false,
            "description": "Unique Authorization Sequence for the authorization and settlement.",
            "type": "integer"
          },
          {
            "name": "vendorTranId",
            "in": "query",
            "required": false,
            "description": "Vendor transaction id for the authorization.",
            "type": "string"
          },
          {
            "name": "approvalAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "terminalId",
            "in": "query",
            "required": false,
            "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected.",
            "type": "string"
          },
          {
            "name": "incidentalAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "incidentalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the fetch authorization instructions. Based on the criteria requested, the response can contain information required to send a credit card authorization to the Vendor.",
            "schema": {
              "$ref": "#/definitions/ccAuthorizationInstructions"
            }
          },
          "204": {
            "description": "CCAuthorizationInstructions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/payments": {
      "post": {
        "summary": "Create Billing Payment",
        "description": "You can use this API to create Billing Payment on the folio of a Reservation. <p><strong>OperationId:</strong>postBillingPayment</p>",
        "operationId": "postBillingPayment",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "billingPayment",
            "in": "body",
            "required": true,
            "description": "Request to post a payment on a reservation's folio.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingPayment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response notifying if the posting of a payment to a reservation was successful.",
            "schema": {
              "$ref": "#/definitions/postedBillingPayment"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/postingActivities": {
      "get": {
        "summary": "Get posting activity details",
        "description": "You can use this API to get posting activity details. <p><strong>OperationId:</strong>getPostingActivityDetail</p>",
        "operationId": "getPostingActivityDetail",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "module",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "logDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "refActionId",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "logUserId",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "logUserName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "machineStation",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "croCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "actionType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "actionDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "iPAddress",
            "in": "query",
            "required": false,
            "description": "The IP Address of the machine that performed the activity",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to get financial details for a Posting Activity. This will return the before and after values for the transactions which were changed.",
            "schema": {
              "$ref": "#/definitions/postingActivityDetail"
            }
          },
          "204": {
            "description": "PostingActivityDetail not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/prepaidCards/redemptions": {
      "put": {
        "summary": "Operation to redeem prepaid cards.",
        "description": "You can use this API to redeem Prepaid Cards <p><strong>OperationId:</strong>redeemPrepaidCards</p>",
        "operationId": "redeemPrepaidCards",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "redeemPrepaidCards",
            "in": "body",
            "required": true,
            "description": "Request type for Prepaid card redeem amount request.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/redeemPrepaidCards"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for redeem Prepaid cards request.",
            "schema": {
              "$ref": "#/definitions/redeemPrepaidCardsStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/proforma": {
      "post": {
        "summary": "Create proforma",
        "description": "You can use this API to create proforma for a specific reservation. <p><strong>OperationId:</strong>postProforma</p>",
        "operationId": "postProforma",
        "deprecated": true,
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationFolio",
            "in": "body",
            "required": true,
            "description": "Request to create a Proforma(folio) transactions for a reservation. The request generates the internal transactions required to create a Proforma report. After this request is called , the Opera Proforma report should be called so that these transactions can be used in the report. If the report is called without this request, the report will be incorrect and will not have the complete information. If the report is not used after this request, the internal transactions will be removed either by night audit or by the next request.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationFolio"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the Create Proforma WS. After the proforma is created by this request, the Opera Proforma report should be called to generate the actual physical Proforma report. The response can have the summary of the Guests Proforma Folio, if requested.",
            "schema": {
              "$ref": "#/definitions/reservationFolioInformation"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/proformaFolio": {
      "post": {
        "summary": "Create proforma",
        "description": "API to create Pro-Forma for a specific reservation for external partners.<p><strong>OperationId:</strong>postProformaFolio</p> <p><strong>OperationId:</strong>postProformaFolio</p>",
        "operationId": "postProformaFolio",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationFolio",
            "in": "body",
            "required": true,
            "description": "Request to create a Pro-Forma(folio) transactions for a reservation for external partners via OHIP domain. The request generates the internal transactions required to create a Pro-Forma folio, pass it into the response and finally remove/cleanup these transactions",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/proformaReservationFolio"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the Create Proforma WS.",
            "schema": {
              "$ref": "#/definitions/proformaFolio"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/revenueBuckets": {
      "get": {
        "summary": "Get Reservations Revenue Bucket Totals",
        "description": "You can use this API to get a reservations Revenue Bucket Totals. <p><strong>OperationId:</strong>getReservationRevenueBucketTotals</p>",
        "operationId": "getReservationRevenueBucketTotals",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "revenueBucketType",
            "in": "query",
            "required": false,
            "description": "Type if the revenue bucket.",
            "type": "string"
          },
          {
            "name": "compRevenue",
            "in": "query",
            "required": false,
            "description": "This flag will notify the service if the revenue is of complimentary type.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for revenue bucket totals for a reservation.",
            "schema": {
              "$ref": "#/definitions/revenueBucketTotals"
            }
          },
          "204": {
            "description": "ReservationRevenueBucketTotals not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/reverseCertificate": {
      "post": {
        "summary": "Reverse certificate postings",
        "description": "You can use this API to Reverse certificate postings. <p><strong>OperationId:</strong>reverseCertificatePostings</p>",
        "operationId": "reverseCertificatePostings",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reverseCertificatePostingsCriteria",
            "in": "body",
            "required": true,
            "description": "Request to reverse the certificate postings of transactions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reverseCertificatePostingsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions": {
      "get": {
        "summary": "Get routing instructions",
        "description": "You can use this API to retrieve routing instructions for a specified reservation. <p><strong>OperationId:</strong>getRoutingInstructions</p> <p>The maximum allowable limit for this API is <strong>20</strong>.</p>",
        "operationId": "getRoutingInstructions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "includeWindowRouting",
            "in": "query",
            "required": false,
            "description": "Include the window routing instructions to the response.",
            "type": "boolean"
          },
          {
            "name": "includeRoomRouting",
            "in": "query",
            "required": false,
            "description": "Include the room routing instructions in the response.",
            "type": "boolean"
          },
          {
            "name": "includeCompRouting",
            "in": "query",
            "required": false,
            "description": "Include the comp routing instructions in the response.",
            "type": "boolean"
          },
          {
            "name": "includeCompRoutingRequests",
            "in": "query",
            "required": false,
            "description": "Include the comp routing requests in the response.",
            "type": "boolean"
          },
          {
            "name": "effectiveOn",
            "in": "query",
            "required": false,
            "description": "If date is included then the search result should only be valid for dates which includes this date.",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object containing routing instructions for a reservation.",
            "schema": {
              "$ref": "#/definitions/routingInstructionsDetails"
            }
          },
          "204": {
            "description": "RoutingInstructions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "delete": {
        "summary": "Delete routing instructions",
        "description": "You can use this API to delete routing instructions for a specified reservation.<br><p><strong><mark>This API is deprecated. Please use deleteFolioRoutingInstructions or  deleteRoomRoutingInstructions or deleteCompRoutingInstructions or deleteRequestRoutingInstructions instead</mark></strong></p> <p><strong>OperationId:</strong>deleteRoutingInstructions</p>",
        "operationId": "deleteRoutingInstructions",
        "deprecated": true,
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/change": {
      "put": {
        "summary": "Change routing instructions",
        "description": "You can use this API to update routing instructions for a specified reservation. <p><strong>OperationId:</strong>changeRoutingInstructions</p>",
        "operationId": "changeRoutingInstructions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "routingInstructionsToChange",
            "in": "body",
            "required": true,
            "description": "Request when changing a routing instruction.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructionsToChange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response when changing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the modified routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/changedRoutingInstructions"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/comp": {
      "delete": {
        "summary": "Delete comp routing instructions",
        "description": "You can use this API to delete comp routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteCompRoutingInstructions</p>",
        "operationId": "deleteCompRoutingInstructions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "refreshFolio",
            "in": "query",
            "required": false,
            "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
            "type": "boolean"
          },
          {
            "name": "retrievePostingsForRoomRouting",
            "in": "query",
            "required": false,
            "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
            "type": "boolean"
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "payeeId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "membershipIdNo",
            "in": "query",
            "required": false,
            "description": "Unique Id of membership",
            "type": "integer"
          },
          {
            "name": "authorizerId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "required": false,
            "description": "User Id of the Opera User",
            "type": "integer"
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "description": "Name of the Opera User",
            "type": "string"
          },
          {
            "name": "comments",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "daily",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "creditLimit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "percentageLimit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The routing limit percentage allowed for this routing instruction.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "covers",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Number of covers for this routing instruction.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Transaction code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "billingCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "routingInstructionsId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "routingLinkId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response when removing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the deleted routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/roomRoutingPostings"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/create": {
      "put": {
        "summary": "Create routing instructions",
        "description": "You can use this API to add routing instructions to a reservation. <p><strong>OperationId:</strong>putRoutingInstructions</p>",
        "operationId": "putRoutingInstructions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "routingInstructions",
            "in": "body",
            "required": true,
            "description": "Request to create a routing instruction.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response when creating a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the new routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/createdRoutingInstructions"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/folio": {
      "delete": {
        "summary": "Delete Folio routing instructions",
        "description": "You can use this API to delete folio routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteFolioRoutingInstructions</p>",
        "operationId": "deleteFolioRoutingInstructions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "refreshFolio",
            "in": "query",
            "required": false,
            "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
            "type": "boolean"
          },
          {
            "name": "retrievePostingsForRoomRouting",
            "in": "query",
            "required": false,
            "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
            "type": "boolean"
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "payeeId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "daily",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "creditLimit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "percentageLimit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The routing limit percentage allowed for this routing instruction.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "covers",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Number of covers for this routing instruction.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Transaction code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "billingCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "routingInstructionsId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "routingLinkId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response when removing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the deleted routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/roomRoutingPostings"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/request": {
      "delete": {
        "summary": "Delete request routing instructions",
        "description": "You can use this API to delete request routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteRequestRoutingInstructions</p>",
        "operationId": "deleteRequestRoutingInstructions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "refreshFolio",
            "in": "query",
            "required": false,
            "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
            "type": "boolean"
          },
          {
            "name": "retrievePostingsForRoomRouting",
            "in": "query",
            "required": false,
            "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
            "type": "boolean"
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "description": "Name of the Opera User",
            "type": "string"
          },
          {
            "name": "comments",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "daily",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response when removing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the deleted routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/roomRoutingPostings"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/routingInstructions/room": {
      "delete": {
        "summary": "Delete Room routing instructions",
        "description": "You can use this API to delete room routing instructions for a specified reservation. <p><strong>OperationId:</strong>deleteRoomRoutingInstructions</p>",
        "operationId": "deleteRoomRoutingInstructions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "refreshFolio",
            "in": "query",
            "required": false,
            "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
            "type": "boolean"
          },
          {
            "name": "retrievePostingsForRoomRouting",
            "in": "query",
            "required": false,
            "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
            "type": "boolean"
          },
          {
            "name": "reservationNameId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "daily",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "creditLimit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "percentageLimit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The routing limit percentage allowed for this routing instruction.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "covers",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Number of covers for this routing instruction.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Transaction code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "billingCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "routingInstructionsId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "routingLinkId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response when removing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the deleted routing instruction in case of room routing instruction.",
            "schema": {
              "$ref": "#/definitions/roomRoutingPostings"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/transactions/{transactionId}": {
      "get": {
        "summary": "Get eligibility of Deposit Refund",
        "description": "You can use this API to get eligibility of Deposit Refund. <p><strong>OperationId:</strong>isDepositRefundEligible</p>",
        "operationId": "isDepositRefundEligible",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the refund deposit payment.",
            "schema": {
              "$ref": "#/definitions/depositRefundEligibleCheck"
            }
          },
          "204": {
            "description": "isDepositRefundEligible not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "put": {
        "summary": "Split deposit transaction",
        "description": "You can use this API to Split deposit transaction. <p><strong>OperationId:</strong>splitDepositTransaction</p>",
        "operationId": "splitDepositTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "splitDepositTransaction",
            "in": "body",
            "required": true,
            "description": "Request to split deposit transaction for a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/splitDepositTransaction"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response after spliting deposit transaction.",
            "schema": {
              "$ref": "#/definitions/splitDepositTransactionStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/transferFolioTransactions": {
      "put": {
        "summary": "Transfer Folio to Window.",
        "description": "You can use this API to transfer Folio to Window. <p><strong>OperationId:</strong>transferFolioToWindow</p>",
        "operationId": "transferFolioToWindow",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "folioToWindow",
            "in": "body",
            "required": true,
            "description": "Request for transaction folio(s) to specific window",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioToWindow"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/transferTransactions": {
      "put": {
        "summary": "Transfer Transaction to Window",
        "description": "You can use this API to transfer Transaction to Window. <p><strong>OperationId:</strong>transferTransactionToWindow</p>",
        "operationId": "transferTransactionToWindow",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "transactionToWindow",
            "in": "body",
            "required": true,
            "description": "Request for transaction transfer",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionToWindow"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Transaction Transfer Response contains errors: FOF00065 - Reservation ID or Resort was not supplied. FOF00128 - Transactions that were automatically generated cannot be transferred. FOF00129 - Transactions with Folio Numbers cannot be transferred. FOF00130 - Transactions with Invoice Numbers cannot be transferred. FOF00131 - Deposit Transactions cannot be transferred. FOF00132 - The status of the reservation is not valid for Financial Transaction transfers. FOF00133 - The Transaction number(s) are invalid. FOF00134 - Folio window not supplied. FOF00135 - List of transactions not supplied.",
            "schema": {
              "$ref": "#/definitions/transferTransactionToWindow"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/voidfolios/{folioId}": {
      "put": {
        "summary": "Void folio",
        "description": "You can use this API to void a folio. <p><strong>OperationId:</strong>voidFolio</p>",
        "operationId": "voidFolio",
        "parameters": [
          {
            "name": "folioId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the folio."
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "folioToVoid",
            "in": "body",
            "required": true,
            "description": "Request to Void a Guest Folio when the Void Functionality is active.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioToVoid"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response to the request for voiding a Guest Folio.",
            "schema": {
              "$ref": "#/definitions/voidedFolio"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/vouchers": {
      "get": {
        "summary": "Get the list of vouchers generated for a reservation.",
        "description": "This API is used to fetch the list of vouchers from a reservation. <p><strong>OperationId:</strong>getReservationVouchers</p>",
        "operationId": "getReservationVouchers",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to get the Reservation vouchers.",
            "schema": {
              "$ref": "#/definitions/reservationVouchersType"
            }
          },
          "204": {
            "description": "Get reservation vouchers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Generate Reservation Vouchers",
        "description": "Generate vouchers for the reservation. <p><strong>OperationId:</strong>postReservationVouchers</p>",
        "operationId": "postReservationVouchers",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{sourceReservationId}/deposit/transfers": {
      "put": {
        "summary": "Change Reservation Deposit Transfer.",
        "description": "You can use this API to change Reservation Deposit Transfer. <p><strong>OperationId:</strong>putReservationDepositTransfer</p>",
        "operationId": "putReservationDepositTransfer",
        "parameters": [
          {
            "name": "sourceReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "depositTransferCriteria",
            "in": "body",
            "required": true,
            "description": "Request to transfer a deposit amount from one reservation to one or more reservations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/depositTransferCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{toReservationId}/transferTransaction": {
      "put": {
        "summary": "Transfer Transaction to Reservation",
        "description": "You can use this API to Transfer Transaction to Reservation. <p><strong>OperationId:</strong>transferTransactionToReservation</p>",
        "operationId": "transferTransactionToReservation",
        "parameters": [
          {
            "name": "toReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationTransaction",
            "in": "body",
            "required": true,
            "description": "Request to transfer a transaction(s) to a reservation. In the criteria, the target Reservation Id is required for the transfer.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationTransaction"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/revenue": {
      "get": {
        "summary": "Get Hotel Revenue",
        "description": "You can use this API to get Hotel Revenue. <p><strong>OperationId:</strong>getHotelRevenue</p>",
        "operationId": "getHotelRevenue",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "businessDate",
            "in": "query",
            "required": false,
            "description": "Business date.",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for hotel room revenue for all HHonors redemption reservation.",
            "schema": {
              "$ref": "#/definitions/hotelRevenueDetails"
            }
          },
          "204": {
            "description": "HotelRevenue not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/routingInstructionCodes": {
      "get": {
        "summary": "Get Billing (routing) Instruction Codes",
        "description": "You can use this API to get Billing Instruction Codes. <p><strong>OperationId:</strong>getBillingInstructionCodes</p>",
        "operationId": "getBillingInstructionCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "includeTransactionCodes",
            "in": "query",
            "required": false,
            "description": "Flag to include the search in the Transaction Codes.",
            "type": "boolean"
          },
          {
            "name": "includeBillingInstructions",
            "in": "query",
            "required": false,
            "description": "Flag to include the search in the Billing Instructions.",
            "type": "boolean"
          },
          {
            "name": "includeCompInstructions",
            "in": "query",
            "required": false,
            "description": "Flag to include the comp instructions in the available list.",
            "type": "boolean"
          },
          {
            "name": "codeWildCard",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Billing and/or Transaction Codes.",
            "type": "string"
          },
          {
            "name": "descriptionWildCard",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Billing and/or Transaction Code Description.",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object containing comp routing instructions for a reservation .",
            "schema": {
              "$ref": "#/definitions/billingInstructionCodes"
            }
          },
          "204": {
            "description": "BillingInstructionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/sourceReservations/{sourceReservationId}/destinationReservations/{destinationReservationId}/packageAllowance/links": {
      "post": {
        "summary": "Link Reservation package allowance",
        "description": "You can use this API to link reservation package allowance. <p><strong>OperationId:</strong>linkReservationPackageAllowance</p>",
        "operationId": "linkReservationPackageAllowance",
        "parameters": [
          {
            "name": "destinationReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the destination reservation."
          },
          {
            "name": "sourceReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "linkReservationPackageAllowance",
            "in": "body",
            "required": true,
            "description": "Method to create package allowance link from a source reservation to the target reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/linkReservationPackageAllowance"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/sourceReservations/{sourceReservationId}/targetReservations/{targetReservationId}/roomRouting": {
      "get": {
        "summary": "Get Postings For Refresh",
        "description": "You can use this API to get postings For Refresh. <p><strong>OperationId:</strong>getPostingsForRefresh</p>",
        "operationId": "getPostingsForRefresh",
        "parameters": [
          {
            "name": "targetReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the target reservation"
          },
          {
            "name": "sourceReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "targetResvNameIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "targetResvNameIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "daily",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the routing instruction is a daily instruction.",
            "type": "boolean"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "transactionHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel context of the Transaction code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "printTrxReceipt",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Transaction code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction codes info.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionGroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Category of the transaction code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionSubGroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Sub category of the transaction code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the transaction code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "routingInstructionsId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "articleCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "orderSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "articleDescription",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "availableForPostIt",
            "in": "query",
            "required": false,
            "description": "Indicates whether the article is available for post it.",
            "type": "boolean"
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ]
          },
          {
            "name": "articleUniversalProductCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "billingCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "billingHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel context of the Billing Instruction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "desc",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Billing Instruction code description.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "billingInstructionRoutingInstructionsId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "creditLimit",
            "in": "query",
            "required": false,
            "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
            "type": "number"
          },
          {
            "name": "percentageLimit",
            "in": "query",
            "required": false,
            "description": "The routing limit percentage allowed for this routing instruction.",
            "type": "number"
          },
          {
            "name": "covers",
            "in": "query",
            "required": false,
            "description": "Number of covers for this routing instruction.",
            "type": "number"
          },
          {
            "name": "limitUsed",
            "in": "query",
            "required": false,
            "description": "Amount of Credit used for this routing instruction.",
            "type": "number"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "routingLinkIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "routingLinkIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object that lists the transactions that can be refreshed when a routing instruction set is refreshed.",
            "schema": {
              "$ref": "#/definitions/postingsForRefresh"
            }
          },
          "204": {
            "description": "PostingsForRefresh not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "put": {
        "summary": "Process Room Routing Refresh",
        "description": "You can use this API to change Room Routing Refresh. <p><strong>OperationId:</strong>processRoomRoutingRefresh</p>",
        "operationId": "processRoomRoutingRefresh",
        "parameters": [
          {
            "name": "targetReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the target reservation"
          },
          {
            "name": "sourceReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "roomRoutingRefresh",
            "in": "body",
            "required": true,
            "description": "The request object for processing refreshing of a routing instruction set. This operation transfers the postings to the respective reservation as per the routing instruction set which is created, edited, deleted or refreshed.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomRoutingRefresh"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/storedFolios/{folioId}": {
      "get": {
        "summary": "Get Stored Folio Details",
        "description": "You can use this API to get Stored Folio Details. <p><strong>OperationId:</strong>getStoredFolioDetails</p>",
        "operationId": "getStoredFolioDetails",
        "parameters": [
          {
            "name": "folioId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the folio."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "required": false,
            "description": "The Fiscal Bill number of this posting",
            "type": "string"
          },
          {
            "name": "folioDate",
            "in": "query",
            "required": false,
            "description": "Date of Folio Generation.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "folioStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ]
          },
          {
            "name": "folioTypeName",
            "in": "query",
            "required": false,
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "type": "string"
          },
          {
            "name": "internalFolioWindowID",
            "in": "query",
            "required": false,
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "type": "string"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch stored folio details operation",
            "schema": {
              "$ref": "#/definitions/storedFolioDetailsInfo"
            }
          },
          "204": {
            "description": "StoredFolioDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Create Stored Folio Details",
        "description": "You can use this API to create Stored Folio Details. <p><strong>OperationId:</strong>postStoredFolioDetails</p>",
        "operationId": "postStoredFolioDetails",
        "parameters": [
          {
            "name": "folioId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the folio."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "storedFolioDetails",
            "in": "body",
            "required": true,
            "description": "Request object to update stored folio details.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/storedFolioDetails"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/supplementFolios": {
      "post": {
        "summary": "Post supplemental folio",
        "description": "You can use this API to post supplemental folio. <p><strong>OperationId:</strong>postSupplementalFolio</p>",
        "operationId": "postSupplementalFolio",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "postSupplementalFolio",
            "in": "body",
            "required": true,
            "description": "Request to post a Supplemental Folio for an existing Folio. Debit Bill ( Supplemental Folio ) Functionality parameter is required",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postSupplementalFolio"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the request to create Supplemental Folio.",
            "schema": {
              "$ref": "#/definitions/postSupplementalFolioStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactionCodes": {
      "get": {
        "summary": "Get Transaction Codes",
        "description": "You can use this API to retrieve a list of Transaction Codes configured for a property. <p><strong>OperationId:</strong>getTransactionCodes</p>",
        "operationId": "getTransactionCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ]
          },
          {
            "name": "includeArticles",
            "in": "query",
            "default": false,
            "required": false,
            "description": "Flag to indicate if Article Codes are required, along with the parent Transaction Codes.",
            "type": "boolean"
          },
          {
            "name": "userRoleTransactions",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if it is allowed to manually post transaction codes.",
            "type": "boolean"
          },
          {
            "name": "manualPostAllowed",
            "in": "query",
            "required": false,
            "description": "Flag to include the search for Manual Post Allowed.",
            "type": "boolean"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Transaction Codes.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Transaction Code Description.",
            "type": "string"
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "required": false,
            "description": "The Fiscal Bill number of this posting",
            "type": "string"
          },
          {
            "name": "folioDate",
            "in": "query",
            "required": false,
            "description": "Date of Folio Generation.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "folioNo",
            "in": "query",
            "required": false,
            "description": "Folio Number.",
            "type": "number"
          },
          {
            "name": "folioStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ]
          },
          {
            "name": "folioTypeName",
            "in": "query",
            "required": false,
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "type": "string"
          },
          {
            "name": "internalFolioWindowID",
            "in": "query",
            "required": false,
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "type": "string"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "name": "trxServiceType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Goods Type Transactions.",
            "uniqueItems": true,
            "enum": [
              "Services",
              "Goods"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response that contains either the Transaction Code list if fetch was successful or error(s) if not.",
            "schema": {
              "$ref": "#/definitions/transactionCodes"
            }
          },
          "204": {
            "description": "TransactionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactionDetails": {
      "get": {
        "summary": "Get Folio Transaction Details",
        "description": "You can use this API to get Folio Transaction Details. <p><strong>OperationId:</strong>getFolioTransactionDetails</p>",
        "operationId": "getFolioTransactionDetails",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "includeGenerates",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if the automatically generated transactions, related to the main transaction number above, are also to be retrieved as part of this request.",
            "type": "boolean"
          },
          {
            "name": "transactionNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Transaction Number of the transaction(posting) for which details are required.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeExchangeInformation",
            "in": "query",
            "required": false,
            "description": "Flag to indicate what currency exchange information text needs to be included in response.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
            "schema": {
              "$ref": "#/definitions/folioTransactionDetails"
            }
          },
          "204": {
            "description": "FolioTransactionDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions": {
      "get": {
        "summary": "Get Guests Transactions",
        "description": "You can use this API to get  Guests Transactions. <p><strong>OperationId:</strong>getGuestsTransactions</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getGuestsTransactions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationList",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "includeGenerates",
            "in": "query",
            "required": false,
            "description": "Configuring this flag to be TRUE will return transactions that are auto generated like taxes.",
            "type": "boolean"
          },
          {
            "name": "includeTransactionsWithARInvoiceNo",
            "in": "query",
            "required": false,
            "description": "Configuring this flag to be TRUE will return transactions that are included in an Accounts Receivable invoice.",
            "type": "boolean"
          },
          {
            "name": "includeTransactionsWithFolioNo",
            "in": "query",
            "required": false,
            "description": "Configuring this flag to be TRUE will return transactions that already belongs to a folio.",
            "type": "boolean"
          },
          {
            "name": "includeTransactionsWithManualPostingOnly",
            "in": "query",
            "required": false,
            "description": "Configuring this flag to be TRUE will return transactions whose transaction codes have manual posting enabled, or when an adjustment code is attached to the transaction code, the adjustment code's manual posting is enabled.",
            "type": "boolean"
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction number of the payment being corrected.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionGroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Category of the transaction code to filter the result.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubGroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Sub category of the transaction code to filter the result.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "billingCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique identifier for the Billing Instruction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "billingHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel context of the Billing Instruction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "desc",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Billing Instruction code description.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "routingInstructionsId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "trxCodeWildCard",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Transaction Code/s.",
            "type": "string"
          },
          {
            "name": "trxDescriptionWildCard",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Transaction Code's Description.",
            "type": "string"
          },
          {
            "name": "checkNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Cheque number's code.",
            "type": "string"
          },
          {
            "name": "referenceNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Filters the results for reference number.",
            "type": "string"
          },
          {
            "name": "supplementWildCard",
            "in": "query",
            "required": false,
            "description": "Filter the results for supplement.",
            "type": "string"
          },
          {
            "name": "windowNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Filters the result to only include transactions in this window number.",
            "items": {
              "type": "integer",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "cashieringTransactionType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Wrapper Transaction Type.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Revenue",
                "Payment",
                "Wrapper"
              ]
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "commissionable",
            "in": "query",
            "required": false,
            "description": "Filters the result based on its commission property. Do not set this criteria if all transactions should be included whether or not they are commissionable.",
            "type": "boolean"
          },
          {
            "name": "serviceRecoveryAllowed",
            "in": "query",
            "required": false,
            "description": "Filters the result which are allow for service recovery.",
            "type": "boolean"
          },
          {
            "name": "postedTransactionType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Returns only postings without bill number.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "All",
                "Routed",
                "Direct",
                "Transferred",
                "Payments",
                "NonBilled"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Lists a summary of transactions of guests.",
            "schema": {
              "$ref": "#/definitions/guestsTransactions"
            }
          },
          "204": {
            "description": "GuestsTransactions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/adjust": {
      "put": {
        "summary": "Adjust Transactions",
        "description": "You can use this API to Adjust Transactions. <p><strong>OperationId:</strong>adjustTransactions</p>",
        "operationId": "adjustTransactions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "transactionsAdjustment",
            "in": "body",
            "required": true,
            "description": "Request to adjust a transaction. In order to adjust a transaction, a valid amount or percentage is required. A valid reason code and reason text is also required. Only negative adjustments are done. The adjust process will post a new negative transaction for the same transaction code for the current day.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionsAdjustment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the adjustment of transactions request. Contains any errors or warnings.",
            "schema": {
              "$ref": "#/definitions/adjustedTransactions"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/arInvoices/reverse": {
      "delete": {
        "summary": "Reverse AR Invoice",
        "description": "You can use this API to reverse an AR Invoice. <p><strong>OperationId:</strong>reverseARInvoice</p>",
        "operationId": "reverseARInvoice",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reasonCode",
            "in": "query",
            "required": false,
            "description": "The reason code for the deletion.",
            "type": "string"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The unique transaction number of this transaction.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/split": {
      "put": {
        "summary": "Split transactions",
        "description": "You can use this API to Split transactions. <p><strong>OperationId:</strong>splitTransaction</p>",
        "operationId": "splitTransaction",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "transactionToSplit",
            "in": "body",
            "required": true,
            "description": "Request to split a transaction on a reservation. Splitting of transactions requires a list of transactions and a valid amount or a percentage by which the amount can be split. Based on parameters, certain transactions cannot be split. Transaction which are included in an invoice cannot be split Transactions where the generates resides elsewhere(reservation or window) cannot be split. Automatically generated transactions such as taxes, cannot be split by itself. Deposits which were part of a deposit folio cannot be split. After the split is done the transaction resides on the same folio window as the original transaction.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionToSplit"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/splitAndTransfer": {
      "put": {
        "summary": "Split and transfer transactions",
        "description": "You can use this API to split and transfer transactions. <p><strong>OperationId:</strong>splitAndTransferTransaction</p>",
        "operationId": "splitAndTransferTransaction",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "transactionToSplitAndTransfer",
            "in": "body",
            "required": true,
            "description": "Request to split a transaction on a reservation and transfer the new transaction to a different reservation or a different window on the same reservation. Splitting of transactions requires a Inhouse target reservation, a list of transactions for a Inhouse reservation and a valid amount or a percentage by which the amount can be split. Based on parameters, certain transactions cannot be split. Transaction which are included in an invoice cannot be split Transactions where the generates resides elsewhere(reservation or window) cannot be split. Automatically generated transactions such as taxes, cannot be split by itself. Deposits which were part of a deposit folio cannot be split. After the split is done the transaction is transferred to the target reservation/window.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionToSplitAndTransfer"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}": {
      "get": {
        "summary": "Validate Transaction Codes",
        "description": "You can use this API to validate Transaction Codes. <p><strong>OperationId:</strong>validateTransactionCodes</p>",
        "operationId": "validateTransactionCodes",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ]
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "required": false,
            "description": "The Fiscal Bill number of this posting",
            "type": "string"
          },
          {
            "name": "folioDate",
            "in": "query",
            "required": false,
            "description": "Date of Folio Generation.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "folioNo",
            "in": "query",
            "required": false,
            "description": "Folio Number.",
            "type": "number"
          },
          {
            "name": "folioStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ]
          },
          {
            "name": "folioTypeName",
            "in": "query",
            "required": false,
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "type": "string"
          },
          {
            "name": "internalFolioWindowID",
            "in": "query",
            "required": false,
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "type": "string"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response notifying if transaction code is valid.",
            "schema": {
              "$ref": "#/definitions/validatedTransactionCode"
            }
          },
          "204": {
            "description": "validateTransactionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      },
      "post": {
        "summary": "Submit Comp Transaction",
        "description": "You can use this API to submit Comp Transactions. <p><strong>OperationId:</strong>postCompTransaction</p>",
        "operationId": "postCompTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "compTransactionCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to submit a comp transaction to gaming system",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTransactionCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/charges": {
      "put": {
        "summary": "Change Billing Charge",
        "description": "You can use this API to change Billing Charges. <p><strong>OperationId:</strong>putBillingCharge</p>",
        "operationId": "putBillingCharge",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "billingCharge",
            "in": "body",
            "required": true,
            "description": "Request to edit a billing charge information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingCharge"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/billingChargeStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/compRequestStatus": {
      "get": {
        "summary": "Get Gaming Request Status ",
        "description": "You can use this API to get Gaming Request Status Information. <p><strong>OperationId:</strong>getGamingRequestStatusInfo</p>",
        "operationId": "getGamingRequestStatusInfo",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch gaming info",
            "schema": {
              "$ref": "#/definitions/gamingRequestStatusInfo"
            }
          },
          "204": {
            "description": "GamingRequestStatusInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/flexibleBenefitPostings": {
      "delete": {
        "summary": "Delete flexible benefit postings",
        "description": "You can use this API to delete flexible benefit postings. <p><strong>OperationId:</strong>reverseFlexibleBenefitPosting</p>",
        "operationId": "reverseFlexibleBenefitPosting",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/payments": {
      "put": {
        "summary": "Change Billing Payment",
        "description": "This API can be used to update a posted payment with additional reference, supplement, covers, and checknumber values. <p><strong>OperationId:</strong>changeBillingPayment</p>",
        "operationId": "changeBillingPayment",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "billingPaymentToChange",
            "in": "body",
            "required": true,
            "description": "Request to change a payment posting.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/billingPaymentToChange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/policies/detach/deposit": {
      "put": {
        "summary": "Detach Deposit Policy from Payment",
        "description": "You can use this API to detach Deposit Policy from Payment. <p><strong>OperationId:</strong>detachDepositPolicyFromPayment</p>",
        "operationId": "detachDepositPolicyFromPayment",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "detachPolicyApplyCriteria",
            "in": "body",
            "required": true,
            "description": "Request to detach a deposit payment from a Deposit Policy on a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/detachPolicyApplyCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/reversePayments": {
      "post": {
        "summary": "Create reverse payments",
        "description": "You can use this API to create reverse payments. <p><strong>OperationId:</strong>postReversePayment</p>",
        "operationId": "postReversePayment",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the Transaction"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "paymentReversalCriteria",
            "in": "body",
            "required": true,
            "description": "Request for posting payment reversal.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentReversalCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transactionsTotal": {
      "get": {
        "summary": "Get Balance Information",
        "description": "You can use this API to get Balance Information. <br><p><strong><mark>This API is deprecated.</mark></strong></p> <p><strong>OperationId:</strong>getBalanceInfo</p>",
        "operationId": "getBalanceInfo",
        "deprecated": true,
        "x-alternative": "/balanceInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ]
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "cashierId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction Code to post.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Article ID.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A monetary amount.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "currencyCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "postingQuantity",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Quantity to post to the folio.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "postingReference",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "postingRemark",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "checkNumber",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates the Cheque number.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "arrangementCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Corrected arrangement code from the package associated to this transaction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "applyRoutingInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Apply room routing when making this posting.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "usePackageAllowance",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Use the applicable package allowance when making this posting.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "autoPosting",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "True indicates the Transaction Code is allowed to be posted automatically.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "uniqueIdId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "uniqueIdIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "uniqueIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "postItNumberId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "postItNumberIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "postItNumberType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "profileIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "reservationIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "policyIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "policyIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "policyIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "required": false,
            "description": "The Fiscal Bill number of this posting",
            "type": "string"
          },
          {
            "name": "folioDate",
            "in": "query",
            "required": false,
            "description": "Date of Folio Generation.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "folioNo",
            "in": "query",
            "required": false,
            "description": "Folio Number.",
            "type": "number"
          },
          {
            "name": "folioStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ]
          },
          {
            "name": "folioTypeName",
            "in": "query",
            "required": false,
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "type": "string"
          },
          {
            "name": "internalFolioWindowID",
            "in": "query",
            "required": false,
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "type": "string"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch balance request. This will contain the current balance for the criteria requested.",
            "schema": {
              "$ref": "#/definitions/balanceInfoCriteria"
            }
          },
          "204": {
            "description": "BalanceInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/transferCompTransactions": {
      "post": {
        "summary": "Transfer comp transactions to window",
        "description": "You can use this API to transfer comp transactions to window <p><strong>OperationId:</strong>transferCompTransactions</p>",
        "operationId": "transferCompTransactions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "transferCompTransactions",
            "in": "body",
            "required": true,
            "description": "Request object of comp transactions transfer.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transferCompTransactions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/vouchers/batchJobs": {
      "post": {
        "summary": "Generate Batch Vouchers",
        "description": "This api can be used to generate Batch Vouchers. <p><strong>OperationId:</strong>postGenerateBatchVouchers</p>",
        "operationId": "postGenerateBatchVouchers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "batchVouchersCriteria",
            "in": "body",
            "required": true,
            "description": "Request type for batch vouchers.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchVouchersCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/hotels/{hotelId}/zeroBalanceCheckoutReservations/batchJobs": {
      "post": {
        "summary": "Create Zero Balance Checkout Reservation Batch ",
        "description": "You can use this API to create Zero Balance Checkout Reservation Batch. <p><strong>OperationId:</strong>postZeroBalanceCheckoutReservations</p>",
        "operationId": "postZeroBalanceCheckoutReservations",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "batchZeroBalanceCheckoutReservation",
            "in": "body",
            "required": true,
            "description": "Request type for batch zero balance checkout",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchZeroBalanceCheckoutReservation"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response type for batch zero balance checkout",
            "schema": {
              "$ref": "#/definitions/batchZeroBalanceCheckoutDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/reservations/{reservationId}/postRoomAndTaxForDayUse": {
      "post": {
        "summary": "Operation to post room and tax for day use.",
        "description": "You can use this API to post post Room And Tax For DayUse <p><strong>OperationId:</strong>postRoomAndTaxForDayUse</p>",
        "operationId": "postRoomAndTaxForDayUse",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation."
          },
          {
            "name": "postRoomAndTaxForDayUse",
            "in": "body",
            "required": true,
            "description": "Request object to calculate room and tax.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/postRoomAndTaxForDayUse"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    },
    "/roundingDifference": {
      "get": {
        "summary": "Get Rounding Difference",
        "description": "You can use this API to get Rounding Difference. <p><strong>OperationId:</strong>getRoundingDifference</p>",
        "operationId": "getRoundingDifference",
        "parameters": [
          {
            "name": "event",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Event being generated by a Supplemental Folio.",
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "EarlyDeparture",
              "AdvanceBill",
              "InterimBill",
              "PasserBy",
              "PostIt",
              "CreditBill",
              "Deposit",
              "DepositRefund",
              "AutoFolio",
              "PrepaidCard",
              "AutoSettlement",
              "InformationFolio",
              "SupplementalFolio"
            ]
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "internalFolioWindowID",
            "in": "query",
            "required": false,
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "type": "string"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel context of the reservation.",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "folioView",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "cardIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "currentAuthorizedAmountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmountNeededAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "balanceAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "The authorization rule code.",
            "type": "integer"
          },
          {
            "name": "amountAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "amountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "percent",
            "in": "query",
            "required": false,
            "description": "A percentage value if the authorization rule is percentage based.",
            "type": "number"
          },
          {
            "name": "emailFolio",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "uniqueIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "createDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of the creation.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "creatorId",
            "in": "query",
            "required": false,
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "type": "string"
          },
          {
            "name": "emailAddress",
            "in": "query",
            "required": false,
            "description": "Defines the e-mail address.",
            "type": "string"
          },
          {
            "name": "emailFormat",
            "in": "query",
            "required": false,
            "description": "Supported Email format.",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ]
          },
          {
            "name": "lastModifierId",
            "in": "query",
            "required": false,
            "description": "Identifies the last software system or person to modify a record.",
            "type": "string"
          },
          {
            "name": "lastModifyDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of last modification.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "orderSequence",
            "in": "query",
            "required": false,
            "description": "Display Order sequence.",
            "type": "number"
          },
          {
            "name": "primaryInd",
            "in": "query",
            "required": false,
            "description": "When true, indicates a primary information.",
            "type": "boolean"
          },
          {
            "name": "purgeDate",
            "in": "query",
            "required": false,
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "emailType",
            "in": "query",
            "required": false,
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "type": "string"
          },
          {
            "name": "typeDescription",
            "in": "query",
            "required": false,
            "description": "Describes the Type code",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch the rounding difference for a payment amount.",
            "schema": {
              "$ref": "#/definitions/roundingDifferenceAmount"
            }
          },
          "204": {
            "description": "RoundingDifference not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Cashiering"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "cashierReportPostingsInfo": {
      "type": "object",
      "description": "Response for fetching the Cashier report transactions.",
      "properties": {
        "postings": {
          "description": "Transaction entries of the response.",
          "$ref": "#/definitions/detailPostingsType"
        },
        "transactionCodes": {
          "description": "Set of Transaction Code results.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "detailPostingsType": {
      "type": "array",
      "description": "Details of the transaction(Posting).",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/detailPostingType"
      }
    },
    "detailPostingType": {
      "type": "object",
      "description": "Posting information of the transaction.",
      "properties": {
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "referencePackageTransactionNo": {
          "description": "Package transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "updateBy": {
              "type": "string"
            }
          }
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetHotel": {
          "description": "Cross property posting hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "subPostings": {
          "description": "SubPostings for the posting.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "guestInfo": {
          "description": "Details of the Guest information where this transaction was posted to.",
          "type": "object",
          "properties": {
            "profileId": {
              "description": "Profile Id corresponding to the guest name. It is sometimes possible to have a guest name but the profile id is null.",
              "$ref": "#/definitions/profileId"
            },
            "reservationId": {
              "description": "Reservation Id corresponding to the guest name. It is sometimes possible to have a room number but the reservation id is null.",
              "$ref": "#/definitions/reservationId"
            },
            "guestName": {
              "description": "Guest name associated with the transaction.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "roomId": {
              "description": "Room number associated with the transaction.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "confirmationNo": {
              "description": "Confirmation number associated with the transaction.",
              "type": "string",
              "minLength": 0,
              "maxLength": 50
            }
          }
        },
        "aRInfo": {
          "description": "Details of the AR account if the posting was part of an AR invoice.",
          "$ref": "#/definitions/transactionARInfoType"
        },
        "currencyExchangeInfo": {
          "description": "Currency exchange information if the posting was made using a currency different from the default currency.",
          "$ref": "#/definitions/transactionCurrencyExchangeInfoType"
        },
        "adjustmentInfo": {
          "description": "Details regarding the adjustment made if the current transaction was created as a result of an adjustment.",
          "$ref": "#/definitions/transactionAdjustmentInfoType"
        },
        "paymentMethod": {
          "description": "Defined method of payment for this transaction.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "payeeInfo": {
          "description": "Payee information for the folio.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "miscellaneousInfo": {
          "type": "object",
          "properties": {
            "createDateTime": {
              "type": "string",
              "format": "date-time"
            },
            "covers": {
              "description": "POS covers",
              "type": "string",
              "minLength": 0,
              "maxLength": 10
            }
          }
        },
        "exchangeInformation": {
          "description": "Exchange Information - text presentation of the exchange operation including formula, buy rate, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internalFolioWindowID": {
          "description": "Internal Unique id for the Folio Window.",
          "type": "string"
        },
        "revisionNo": {
          "type": "number"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "deferredTax": {
          "description": "Flag to indicate if the Posting is a deferred tax record. Set to true only when the posting is a deferred tax record. Set to false only when the posting is not a deferred tax record.",
          "type": "boolean"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 20
        }
      }
    },
    "cashieringTransactionTypeType": {
      "type": "string",
      "description": "Wrapper Transaction Type.",
      "enum": [
        "Revenue",
        "Payment",
        "Wrapper"
      ]
    },
    "cashierInfoType": {
      "type": "object",
      "description": "Cashier information. Contains Id and Name details of the cashier.",
      "properties": {
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        },
        "cashierName": {
          "description": "Cashier Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "postingGroupType": {
      "type": "object",
      "description": "Transaction group information. Ever posting could represent a. Regular transaction b. Group header - has Group Id, Count, Descripton and Includes Group Memebers elements c. Group transaction - has SubGroupId element pointing to Group Header Id",
      "properties": {
        "groupId": {
          "description": "Group Id.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupCount": {
          "description": "Number of transactions in group.",
          "type": "integer"
        },
        "groupDescription": {
          "description": "Group Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "subGroupId": {
          "description": "Indicates to which group transaction belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "compPostingsType": {
      "type": "object",
      "description": "Collection of comp postings.",
      "properties": {
        "authorizer": {
          "description": "Authorizer name of the Comp Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "approvalStatus": {
          "description": "Approval status of the comp account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "exchangeAmounts": {
      "type": "object",
      "description": "Converted values for the Exchange Currency requested.",
      "properties": {
        "debitAmount": {
          "description": "The converted Guest Ledger Debit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditAmount": {
          "description": "The converted Guest Ledger Credit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "summaryPostingsType": {
      "type": "array",
      "description": "List of postings.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/summaryPostingType"
      }
    },
    "summaryPostingType": {
      "type": "object",
      "description": "Posting details.",
      "properties": {
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "updateBy": {
              "type": "string"
            }
          }
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingTime": {
          "description": "Time of posting.",
          "$ref": "#/definitions/postingTimeType"
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "officialBIRReceiptExists": {
          "description": "Flag to indicate if an Official Receipt is generated for the folio window. Applicable only in the Philippines.",
          "type": "boolean"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "groupByCount": {
          "description": "When some SummaryPostingsGroupBy element is send as request ,then this element will represent how many transactions rolled up into this Summary Posting Type.",
          "type": "number"
        },
        "folioWindowNo": {
          "description": "The Folio Window number of this posting.",
          "type": "integer"
        },
        "deferredTax": {
          "description": "Flag to indicate if the Posting is a deferred tax record. Set to true only when the posting is a deferred tax record. Set to false only when the posting is not a deferred tax record.",
          "type": "boolean"
        },
        "awardTransaction": {
          "description": "Indicator to determine if the posting's transaction code is related to a payment award.",
          "type": "boolean"
        },
        "covers": {
          "description": "POS covers",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "proformaFlag": {
          "description": "This flag indicates if it is a proforma posted transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "reservationId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "transactionARInfoType": {
      "type": "object",
      "description": "Details of the AR account where this transaction was posted to.",
      "properties": {
        "accountNumber": {
          "description": "AR Account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountName": {
          "description": "The Account name where this invoice is sent.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "invoiceNo": {
          "description": "The invoice number which includes this transaction.",
          "type": "number"
        }
      }
    },
    "transactionCurrencyExchangeInfoType": {
      "type": "object",
      "description": "Details of the Exchange Information for this transaction, if the posting was made in a currency different from the default currency.",
      "properties": {
        "description": {
          "description": "Description or reference for this exchange.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "exchangeRate": {
          "description": "The Buying rate used for this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "currencyAmount": {
          "description": "The foreign currency amount posted for this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "description": "The converted default currency amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionPercent": {
          "description": "Percentage for commission used for the currency conversion.",
          "type": "number"
        },
        "code": {
          "description": "Foreign Currency Code of the currency which was used to post this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "exchangeDate": {
          "description": "The date when this exchange rate was set.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "transactionAdjustmentInfoType": {
      "type": "object",
      "description": "Adjustment details of the transaction, if the transaction was created as part of an adjustment.",
      "properties": {
        "reason": {
          "description": "Reason for the adjustment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "departmentCode": {
          "description": "Department code for service recovery",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Adjustment code used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "storeToCreditCardWallet": {
          "description": "Indicate whether the credit card will be stored to the credit card wallet or not.",
          "type": "boolean"
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "authorizationRuleType": {
      "type": "object",
      "description": "Configured rule for computing the amount to authorize.",
      "properties": {
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "payeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "payeeInternalFolio": {
          "description": "Flag considered during folio settlement, to select the corresponding Folio Type when the value is true. Only used in Poland country mode.",
          "type": "boolean"
        }
      }
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "aRAccountShortInfoType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "properties": {
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "type": "object",
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "properties": {
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        }
      }
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "otaTaxType": {
          "description": "Open Travel Alliance(OTA) tax type for the given transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "redeemMembershipPoints": {
          "description": "This flag indicates that the transaction is eligible to redeem points (guest can use their points to pay for transactions posted with this transaction code)",
          "type": "boolean"
        },
        "earnMembershipPoints": {
          "description": "This flag indicates that the transaction is eligible to earn points (guest can earn points on the revenue posted to this transaction code)",
          "type": "boolean"
        }
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "cashierClosure": {
      "type": "object",
      "description": "Request to close cashier's shift.",
      "properties": {
        "criteria": {
          "description": "Criteria for closing cashier.",
          "$ref": "#/definitions/cashierClosureType"
        },
        "cashierLockHandle": {
          "description": "The lock handle of the cashier lock. Cashier needs to be locked before this operation can be invoke.",
          "$ref": "#/definitions/cashierLockHandle"
        },
        "hotelId": {
          "description": "Unique ID of the hotel",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierClosureType": {
      "type": "object",
      "description": "Cashier Shift Totals and Per Hotel amounts group by currency code",
      "properties": {
        "cashierInfo": {
          "description": "Cashier ID and Closure No",
          "$ref": "#/definitions/cashierClosureNoType"
        },
        "summaryCurrencyAmountList": {
          "description": "Currency Total Amounts for Cashier Shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cashierClosureCurrencyAmountType"
          }
        },
        "hotelCurrencyAmountList": {
          "description": "Currency Hotels Amounts for Cashier Shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelCashierClosureCurrencyAmountType"
          }
        }
      }
    },
    "cashierClosureNoType": {
      "type": "object",
      "description": "Type used in cashier closure to specify a cashier's shift.",
      "properties": {
        "shiftDropLocationCode": {
          "description": "Cashier closure shift drop location code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bagNumberForOthers": {
          "description": "Cashier closure shift drop others payment method type bag number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "bagNumberForCash": {
          "description": "Cashier closure shift drop cash payment method type bag number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cashierId": {
          "description": "The Cashier ID of the Cashier.",
          "$ref": "#/definitions/cashierId"
        },
        "closureNo": {
          "description": "The Cashier Shift Number.",
          "type": "number"
        }
      }
    },
    "cashierId": {
      "type": "number",
      "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
    },
    "cashierClosureCurrencyAmountType": {
      "type": "object",
      "description": "Cashier Shift Currency Amount type - cash ,check ,credit and others elements.",
      "properties": {
        "cash": {
          "description": "Cash amounts for the currency.",
          "$ref": "#/definitions/cashierClosureAmountType"
        },
        "check": {
          "description": "Check amounts for the currency.",
          "$ref": "#/definitions/cashierClosureAmountType"
        },
        "creditCard": {
          "description": "Credit card amounts for the currency.",
          "$ref": "#/definitions/cashierClosureAmountType"
        },
        "others": {
          "description": "Other amounts for the currency.",
          "$ref": "#/definitions/cashierClosureAmountType"
        },
        "currencyCode": {
          "description": "The Currency Code.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "cashierClosureAmountType": {
      "type": "object",
      "description": "Cashier Opening Balance and Shift Amounts type.",
      "properties": {
        "openingBalance": {
          "description": "Cashier shift amounts type.",
          "type": "number"
        },
        "received": {
          "description": "Receviced amount.",
          "type": "number"
        },
        "paidOut": {
          "description": "Paid Out amount.",
          "type": "number"
        },
        "expectedShiftBalance": {
          "description": "Expected Cashier shift amount.",
          "type": "number"
        },
        "actualShiftBalance": {
          "description": "Actual Cashier shift amount.",
          "type": "number"
        }
      }
    },
    "hotelCashierClosureCurrencyAmountType": {
      "type": "object",
      "description": "Cashier Shift amounts for each Hotel group by currency code",
      "properties": {
        "currencyAmounts": {
          "description": "Hotel Cash and Check Balances group by Currency Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cashierClosureCurrencyAmountType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelCurrencyCode": {
          "description": "Hotel local currency code.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "cashierLockHandle": {
      "type": "number",
      "description": "The Cashier Lock Handle to pass along with operation which required cashier to be locked."
    },
    "codeType": {
      "type": "string",
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "minLength": 0,
      "maxLength": 20
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "acquiredCashierLock": {
      "type": "object",
      "description": "Response for the Cashier Lock request.",
      "properties": {
        "acquiredCashierLock": {
          "description": "This contains the lock information for the cashier.",
          "$ref": "#/definitions/operaRecordLock"
        },
        "existingCashierLock": {
          "description": "This will contain information about the cashier lock that is currently held by another user.",
          "$ref": "#/definitions/operaRecordLock"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaRecordLock": {
      "type": "object",
      "description": "This type contains information about a record lock.",
      "properties": {
        "lockHandle": {
          "description": "This is the identifier of the lock. This will be null when the requesting user does not own the lock.",
          "type": "number"
        },
        "recordType": {
          "description": "This is the record type of the locked record.",
          "$ref": "#/definitions/operaLockRecordType"
        },
        "recordId": {
          "description": "This is the id of the locked record.",
          "type": "string"
        },
        "createdBy": {
          "description": "This is the user name of the current owner of the locked record.",
          "type": "string"
        },
        "createdOn": {
          "description": "This is the time when the record was locked.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "timeToLive": {
          "description": "This is the validity of the lock in seconds.",
          "type": "number"
        },
        "expiresOn": {
          "description": "This is the estimated expiry time of the lock.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "internal": {
          "description": "Notification flag to specify if the lock is based on an Internal Opera9 lock versus an External lock.",
          "type": "boolean"
        }
      }
    },
    "operaLockRecordType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Cashier"
      ]
    },
    "cashierTransactionsDetails": {
      "type": "object",
      "description": "Response for the fetch cashier's shift transactions.",
      "properties": {
        "cashierTransactionsInfo": {
          "description": "Cashier shift transactions group by transaction code and currency.",
          "$ref": "#/definitions/cashierTransactionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierTransactionsType": {
      "type": "object",
      "description": "Cashier Shift Totals and Per Hotel transactions group by transaction code",
      "properties": {
        "cashierInfo": {
          "description": "Cashier ID and Closure No",
          "$ref": "#/definitions/cashierClosureNoType"
        },
        "summaryTransactionList": {
          "description": "Summary of all transactions during Cashier Shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cashierTransactionType"
          }
        },
        "hotelTransactionList": {
          "description": "Hotel's transactions during Cashier Shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelCashierTransactionType"
          }
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response folio.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "cashierTransactionType": {
      "type": "object",
      "description": "Cashier Shift Transaction Type.",
      "properties": {
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Transaction codes description which will be populated for summary elements only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amount": {
          "description": "Transaction amount and currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "trxCount": {
          "description": "Number of same transactions during a shift.",
          "type": "integer"
        }
      }
    },
    "hotelCashierTransactionType": {
      "type": "object",
      "description": "Cashier Shift amounts for each Hotel group by currency code",
      "properties": {
        "transactions": {
          "description": "Hotel's transaction in cashier shift.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cashierTransactionType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "compAccountingJournal": {
      "type": "object",
      "description": "Response for fetching the Complimentary Posting Journal.",
      "properties": {
        "journalPostings": {
          "description": "Complimentary Journal entries of the response.",
          "$ref": "#/definitions/financialPostingsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "financialPostingsType": {
      "type": "object",
      "description": "Collection of Reservations and their information.",
      "properties": {
        "postings": {
          "$ref": "#/definitions/detailPostingsType"
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "totalDebit": {
          "description": "Indicates the Total Sum of Journal Debits.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCredit": {
          "description": "Indicates the Total Sum of Journal Credits.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "overallTotal": {
          "description": "Indicates the Total Sum of Journal entries in a page.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalForAllPages": {
          "description": "Indicates the Total Sum of all Journal entries in all pages.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalEntriesCount": {
          "description": "Indicates the number of journal entries.",
          "type": "integer"
        }
      }
    },
    "fbaReimbursementCriteria": {
      "type": "object",
      "description": "PostFBA Reimbursement/Settlement operation posts reimbursement/settlement against the selected certificate records.",
      "properties": {
        "certificateReconciliationTypes": {
          "description": "Information regarding reconciliation certificate posting.",
          "$ref": "#/definitions/certificateReconciliationTypes"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "certificateReconciliationTypes": {
      "type": "array",
      "description": "List of CertificateReconciliationType criteria",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/certificateReconciliationType"
      }
    },
    "certificateReconciliationType": {
      "type": "object",
      "description": "FBA ( Flexible Benefits Awards ) related fields.",
      "properties": {
        "status": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        },
        "monetaryValue": {
          "description": "Award's FBA monetary values.",
          "type": "number"
        },
        "amount": {
          "description": "Award's FBA amount.",
          "type": "number"
        },
        "postedAmount": {
          "description": "Award's FBA posted amount.",
          "type": "number"
        },
        "reimbursedAmount": {
          "description": "Award's FBA reimbursed amount.",
          "type": "number"
        },
        "postingDateTime": {
          "description": "Date and time of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingBusinessDate": {
          "description": "Business date of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementDateTime": {
          "description": "Date and time of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementBusinessDate": {
          "description": "Business date of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementDateTime": {
          "description": "Date and time of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementBusinessDate": {
          "description": "Business date of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fbaBillGenDate": {
          "description": "Business date of the FBA bill generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "flexibleBenefitAward": {
          "description": "Indicates if this certificate is a Flexible Benefit Award certificate.",
          "type": "boolean"
        },
        "posted": {
          "description": "Indicates whether FBA has been posted.",
          "type": "boolean"
        },
        "settled": {
          "description": "Indicates whether FBA has been settled.",
          "type": "boolean"
        },
        "reimbursed": {
          "description": "Indicates whether FBA has been reimbursed.",
          "type": "boolean"
        },
        "resettleAllowed": {
          "description": "Marks if the certificate is eligible for resettlement",
          "type": "boolean"
        },
        "reimburseAllowed": {
          "description": "Marks if the certificate is eligible for reimbursement.",
          "type": "boolean"
        },
        "orphanCertificate": {
          "description": "Indicates whether the certificate is Orphan or not.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel context for the selected certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation name id to which the the certificate belongs to.",
          "$ref": "#/definitions/reservationId"
        },
        "fBAStatus": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        },
        "certificateNumber": {
          "description": "The number for the given certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "fBAStatusType": {
      "type": "string",
      "description": "Flexible benefit award has been reimbursed.",
      "enum": [
        "Ordered",
        "Attached",
        "Posted",
        "Settled",
        "Reimbursed"
      ]
    },
    "foreignCurrencyCriteria": {
      "type": "object",
      "description": "Operation to calculate foreign currency exchange.",
      "properties": {
        "exchange": {
          "description": "A set of currencies that need to be converted.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/exchangeRateCalculationType"
          }
        },
        "addExchangeCommission": {
          "description": "Flag to add exchange commission in order to recalculate payment amount in billing.",
          "type": "boolean"
        },
        "includeExchangeInformation": {
          "description": "Flag to include exchange information text in response.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "exchangeRateCalculationType": {
      "type": "object",
      "description": "Currency conversion calculation type.",
      "properties": {
        "hotelId": {
          "description": "Property code where the currency is being converted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fromCurrencyAmount": {
          "description": "Amount and code of currency that is being converted from.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "exchangeDate": {
          "description": "Date on which exchange rate was obtained.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sell": {
          "description": "Buy or Sell for calculation.",
          "type": "boolean"
        },
        "exchangeReference": {
          "description": "Exchange references.",
          "type": "string"
        },
        "exchangeType": {
          "description": "Type for exchange calculation.",
          "$ref": "#/definitions/currencyExchangeType"
        },
        "toCurrencyAmount": {
          "description": "Amount and code of currency that is being converted to.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "date": {
          "description": "Date on which the exchange is to take place.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "buyCommission": {
          "description": "Buy commission for the foreign currency.",
          "type": "number"
        },
        "roundingAmount": {
          "description": "Amount by which the exchange was rounded.",
          "type": "number"
        },
        "calculatedAmount": {
          "description": "Pure calculated amount.",
          "type": "number"
        },
        "exchangeRate": {
          "description": "Exchange Rate.",
          "type": "number"
        },
        "euroExchangeRate": {
          "description": "Exchange rate against Euro.",
          "type": "number"
        },
        "euroAmount": {
          "description": "Amount in Euro for the exchange.",
          "type": "number"
        },
        "serviceTax": {
          "description": "Tax amount which is applicable for this transaction, when using the Exchange Service Tax functionality.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "exchangeInformation": {
          "description": "Exchange Information - text presentation of the exchange operation including formula, buy rate, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "exchangeRateCalculationTax": {
          "description": "Detailed information about exchange rate calculation service tax.",
          "$ref": "#/definitions/exchangeRateCalculationTaxType"
        }
      }
    },
    "currencyExchangeType": {
      "type": "string",
      "description": "E-certificate conversion.",
      "enum": [
        "Cash",
        "Settlement",
        "Posting",
        "Check",
        "TACommission",
        "Membership",
        "Certificate"
      ]
    },
    "exchangeRateCalculationTaxType": {
      "type": "object",
      "description": "Detailed information about exchange rate calculation service tax.",
      "properties": {
        "percentageAppliedOn": {
          "description": "Local currency amount the configured exchange service tax Percentage to be computed against.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "baseAmount": {
          "description": "Based Amount in local currency to be added on top of computed service tax based on Percentage.",
          "type": "number"
        },
        "percentage": {
          "description": "Percentage to be multiplied to Percentage Applied On to get the service tax.",
          "type": "number"
        },
        "minServiceTax": {
          "description": "Minimum service tax in local currency to be charged",
          "type": "number"
        },
        "maxServiceTax": {
          "description": "Maximum service tax in local currency to be charged.",
          "type": "number"
        },
        "exchangeRateTransactionGenerateTaxes": {
          "description": "Collection of exchange rate calculation tax information based on Transaction Code Generate.",
          "$ref": "#/definitions/exchangeRateTransactionGenerateTaxesType"
        }
      }
    },
    "exchangeRateTransactionGenerateTaxesType": {
      "type": "array",
      "description": "Exchange rate calculation tax information based on Transaction Code Generate.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/exchangeRateTransactionGenerateTaxType"
      }
    },
    "exchangeRateTransactionGenerateTaxType": {
      "type": "object",
      "description": "Tax information based on Transaction Code Generate.",
      "properties": {
        "code": {
          "description": "Transaction Code Generate description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Transaction Code Generate description.",
          "type": "string"
        },
        "taxAmount": {
          "description": "Tax amount based on Transaction Code Generate configuration.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "calculatedForeignCurrency": {
      "type": "object",
      "description": "Information regarding charges in batch result for each reservation.",
      "properties": {
        "exchangeInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/exchangeRateCalculationType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "foreignCurrencyExchange": {
      "type": "object",
      "description": "A set of posting transactions that need to be posted with regards to exchange.",
      "properties": {
        "foreignCurrencyExchangeList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postForeignCurrencyExchangeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postForeignCurrencyExchangeType": {
      "type": "object",
      "description": "Currency conversion calculation type.",
      "properties": {
        "hotelId": {
          "description": "Property code where the currency is being converted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fromCurrencyAmount": {
          "description": "Amount and code of currency that is being converted from.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "exchangeDate": {
          "description": "Date on which exchange rate was obtained.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sell": {
          "description": "Buy or Sell for calculation.",
          "type": "boolean"
        },
        "exchangeReference": {
          "description": "Exchange references.",
          "type": "string"
        },
        "exchangeType": {
          "description": "Type for exchange calculation.",
          "$ref": "#/definitions/currencyExchangeType"
        },
        "reservationId": {
          "description": "Reservation id",
          "$ref": "#/definitions/reservationId"
        },
        "profileId": {
          "description": "Profile ID of the profile to post to.",
          "$ref": "#/definitions/profileId"
        },
        "room": {
          "description": "Room to which posting is to be made.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guestName": {
          "description": "Name of the guest to whom posting is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "passerByName": {
          "description": "Name of the passer by customer to whom posting is to be done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cashierId": {
          "description": "The Cashier who is posting.",
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "foreignCurrencyExchangeTransaction": {
      "type": "object",
      "description": "Response of the posting foreign currency exchange transaction.",
      "properties": {
        "transaction": {
          "description": "Details of posting and generated folio.",
          "$ref": "#/definitions/foreignCurrencyExchangeTransactionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "foreignCurrencyExchangeTransactionType": {
      "type": "object",
      "description": "Details about posting and generated folio on currency exchange.",
      "properties": {
        "posting": {
          "description": "Details of the primary posting.",
          "$ref": "#/definitions/summaryPostingType"
        },
        "folio": {
          "description": "Details of the generated folio.",
          "$ref": "#/definitions/folioType"
        }
      }
    },
    "folioType": {
      "type": "object",
      "description": "Represents a single page in a reservation's ledger which will contain transactions and payee information.",
      "properties": {
        "payeeInfo": {
          "description": "Payee information for the folio.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "postings": {
          "description": "Postings for the folio view.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "folioAmount": {
          "description": "Folio gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "allowConvertFolioYn": {
          "description": "Flag to check Folio Conversion Allowed.",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revisionNo": {
          "description": "Folio Revison number.",
          "type": "number"
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        }
      }
    },
    "folioStatusType": {
      "type": "string",
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "batchAdvanceFolio": {
      "type": "object",
      "description": "Request for submitting batch advance folio.",
      "properties": {
        "batchAdvanceFolio": {
          "description": "Information regarding the reservations for batch advance folio processing.",
          "$ref": "#/definitions/batchAdvanceFolioType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchAdvanceFolioType": {
      "type": "object",
      "description": "Contains criteria for process batch advance folio.",
      "properties": {
        "hotelId": {
          "description": "Property context of the reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservations": {
          "description": "List of unique reservation identifiers having deposits to process. Reservations should come from the same property.",
          "$ref": "#/definitions/reservations"
        },
        "cashierId": {
          "description": "Unique cashier identifier to process the deposit transaction.",
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "reservations": {
      "type": "array",
      "description": "Unique identifier for a reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationId"
      }
    },
    "articlesSaleCriteria": {
      "type": "object",
      "description": "Request to post a set of charges, payments and generate a bill for a PasserBy or for the Post-It functionality . A PasserBy is someone who is not staying at the Property. A PasserBy transaction requires a Profile in Opera for whom the the folio is being created.",
      "properties": {
        "criteria": {
          "description": "Criteria for posting the Sale.",
          "$ref": "#/definitions/saleCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "saleCriteriaType": {
      "type": "object",
      "description": "Criteria type for posting charges.",
      "properties": {
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        }
      }
    },
    "chargesCriteriaType": {
      "type": "array",
      "description": "Collection of Charges to be posted.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/chargeCriteriaType"
      }
    },
    "chargeCriteriaType": {
      "type": "object",
      "description": "Criteria information for posting a charge.",
      "properties": {
        "transactionCode": {
          "description": "Transaction Code to post.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Article ID.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingQuantity": {
          "description": "Quantity to post to the folio.",
          "type": "integer"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNumber": {
          "description": "Indicates the Cheque number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "applyRoutingInstructions": {
          "description": "Apply room routing when making this posting.",
          "type": "boolean"
        },
        "usePackageAllowance": {
          "description": "Use the applicable package allowance when making this posting.",
          "type": "boolean"
        },
        "autoPosting": {
          "description": "True indicates the Transaction Code is allowed to be posted automatically.",
          "type": "boolean"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "covers": {
          "description": "POS covers.Api will only accept numeric values for Covers and if decimal values are passed will be ignored and rounded",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        }
      }
    },
    "paymentCriteriaType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Payment method used by the payee.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "postingAmount": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "comments": {
          "description": "User Defined Comments. Used for Deposit Payment postings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "applyCCSurcharge": {
          "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
          "type": "boolean"
        },
        "manualPaymentTaxInfo": {
          "description": "The Payment Tax information for Thailand Tax functionality. The invoice number and the date will be used.",
          "$ref": "#/definitions/paymentTaxType"
        },
        "creditablePaymentTaxes": {
          "description": "Used for Thailand Tax Functionality.The payment tax records that can be used for a Credit Note for this reservation.",
          "$ref": "#/definitions/paymentTaxesType"
        },
        "terminalId": {
          "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
          "type": "string"
        },
        "overrideInsufficientCC": {
          "description": "Flag to allow a rebate by Credit Card",
          "type": "boolean"
        },
        "changeDueAmount": {
          "description": "Amount of change given to guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compRedemptions": {
          "description": "Comp redemption information used to post as payment.",
          "$ref": "#/definitions/compRedemptionsType"
        },
        "overrideARCreditLimit": {
          "description": "Flag to override account receivable credit limit",
          "type": "boolean"
        },
        "applyCurrencyTaxes": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        },
        "vATOffset": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        },
        "action": {
          "description": "Payment action to know from where the payment has been made.",
          "$ref": "#/definitions/postPaymentActionType"
        },
        "prepaidCardRedemptions": {
          "description": "Prepaid Card redemption information used to post as payment.",
          "$ref": "#/definitions/prepaidCardRedemptionsType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "originalInvoice": {
          "description": "User-defined original invoice number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "invoiceType": {
          "description": "Type of invoice specified in the originalInvoice field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        }
      }
    },
    "cashieringPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        },
        "authorizationApproval": {
          "description": "Authorization approval record.",
          "$ref": "#/definitions/authorizationInfoType"
        },
        "track2Data": {
          "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "authorizationInfoType": {
      "type": "object",
      "properties": {
        "approvalAmount": {
          "description": "Approved amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "The approval code authenticates the authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "originalAuthSequence": {
          "description": "Unique Authorization Sequence for the authorization and settlement.",
          "type": "integer"
        },
        "vendorTranId": {
          "description": "Vendor transaction id for the authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "paymentTaxType": {
      "type": "object",
      "description": "Information regarding payments made which have Payment Tax.",
      "properties": {
        "taxInvoiceNo": {
          "description": "The Tax Invoice for this payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentType": {
          "description": "The Type of Payment transaction.",
          "$ref": "#/definitions/paymentTax"
        },
        "amount": {
          "description": "The payment amount/",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxableAmount": {
          "description": "The amount that is taxable.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonTaxableAmount": {
          "description": "Documentation goes here",
          "$ref": "#/definitions/currencyAmountType"
        },
        "availableCredit": {
          "description": "The amount that is not taxable.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentDate": {
          "description": "The Payment Invoice date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code of the Payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "paymentTax": {
      "type": "string",
      "description": "The types of Payment Tax transactions.",
      "enum": [
        "Deposit",
        "FrontOffice",
        "CreditNote",
        "CityLedger",
        "AccountsReceivables",
        "NonVat"
      ]
    },
    "paymentTaxesType": {
      "type": "array",
      "description": "Payment Tax record.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paymentTaxType"
      }
    },
    "compRedemptionsType": {
      "type": "array",
      "description": "Information regarding Complimentary Bucket Redemption object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/redemptionType"
      }
    },
    "redemptionType": {
      "type": "object",
      "description": "Redemption information.",
      "properties": {
        "amount": {
          "description": "The amount to redeem when posting a payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The associated redemption code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "supplement": {
          "description": "Additional information regarding the redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description of the Complimentary Bucket Redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code of the Complimentary Bucket Redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "availableAmount": {
          "description": "Available Amount of the Complimentary Bucket Redemption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionNo": {
          "description": "Transaction Number of the Complimentary Bucket Redemption.",
          "type": "number"
        },
        "approvalCode": {
          "description": "Approval Code of the Complimentary Bucket Redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "postPaymentActionType": {
      "type": "string",
      "description": "Advance Payment Action.",
      "enum": [
        "Billing",
        "Settlefolio",
        "Deposit",
        "Compredemption",
        "Prepaidcardredemption",
        "Advancepayment"
      ]
    },
    "prepaidCardRedemptionsType": {
      "type": "array",
      "description": "A prepaid redemption info object to be used for posting a payment.",
      "maxItems": 1000,
      "items": {
        "$ref": "#/definitions/prepaidCardRedemptionType"
      }
    },
    "prepaidCardRedemptionType": {
      "type": "object",
      "description": "Redemption information.",
      "properties": {
        "cardNo": {
          "description": "Prepaid card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "pin": {
          "description": "Prepaid card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "interfaceId": {
          "description": "The unique ID of the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "amount": {
          "description": "The amount to redeem when posting a payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "The associated redemption transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reference": {
          "description": "Additional information regarding the redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "fiscalServiceType": {
      "type": "object",
      "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation",
      "properties": {
        "fiscalTerminal": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "invoiceCurrencyCode": {
          "description": "Fiscal Invoicing Currency code to be used by the Fiscal Service.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instructions": {
          "description": "Defines the action of the generate folio process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "folioQueueName": {
          "description": "Folio Type , Queue name , Fiscal Flag to be used in folio generation This is a country requirement.",
          "$ref": "#/definitions/folioQueueType"
        },
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "fiscalFolioInstruction": {
      "type": "string",
      "description": "Action to generate Offline folio when no reponse is received from fiscal service.",
      "enum": [
        "Retry",
        "New",
        "Void",
        "Offline"
      ]
    },
    "folioQueueType": {
      "type": "object",
      "description": "List of charges that will be posted against the transaction code based from the test criteria.",
      "properties": {
        "folioType": {
          "description": "Folio Type to be assigned to generated folio. This is a country requirement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "queueName": {
          "description": "Folio Queue name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "generateFiscalFolio": {
          "description": "Fiscal folio flag to call fiscal folio web service after folio generation.",
          "type": "boolean"
        }
      }
    },
    "nameValueHeaderDetailType": {
      "type": "object",
      "description": "Name value details collected before Folio Settlement",
      "properties": {
        "nameValueHeader": {
          "description": "Name Value Header Information",
          "$ref": "#/definitions/nameValueBaseSearchType"
        },
        "nameValueDetails": {
          "description": "Name Value Detail Information",
          "$ref": "#/definitions/nameValueDetailType"
        }
      }
    },
    "nameValueBaseSearchType": {
      "type": "object",
      "description": "Contains name value information search criteria.",
      "properties": {
        "hotelId": {
          "description": "Specifies the hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "moduleName": {
          "description": "Contains model name i.e. Reservation, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "nameValueType": {
          "description": "Contains name value type value i.e. AFTER_SETTLEMENT, BEFORE_SETTLEMENT, RESERVATION, etc.",
          "$ref": "#/definitions/nameValueTypeType"
        },
        "sequence": {
          "description": "Indicates configuration sequence number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "configName": {
          "description": "Custom Name value Config Name.",
          "$ref": "#/definitions/customNameValueConfigType"
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "nameValueTypeType": {
      "type": "string",
      "enum": [
        "ReservationOptions",
        "AfterSettlement",
        "BeforeSettlement",
        "AfterPayment",
        "ProfileOptions"
      ]
    },
    "customNameValueConfigType": {
      "type": "string",
      "description": "Italian Lottery Number.",
      "enum": [
        "ItalianFattura",
        "Folio",
        "FinancialTransaction",
        "TaiwanInvoice",
        "SaudiCustomerType",
        "ItalianLotteryNumber"
      ]
    },
    "nameValueDetailType": {
      "type": "object",
      "description": "Detailed information returned during name value search.",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValuesType": {
      "type": "array",
      "description": "List of name value pairs.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "nameValueType": {
      "type": "object",
      "description": "Contains name value pair.",
      "properties": {
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueOriginType": {
      "type": "object",
      "description": "Contains origin details.",
      "properties": {
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "articlesSale": {
      "type": "object",
      "description": "Details of the folio created.",
      "properties": {
        "folioWindowDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioWindowType": {
      "type": "object",
      "description": "A folio window view which holds the set of folios for a reservation.",
      "properties": {
        "revenue": {
          "description": "Revenue amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioSplitInfo": {
          "description": "Contains the folio split posting information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioSplitInfoType"
          }
        },
        "payment": {
          "description": "Payment amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitRevenue": {
          "description": "Revenue debit amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitPayment": {
          "description": "Payment debit amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitBalance": {
          "description": "Running debit balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/folioWindowExchangeAmounts"
        },
        "paymentMethod": {
          "description": "Defined method of payment for this window.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "compAccountingInfo": {
          "description": "Defined comp accounting configuration for this window",
          "$ref": "#/definitions/compAccountingType"
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "fiscalFolioInstruction": {
          "description": "Defines the action of the generate folio process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "folios": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioType"
          }
        },
        "vATOffsetAmount": {
          "description": "VAT offset amount of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "serviceTypeInfo": {
          "description": "Contains service type information associated with transaction code posted in folio window.",
          "$ref": "#/definitions/transactionServiceTypesType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "emptyFolio": {
          "description": "Flag to notify if the current folio has any postings.",
          "type": "boolean"
        },
        "emptyWindow": {
          "description": "Flag to notify if the entire window has any postings.",
          "type": "boolean"
        },
        "officialBIRReceiptExists": {
          "description": "Flag to indicate if an Official Receipt is generated for the folio window. Applicable only in the Philippines.",
          "type": "boolean"
        },
        "simpleFolio": {
          "description": "This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.",
          "type": "boolean"
        },
        "paymentsOnly": {
          "description": "Flag to indicate the window has only payment transactions",
          "type": "boolean"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "ackBIRReceiptExists": {
          "description": "Flag to indicate if an Acknowledgement Receipt is generated for the folio window. Applicable only in the Philippines.",
          "type": "boolean"
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "taxFolioPostingExists": {
          "description": "Indicates whether a folio window has Tax Folio transaction codes or not.",
          "type": "boolean"
        }
      }
    },
    "folioWindowExchangeAmounts": {
      "type": "object",
      "description": "Converted folio windows values for the Exchange Currency requested.",
      "properties": {
        "revenue": {
          "description": "The converted Folio Window Revenue Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payment": {
          "description": "The converted Folio Window Payment Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "The converted Folio Window Total Amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "compAccountingType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        },
        "aRNumber": {
          "description": "AR Account Number of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTypeCode": {
          "description": "The Comp Type for this Account. Used when using the Comp types functionality",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compVoucherNo": {
          "description": "The coupon or voucher number used by the external gaming system to track postings made to this routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "dateRange": {
          "description": "Arrival date range for comp routing",
          "$ref": "#/definitions/dateRangeType"
        },
        "membershipId": {
          "description": "Membership number",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "membershipIdNo": {
          "description": "Unique Id of membership",
          "type": "integer"
        },
        "membershipNameOnCard": {
          "description": "Name displayed on the membership card",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fiscalResponseType": {
      "type": "object",
      "description": "Provides information which is used for fiscal response processing.",
      "properties": {
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "retryFiscalPrinting": {
          "description": "Flag to do the retrieval process of fiscal printing or not.",
          "type": "boolean"
        }
      }
    },
    "transactionServiceTypesType": {
      "type": "array",
      "description": "Details about service type postings.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionServiceTypeType"
      }
    },
    "transactionServiceTypeType": {
      "type": "object",
      "description": "Containsts service type posting information.",
      "properties": {
        "serviceType": {
          "description": "Contains service type code attached with transaction code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "revenue": {
          "description": "Revenue amount of the service type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payment": {
          "description": "Payment amount of the service type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Running balance of the service type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPostings": {
          "description": "Running total number of the service type.",
          "type": "integer"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "authorizersCreditInfo": {
      "type": "object",
      "description": "Returns credit information of Comp Accounting Authorizers.",
      "properties": {
        "authorizersCreditType": {
          "description": "Comp Accounting Authorizers credit information.",
          "$ref": "#/definitions/authorizersCreditType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizersCreditType": {
      "type": "array",
      "description": "List of Comp Accounting Authorizers Credits",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerCreditType"
      }
    },
    "authorizerCreditType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Identifies the hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditLimit": {
          "description": "Indicates the Credit Limit of the Authorizers.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "actualAmount": {
          "description": "Indicates the Actual Amount which has been authorized.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizerCreditDetails": {
          "description": "Indicates the Comp Authorizer credit details.",
          "$ref": "#/definitions/authorizerCreditDetailsType"
        },
        "transactionDate": {
          "description": "Transaction Date associated with the transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "authorizerCreditDetailsType": {
      "type": "array",
      "description": "List of Comp Accounting Authorizers details",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerCreditDetailType"
      }
    },
    "authorizerCreditDetailType": {
      "type": "object",
      "description": "Information about the Authorizer Credit detail",
      "properties": {
        "creditLimit": {
          "description": "Indicates the Credit Limit of the Authorizers.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "actualAmount": {
          "description": "Indicates the Actual Amount which has been authorized.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "billingInstruction": {
          "description": "Indicates the Routing Instructions for which Authorization was done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "batchAutoCheckoutReservation": {
      "type": "object",
      "description": "Request type for batch auto checkout.",
      "properties": {
        "criteria": {
          "description": "Criteria for batch auto checkout.",
          "$ref": "#/definitions/checkoutReservationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkoutReservationType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "$ref": "#/definitions/uniqueIDListType"
        },
        "eventType": {
          "description": "Event to which this process will be logged.",
          "$ref": "#/definitions/cashieringEventType"
        },
        "checkoutInstr": {
          "$ref": "#/definitions/checkoutInstructionsType"
        },
        "mobileCheckoutFolioEmail": {
          "description": "This is the email address used by the External System to email a folio. Opera will not use this as the default email address for the folio. This will be stored as a EFOLIO type email of the Guest and an applicable external folio flag will be updated on the reservation.",
          "$ref": "#/definitions/basicEmailType"
        },
        "checkoutWithOpenFolio": {
          "description": "If the Property works with Open Folios and the reservation has the privileges for Post Stay Charging, this flag could be set to True which would checkout the guest without requiring the guest to settle his balances.",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "mobileCheckout": {
          "description": "This flag will be set to true if the reservation is checked out via mobility service. When the reservation is checked out through UI, this would be false.",
          "type": "boolean"
        },
        "autoCheckout": {
          "description": "This flag will be set to true if the reservation is checked out via mobility service. When the reservation is checked out through UI, this would be false.",
          "type": "boolean"
        },
        "stopCheckout": {
          "description": "Indicates Stop Checkout reservation Global Alert flag.",
          "type": "boolean"
        }
      }
    },
    "cashieringEventType": {
      "type": "string",
      "description": "Event being generated by a Supplemental Folio.",
      "enum": [
        "CheckOut",
        "EarlyDeparture",
        "AdvanceBill",
        "InterimBill",
        "PasserBy",
        "PostIt",
        "CreditBill",
        "ChargesAndPayments",
        "Deposit",
        "DepositRefund",
        "AutoFolio",
        "PrepaidCard",
        "AutoSettlement",
        "InformationFolio",
        "SupplementalFolio"
      ]
    },
    "checkoutInstructionsType": {
      "type": "object",
      "properties": {
        "roomStatus": {
          "description": "Housekeeping Status to be assigned to the room after checkout.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "scheduleOn": {
          "description": "Date and time for scheduled check out which could be performed when SCHEDULED CHECKOUT is active. Room status will be assigned according to SCHEDULED CHECKOUT ROOM STATUS parameter value.",
          "type": "string",
          "format": "date-time"
        },
        "guestPreferredCurrency": {
          "description": "Currency Code which the Guest preferred to use and to be stored on the reservation of the Guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ignoreWarnings": {
          "description": "Dictates whether to ignore warnings before check out.",
          "type": "boolean"
        }
      }
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "batchAutoCheckoutDetails": {
      "type": "object",
      "description": "Response for batch auto check out.",
      "properties": {
        "processId": {
          "description": "Batch process identifier.",
          "$ref": "#/definitions/stringLength40"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stringLength40": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 40.",
      "maxLength": 40,
      "minLength": 0
    },
    "batchAutoSettlementCriteria": {
      "type": "object",
      "description": "Request type for batch auto settlement.",
      "properties": {
        "criteria": {
          "description": "Criteria for batch auto settlement.",
          "$ref": "#/definitions/autoSettlementType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoSettlementType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "$ref": "#/definitions/uniqueIDListType"
        },
        "eventType": {
          "description": "Event to which this process will be logged.",
          "$ref": "#/definitions/cashieringEventType"
        },
        "paymentMethods": {
          "description": "Payment methods to be settled.",
          "$ref": "#/definitions/paymentMethodsSearchType"
        },
        "folioWindowsToSettle": {
          "description": "Folio windows to do auto auto settlement.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "folioWindowsToTransfer": {
          "description": "Folio windows to transfer.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "reservationCriteria": {
          "description": "This is related to reservation search.If the Reservation ID list is empty then this criteria filter will be applied to the reservation.",
          "$ref": "#/definitions/autoFolioSettlementCriteriaType"
        },
        "includeCreditCardBalance": {
          "description": "Dictates whether to include negative postings for auto settlement.",
          "type": "boolean"
        },
        "minimumWindowBalance": {
          "description": "Indicates the minimum window balance to do auto settlement.",
          "type": "integer"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "paymentMethodsSearchType": {
      "type": "array",
      "description": "Defines the payment method to search reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paymentMethodSearchType"
      }
    },
    "paymentMethodSearchType": {
      "type": "object",
      "description": "Reservation Payment method search criteria for searching a reservation.",
      "properties": {
        "paymentMethod": {
          "description": "Payment Method to search the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "autoFolioSettlementCriteriaType": {
      "type": "object",
      "properties": {
        "folioSettlementTypes": {
          "description": "Comma-delimited list of Folio Settlement Type codes.",
          "type": "string"
        },
        "defaultDays": {
          "description": "Use the Number of Days For Settlement, defined for the Reservation.",
          "type": "boolean"
        },
        "daysSinceLastAutoSettled": {
          "description": "Days since the last auto folio settlement.",
          "type": "integer",
          "minimum": 1,
          "maximum": 365
        },
        "dateSinceLastAutoSettled": {
          "description": "Date since the last auto folio settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "batchDeposit": {
      "type": "object",
      "description": "Request for submitting batch deposit for reservations.",
      "properties": {
        "batchDeposit": {
          "description": "Information regarding the reservations for batch deposit processing.",
          "$ref": "#/definitions/batchDepositType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchDepositType": {
      "type": "object",
      "description": "Contains criteria for batch deposit for reservations.",
      "properties": {
        "hotelId": {
          "description": "Property context of the reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservations": {
          "description": "List of unique reservation identifiers having deposits to process. Reservations should come from the same property.",
          "$ref": "#/definitions/reservations"
        },
        "cashierId": {
          "description": "Unique cashier identifier to process the deposit transaction.",
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "bedTaxInfo": {
      "type": "object",
      "description": "Response for bed transaction info",
      "properties": {
        "bedTaxInfoTypes": {
          "description": "Criteria for bed transaction info.",
          "$ref": "#/definitions/bedTaxInfoTypes"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTaxInfoTypes": {
      "type": "array",
      "description": "List of Bed Tax info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bedTaxInfoType"
      }
    },
    "bedTaxInfoType": {
      "type": "object",
      "description": "Bed Trx Info type",
      "properties": {
        "hotelId": {
          "description": "Property associated with bed tax",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxRegistrationNo": {
          "description": "Tax Registration Number",
          "type": "integer"
        },
        "taxArrivaldate": {
          "description": "Arrival Date with time of the reservation",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "arrivalCarrierCode": {
          "description": "Arrival Carrier code of the mode of transportation (Airline No. or Railway No., etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxDepartureDate": {
          "description": "Departure Date with time of the reservation",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "departureCarrierCode": {
          "description": "Departure Carrier code of the mode of transportation (Airline No. or Railway No., etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guestName": {
          "description": "Guest name associated with the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "reservationNameId": {
          "description": "Reservation name id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "guestNameId": {
          "description": "Guest Name id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "arrival": {
          "description": "Arrival Date of the reservation",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "departure": {
          "description": "Departure Date with time of the reservation",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "description": "Visa Number",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Issue date of the Visa",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpirationDate": {
          "description": "Expiration date of visa",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxNoOfStays": {
          "description": "Total number of tax stays at the property",
          "type": "integer"
        },
        "profession": {
          "description": "Profession of the guest",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "passPortStr": {
          "description": "Passport number",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "passport": {
          "description": "Passport number",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nationality": {
          "description": "Nationality of the guest",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guestAge": {
          "description": "Age of the guest",
          "type": "integer"
        },
        "country": {
          "description": "Country of the guest",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "remark": {
          "description": "User-defined remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "bedTaxCriteria": {
      "type": "object",
      "description": "Request type for change bed transaction info",
      "properties": {
        "bedTaxInfoType": {
          "description": "bed transaction info.",
          "$ref": "#/definitions/bedTaxInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "putBillingCharges": {
      "type": "object",
      "description": "Request to edit a billing charge information.",
      "properties": {
        "criteria": {
          "description": "Criteria for the charge information to be edited.",
          "$ref": "#/definitions/billingChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingChargesType": {
      "type": "object",
      "description": "Criteria for the charge information list to be edited.",
      "properties": {
        "billingCharges": {
          "description": "Request to edit a billing charge information",
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/billingChargeType"
          }
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "billingChargeType": {
      "type": "object",
      "properties": {
        "transactionNo": {
          "description": "Transaction number of the posting being corrected.",
          "type": "number"
        },
        "price": {
          "description": "Corrected charge price.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Corrected posting quantity.",
          "type": "integer"
        },
        "reference": {
          "description": "Corrected user-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "Corrected user-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNumber": {
          "description": "Corrected Cheque number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "revenueDate": {
          "description": "Corrected Revenue Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "covers": {
          "description": "POS covers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalDate": {
          "description": "Approval date of the posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "putBillingChargesStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccBatchSettlementsStatus": {
      "type": "object",
      "description": "Response for credit card settlements status.",
      "properties": {
        "batchSettlementsStatus": {
          "description": "List of credit card transaction.",
          "$ref": "#/definitions/cCBatchSettlementsStatusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cCBatchSettlementsStatusType": {
      "type": "object",
      "description": "List of CCBatchSettlementStatusType type",
      "properties": {
        "cCBatchSettlementsStatus": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cCBatchSettlementStatusType"
          }
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "batchId": {
          "description": "Batch Id for identify status of job.",
          "type": "string"
        }
      }
    },
    "cCBatchSettlementStatusType": {
      "type": "object",
      "description": "Provides status information for credit card settlements .",
      "properties": {
        "settlementStatus": {
          "description": "Status of credit card settlements.",
          "type": "string"
        },
        "settlementId": {
          "description": "List of selected settlements id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reason": {
          "description": "Batch Id for identify status of job.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "cashierClosureDetails": {
      "type": "object",
      "description": "Response for the fetch Cashier Closure information.",
      "properties": {
        "cashierClosureInfo": {
          "description": "Cashier shift amounts group by resort and currency.",
          "$ref": "#/definitions/cashierClosureType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierClosureReportsList": {
      "type": "object",
      "description": "Returns whether a particular report is applicable or not based on payment posting type. When no postings for a particular payment type is found, that report is marked as not applicable in the closure report.",
      "properties": {
        "cashierReportList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/cashierReportType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierReportType": {
      "type": "string",
      "description": "Shift drop report created when cashier closure is completed. It is an integral part of closure report and is not to be printed or accessed by itself.",
      "enum": [
        "Cash",
        "Check",
        "ForeignCurrency",
        "CreditCard",
        "Miscellaneous",
        "ArSettlements",
        "DepositTransfers",
        "Shiftdrop"
      ]
    },
    "transactionReversal": {
      "type": "object",
      "description": "Request to reverse a Payment Tax record for Thailand Tax requirement.",
      "properties": {
        "reverseCriteria": {
          "description": "Criteria for reversing the Payment Tax Record.",
          "$ref": "#/definitions/deleteTransactionCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "deleteTransactionCriteriaType": {
      "type": "object",
      "description": "Criteria type for deletion of transactions.",
      "properties": {
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "reasonCode": {
          "description": "The reason code for the deletion.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "folioTaxPaymentReversal": {
      "type": "object",
      "description": "Response for the reverse Thailand Tax Payment Tax record request.",
      "properties": {
        "postings": {
          "description": "List of Postings produced by Reverse Payment Tax Request.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierLockCriteriaToExtend": {
      "type": "object",
      "description": "Operation for extending the lifetime of a lock on a cashier.",
      "properties": {
        "additionalTimeToLive": {
          "description": "The number of seconds to add to the lock's validity time.",
          "type": "number"
        },
        "cashierLockHandle": {
          "description": "The lock handle of the record lock we are attempting to extend.",
          "$ref": "#/definitions/cashierLockHandle"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "extendedCashierLock": {
      "type": "object",
      "description": "This response will indicate whether or not the extension was successful. This operation may return errors when the lock being requested to be extended no longer exists. This can happen when the lock has already expired and cleaned up.",
      "properties": {
        "cashierLock": {
          "description": "This contains the updated lock information for the cashier. The time to live will contain the updated lifetime of the lock.",
          "$ref": "#/definitions/operaRecordLock"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccSettlementCriteria": {
      "type": "object",
      "description": "Request object to change credit card settlement information.",
      "properties": {
        "hotelId": {
          "description": "Hotel code.",
          "$ref": "#/definitions/codeType"
        },
        "creditCardSettlement": {
          "description": "credit card settlement.",
          "$ref": "#/definitions/cCBatchSettlementType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cCBatchSettlementType": {
      "type": "object",
      "description": "Credit card transaction detail for batch settlement",
      "properties": {
        "settlementId": {
          "description": "CC Settlement id associated with the CC settlement transaction.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "settlementAmount": {
          "description": "Settlement amount associated with the CC settlement transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestName": {
          "description": "Guest name associated with the CC settlement transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomId": {
          "description": "Room number associated with the CC settlement transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "windowNo": {
          "description": "Window number associated with the CC settlement transaction.",
          "type": "integer"
        },
        "paymentMethod": {
          "description": "Identifies the payment method to validate the credit card number against.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationId": {
          "description": "Unique Id for the reservation",
          "$ref": "#/definitions/reservationId"
        },
        "approvalCode": {
          "description": "The approval code authenticates the authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioNo": {
          "description": "Folio number of transaction",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date of the credit card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "ccBatchSettlementsProcessCriteria": {
      "type": "object",
      "description": "Request to process batch settlements",
      "properties": {
        "criteria": {
          "description": "Selected settlements which will process",
          "$ref": "#/definitions/cCBatchSettlementsProcessType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cCBatchSettlementsProcessType": {
      "type": "object",
      "description": "Type for starting settlements job process.",
      "properties": {
        "hotelId": {
          "description": "Hotel code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "settlementIdList": {
          "description": "List of selected settlements id.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "batchId": {
          "description": "Batch Id for identify status of job.",
          "type": "string"
        }
      }
    },
    "checkDetails": {
      "type": "object",
      "description": "Response object to Fetch the check details for a given posting posted through the POS.",
      "properties": {
        "checkDetailsInfo": {
          "description": "Response flag whether the instructions overlaps or not.",
          "$ref": "#/definitions/stringLength32000"
        },
        "checkImageInfo": {
          "description": "Response of guest check Image details in encoded format.",
          "type": "string",
          "format": "byte"
        },
        "checkNumber": {
          "description": "Indicates the Cheque number.",
          "$ref": "#/definitions/stringLength200"
        },
        "checkDate": {
          "description": "Indicates the Cheque date.",
          "type": "string",
          "format": "date"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stringLength32000": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 32000.",
      "maxLength": 32000,
      "minLength": 0
    },
    "stringLength200": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 200.",
      "maxLength": 200,
      "minLength": 0
    },
    "guestCheckDetails": {
      "type": "object",
      "description": "Request to process a guest check detail.",
      "properties": {
        "reservationId": {
          "description": "Reservation Id for which the details need to be posted.",
          "$ref": "#/definitions/reservationId"
        },
        "checkDetails": {
          "description": "Check details that needs to be posted.",
          "$ref": "#/definitions/checkDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkDetailsType": {
      "type": "object",
      "description": "Holds check details information.",
      "properties": {
        "checkDate": {
          "description": "Check date of the posting.",
          "type": "string",
          "format": "date-time"
        },
        "checkText": {
          "description": "Check text of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "checkImage": {
          "description": "Check image of the posting.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "cashierClosureInformation": {
      "type": "object",
      "description": "Response to the request to get financial details for a Posting Activity. This will return the before and after values for the transactions which were changed.",
      "properties": {
        "cashierClosureInfo": {
          "description": "The details of the changes made during the activity.",
          "$ref": "#/definitions/cashierClosureInfoTypes"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierClosureInfoTypes": {
      "type": "array",
      "description": "Information of the Cashier.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cashierClosureInfoType"
      }
    },
    "cashierClosureInfoType": {
      "type": "object",
      "description": "Cashier closure Information.",
      "properties": {
        "cashierClosureNo": {
          "description": "Criteria for the cashier closure id and the closure number",
          "$ref": "#/definitions/cashierClosureNoType"
        },
        "hotelId": {
          "description": "Property this record belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierTitle": {
          "description": "Cashier title of the cashier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "cashierUser": {
          "description": "Cashier user name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "openDate": {
          "description": "Date and time cashier was opened.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "closeDate": {
          "description": "Date and time cashier was closed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "closureBusinessDate": {
          "description": "Business date cashier was closed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reportsList": {
          "description": "Returns whether a particular report is applicable or not based on payment posting type. When no postings for a particular payment type is found, that report is marked as not applicable in the closure report.",
          "$ref": "#/definitions/cashierClosureReportsType"
        }
      }
    },
    "cashierClosureReportsType": {
      "type": "array",
      "description": "Information of the Cashier.",
      "maxItems": 7,
      "items": {
        "$ref": "#/definitions/cashierReportType"
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "compRoutingInstructions": {
      "type": "object",
      "description": "Response object containing comp routing instructions for a reservation .",
      "properties": {
        "resvRoutingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/resvRoutingInfoListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "resvRoutingInfoListType": {
      "type": "array",
      "description": "A comp routing info object",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resvRoutingInfoType"
      }
    },
    "resvRoutingInfoType": {
      "type": "object",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "properties": {
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            }
          }
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "routingInstructionType": {
      "type": "object",
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "properties": {
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "timeSpan": {
              "$ref": "#/definitions/timeSpanType"
            },
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            }
          }
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        },
        "routingLinkId": {
          "description": "Internal Routing Link Id identifier to which limit group the instruction belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "billingInstructionsType": {
      "type": "array",
      "description": "Set of Billing Instruction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingInstructionType": {
      "type": "object",
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "properties": {
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "compRoutingRequestType": {
      "type": "object",
      "description": "Type for the details of a Comp Routing Request",
      "properties": {
        "requestedBy": {
          "description": "User who requested the Comp Routing",
          "$ref": "#/definitions/userInfoType"
        },
        "comments": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "declinedBy": {
          "description": "User information of user who declined comp routing request",
          "$ref": "#/definitions/userInfoType"
        },
        "status": {
          "description": "Comp routing status",
          "$ref": "#/definitions/compRoutingStatusType"
        }
      }
    },
    "userInfoType": {
      "type": "object",
      "description": "Opera User Information",
      "properties": {
        "userId": {
          "description": "User Id of the Opera User",
          "type": "integer"
        },
        "userName": {
          "description": "Name of the Opera User",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "compRoutingStatusType": {
      "type": "string",
      "description": "Status which indicates that the Request of Comp Routing was declined",
      "enum": [
        "Request",
        "Comp",
        "Declined"
      ]
    },
    "reservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expectedServiceTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        }
      }
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "bookingTimeSpan": {
          "description": "The booking time span of the reservation, only applicable when time increments are being used.",
          "$ref": "#/definitions/bookingTimeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomOwnershipType": {
          "description": "Provides the information of the assigned reservation room is an Owner,Referral or regular room. This value is returned when Room Rotation OPERA Control is active and room number is assigned to a reservation.",
          "$ref": "#/definitions/reservationRoomOwnershipType"
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "backToBackSequence": {
          "description": "This attribute represents Back To Back Sequence of Linked Reservations(e.g. '1,2' i.e, 1 indicates Sequence Position of total count 2). This is applicable when OPERA control Back to Back Handling for Linked Reservations is active.",
          "$ref": "#/definitions/backToBackResSequenceType"
        },
        "backToBack": {
          "description": "This attribute indicates if the linked reservation is marked as Back to Back or not.",
          "type": "boolean"
        },
        "backToBackGroupId": {
          "description": "This attribute represents a common identifier for a subgroup of linked reservations marked as Back to Back in a group of linked reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "resGuestInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "membershipInfoType": {
      "type": "object",
      "description": "The Membership object identifies the frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "totalAmountRedeemed": {
          "description": "Total amount that was redeemed so far through points.",
          "type": "number"
        },
        "expireDate": {
          "description": "Indicates the end date of membership.",
          "type": "string",
          "format": "date"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True indicates membership is a Primary Membership.",
          "type": "boolean"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        }
      }
    },
    "namePrefixType": {
      "type": "string",
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "minLength": 0,
      "maxLength": 40
    },
    "givenNameType": {
      "type": "string",
      "description": "Given name, first name or names",
      "minLength": 0,
      "maxLength": 40
    },
    "surnameType": {
      "type": "string",
      "description": "Family name, last name.",
      "minLength": 0,
      "maxLength": 40
    },
    "phoneNumberType": {
      "type": "string",
      "description": "Phone number",
      "minLength": 0,
      "maxLength": 40
    },
    "vIPType": {
      "type": "object",
      "description": "The supplier's ranking of the customer.",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "addressSearchType": {
      "type": "object",
      "description": "Address Details such as city, state, country, postal code etc.",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        }
      }
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "resAccompanyGuestListType": {
      "type": "array",
      "description": "Collection of accompany guests",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "resGuestExternalInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "guestLastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details of the guest.",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "resSharedGuestListType": {
      "type": "array",
      "description": "Collection of shared guest reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resSharedGuestInfoType": {
      "type": "object",
      "description": "Contains information regarding the share reservation.",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        }
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "reservationFolioWindowsType": {
      "type": "array",
      "description": "Collection of reservation folio windows.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationFolioWindowType": {
      "type": "object",
      "description": "Folio window view which holds the set of folios for a reservation.",
      "properties": {
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "searchMatchesType": {
      "type": "array",
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "searchMatchType": {
      "type": "object",
      "description": "Search match indicating attribute and the matching value.",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "properties": {
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "waitlistResType": {
      "type": "object",
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "properties": {
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationQueueInformationType": {
      "type": "object",
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "properties": {
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "queueTextInfoType": {
      "type": "object",
      "description": "Information regarding the message sent to guest.",
      "properties": {
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        },
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resHousekeepingType": {
      "type": "object",
      "description": "Holds housekeeping turndown service information for the room.",
      "properties": {
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "facilityTaskType": {
      "type": "object",
      "description": "Information regarding facility task on a reservation.",
      "properties": {
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "housekeepingTaskCodeType": {
      "type": "object",
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "properties": {
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityCodeType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resCashieringType": {
      "type": "object",
      "description": "Cashiering Information for the reservation.",
      "properties": {
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resRevenueBalanceType": {
      "type": "object",
      "description": "Revenue and Balance Amount summary for the reservation.",
      "properties": {
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "billingPrivilegesType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bedTaxReportingType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        }
      }
    },
    "folioTextsType": {
      "type": "array",
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          }
        }
      }
    },
    "resPeriodicFolioType": {
      "type": "object",
      "description": "Information regarding periodic folios set on the reservation.",
      "properties": {
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        }
      }
    },
    "resCompAccountingType": {
      "type": "object",
      "description": "Information regarding comp accounting on the reservation.",
      "properties": {
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "type": "object",
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "reservationDepositType": {
      "type": "object",
      "description": "Reservation Deposit Type.",
      "properties": {
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        }
      }
    },
    "reservationAllowedActionsType": {
      "type": "array",
      "description": "Allowed action.",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "HouseKeeping",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationInterfaceStatusType": {
      "type": "object",
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "properties": {
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        }
      }
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ],
      "description": "XML Posting Interface"
    },
    "hotelInterfaceStatusType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "reservationTurndownInfoType": {
      "type": "object",
      "description": "Turndown information for a reservation",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "type": "string",
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "resMobileNotificationsType": {
      "type": "object",
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "properties": {
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        }
      }
    },
    "communicationStatusType": {
      "type": "string",
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "resCommunicationType": {
      "type": "object",
      "description": "Communication details for a reservation.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "advanceCheckInType": {
      "type": "object",
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "resAccessRestrictionType": {
      "type": "string",
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "compTrxAuthorizers": {
      "type": "object",
      "description": "Response object for fetch comp authorizers operation.",
      "properties": {
        "authorizerInfo": {
          "description": "List of authorizers eligible to perform the transfer.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/authorizerInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditBillCriteria": {
      "type": "object",
      "description": "Request to post a Credit Folio for an existing Folio. Credit Bill Functionality parameter is required.",
      "properties": {
        "criteria": {
          "description": "Criteria for creating the Credit Folio. This should include all charges and payments for the Credit Folio.",
          "$ref": "#/definitions/creditBillCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditBillCriteriaType": {
      "type": "object",
      "description": "Criteria for posting the Credit Bill. Includes charges and payments.",
      "properties": {
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "originalFolio": {
          "description": "Original Folio details. This is the folio for which a Credit Bill is required.",
          "$ref": "#/definitions/folioType"
        },
        "fullCredit": {
          "description": "Flag can be used when a Credit Bill is to be created for full set of transactions in the Original Bill.",
          "type": "boolean"
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        }
      }
    },
    "postedCreditBill": {
      "type": "object",
      "description": "Response for the request to create a Credit Folio.",
      "properties": {
        "folioWindow": {
          "description": "Information regarding the new Credit Folio created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "payments": {
          "description": "Deposit payment information of the payment which was posted.",
          "$ref": "#/definitions/detailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validatedCreditBill": {
      "type": "object",
      "description": "Response to the request to check if a Folio is valid for Credit Bill.",
      "properties": {
        "folio": {
          "description": "Contains Folio Details including payee information and the reservation which it's attached to.",
          "type": "object",
          "properties": {
            "fiscalTerminalId": {
              "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
              "type": "string",
              "maxLength": 2000
            },
            "payeeInfo": {
              "description": "Payee information for the folio.",
              "$ref": "#/definitions/payeeInfoType"
            },
            "folioAmount": {
              "description": "Folio gross amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "allowConvertFolioYn": {
              "description": "Flag to check Folio Conversion Allowed.",
              "type": "boolean"
            },
            "accountReceivablesFolio": {
              "description": "Flag to check Folio generated from Acoount Receivables.",
              "type": "boolean"
            },
            "paymentTrxNo": {
              "description": "Bill Payment transaction Number.",
              "type": "number"
            },
            "reservationInfo": {
              "description": "ReservationID to which this record applies.",
              "type": "object",
              "properties": {
                "reservationId": {
                  "description": "ReservationID to which this record applies.",
                  "type": "number"
                },
                "room": {
                  "description": "Room Number to which this record applies.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "nameId": {
                  "description": "Guest Name ID",
                  "$ref": "#/definitions/uniqueID_Type"
                },
                "guestName": {
                  "description": "Guest Name",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 200
                },
                "altName": {
                  "description": "Guest Alternate Last and First Name",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 200
                }
              }
            },
            "postItNo": {
              "description": "Number for Post-It transactions.",
              "type": "number"
            },
            "associatedBills": {
              "description": "Bill Number.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "accountCode": {
              "description": "Account Code.",
              "type": "number"
            },
            "payment": {
              "description": "Payment Posting for the folio.",
              "$ref": "#/definitions/summaryPostingType"
            },
            "addresseeInfo": {
              "description": "Addressee Information for the Folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio.",
              "$ref": "#/definitions/profileInfoType"
            },
            "fiscalInvoicingCurrencyInfo": {
              "description": "Exchange Rate information selected to be used by the Fiscal Service.",
              "$ref": "#/definitions/exchangeRateInfoType"
            },
            "anonymizedFolio": {
              "description": "Indicates if this folio is linked to an anonymized Guest/Payee/Addressee.",
              "type": "boolean"
            },
            "start": {
              "description": "The starting value of the date range.",
              "type": "string",
              "format": "date"
            },
            "end": {
              "description": "The ending value of the date range.",
              "type": "string",
              "format": "date"
            },
            "revisionNo": {
              "description": "Folio Revision number.",
              "type": "number"
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "fiscalFolioNo": {
              "description": "Bill Number returned by the Fiscal Printer.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "folioNo": {
              "description": "Folio Number.",
              "type": "number"
            },
            "invoiceNo": {
              "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
              "type": "number"
            },
            "fiscalBillNo": {
              "description": "The Fiscal Bill number of this posting",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "folioTypeName": {
              "description": "The name of the Folio Type used for the Folio Number sequence.",
              "type": "string",
              "minLength": 0,
              "maxLength": 100
            },
            "internalFolioWindowID": {
              "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "folioDate": {
              "description": "Date of Folio Generation.",
              "type": "string",
              "format": "date"
            },
            "folioStatus": {
              "$ref": "#/definitions/folioStatusType"
            },
            "queueName": {
              "description": "Folio Queue name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "generateFiscalFolio": {
              "description": "Fiscal folio flag to call fiscal Information folio web service.",
              "type": "boolean"
            },
            "creditableAmount": {
              "description": "If the Property checks on the gross amount of the Original Folio,then this will be the remaining amount on the Original Folio that can be credited.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "creditBillGenerated": {
              "description": "A flag which indicates whether credit folio has been generated.",
              "type": "boolean"
            },
            "hasDepositTransfer": {
              "description": "A flag which indicates whether selected folio has deposit transfer or not.",
              "type": "boolean"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileInfoType": {
      "type": "object",
      "description": "Provides information about attached profiles to the block.",
      "properties": {
        "profileId": {
          "description": "Opera ID for the profile attached to the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "name": {
          "description": "Name for the profile attached to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "city": {
          "description": "City for the profile attached to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "phone": {
          "description": "Phone for the profile attached to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "Defines the type of Linked profiles for a block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "exchangeRateInfoType": {
      "type": "object",
      "description": "Exchange rate information of a currency.",
      "properties": {
        "exchangeRate": {
          "description": "Description of exchange rate.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Description of currency Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "creditLimitOveragePaymentsInfo": {
      "type": "object",
      "description": "Response for Fetch Credit Limit Overage Payments request",
      "properties": {
        "reservationOveragePayments": {
          "description": "List of reservations matching the search criteria.",
          "$ref": "#/definitions/reservationOveragePaymentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationOveragePaymentsType": {
      "type": "object",
      "description": "List of Reservation details for payment that has a folio window balance equal or higher to the credit limit set for the credit card payment method of that folio window.",
      "properties": {
        "reservationOveragePayment": {
          "description": "Reservation details to initiate the Credit Limit Overage process",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationOveragePaymentType"
          }
        },
        "hotelId": {
          "description": "Identifies the hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "reservationOveragePaymentType": {
      "type": "object",
      "description": "Details of the reservation with the folio balance equal or higher to the credit limit",
      "properties": {
        "reservationId": {
          "description": "Reservation id of the reservation",
          "$ref": "#/definitions/reservationId"
        },
        "guestName": {
          "description": "Guest name of the listed reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomId": {
          "description": "Room number on the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "windowNo": {
          "description": "Window number associated where the balance is equal or higher to the credit limit on the method of payment.",
          "type": "integer"
        },
        "cardType": {
          "description": "Identifies the credit card type.",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Identifies the user defined credit card type if credit card type from a defined list is not provided.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "creditCardNo": {
          "description": "Credit Card number / token (mask based on PCI compliance).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardExpirationDate": {
          "description": "Expiration date of the credit card (mask based on PCI compliance)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditCardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "creditCardLimit": {
          "description": "Credit Limit set for the credit card payment method.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount that will be charge to the payment method in the folio window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Defines the unique identifier for this payment method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "creditLimitOveragePayments": {
      "type": "object",
      "description": "Request to start the Credit Limit Overage process for the reservations with a folio window balance equal or higher to the credit limit set for the credit card payment method of that folio window.",
      "properties": {
        "criteria": {
          "description": "Criteria for submitting the payments request for a reservation to start the Credit Limit Overage process.",
          "$ref": "#/definitions/reservationOveragePaymentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditLimitOveragePaymentsDetails": {
      "type": "object",
      "description": "Response for Submit Credit Limit Overage Payments request",
      "properties": {
        "processId": {
          "description": "Batch process identifier.",
          "$ref": "#/definitions/stringLength40"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "vaultTransaction": {
      "type": "object",
      "description": "Request to register the vault HTTP transaction.",
      "properties": {
        "httpTransactionMessage": {
          "$ref": "#/definitions/vaultHTTPTransactionMessageType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "vaultHTTPTransactionMessageType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The hotel context of the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "escapedRequestContent": {
          "description": "The HTTP request entity content. The needs to use escape characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "escapedResponseContent": {
          "description": "The HTTP response entity content. The needs to use escape characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "hTTPTransactionDuration": {
          "description": "Request and response time of the vault communication.",
          "$ref": "#/definitions/dateRangeType"
        },
        "hTTPError": {
          "description": "Vault error.",
          "$ref": "#/definitions/errorType"
        },
        "authorizationApproval": {
          "description": "Authorization approval record.",
          "type": "object",
          "properties": {
            "profileId": {
              "description": "Profile Id corresponding to the guest name.",
              "$ref": "#/definitions/profileId"
            },
            "reservationIdList": {
              "$ref": "#/definitions/reservationIdList"
            },
            "approvalAmount": {
              "description": "Approved amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "authorizedPaymentRecord": {
              "description": "The payment record which the authorization approved.",
              "$ref": "#/definitions/reservationPaymentMethodType"
            },
            "approvalCode": {
              "description": "The approval code authenticates the authorization.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "originalAuthSequence": {
              "description": "Unique Authorization Sequence for the authorization and settlement.",
              "type": "integer"
            },
            "cardSwiped": {
              "type": "boolean"
            },
            "sourceOfAuthorization": {
              "description": "Source of the authorization.",
              "$ref": "#/definitions/cardAuthorizationTransactionType"
            }
          }
        },
        "type": {
          "$ref": "#/definitions/vaultHTTPTransactionType"
        }
      }
    },
    "errorType": {
      "type": "object",
      "description": "Standard way to indicate that an error occurred during the processing of an OpenTravel message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string"
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings. Refer to OpenTravel Code List Error Codes (ERR).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string"
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the OTA_ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string"
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string"
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\". Refer to OpenTravel Code List Error Warning Type (EWT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nodeList": {
          "description": "An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.",
          "type": "string"
        }
      }
    },
    "cardAuthorizationTransactionType": {
      "type": "string",
      "description": "Currently supported transaction type categories used for credit card authorization.",
      "enum": [
        "Additional",
        "ArPayment",
        "Batch",
        "BatchDeposit",
        "BatchDepositRefund",
        "Billing",
        "CheckIn",
        "CheckInManualAuth",
        "Deposit",
        "EndOfDay",
        "EndOfDayDeposit",
        "Manual",
        "Other",
        "PasserBy",
        "PostIt",
        "PreCheckIn",
        "Refund",
        "Scheduled"
      ]
    },
    "vaultHTTPTransactionType": {
      "type": "string",
      "enum": [
        "CCUniqueID",
        "CCNumber",
        "FolioAuthorization"
      ]
    },
    "ccSurchargeDetails": {
      "type": "object",
      "description": "Response to the request to fetch Credit Card Surcharge information for a Credit Card Payment.",
      "properties": {
        "info": {
          "description": "Surcharge information for the Credit Card Payment.",
          "$ref": "#/definitions/cCSurchargeAmountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cCSurchargeAmountType": {
      "type": "object",
      "description": "Information regarding the Surcharge amount which will be applied to a payment.",
      "properties": {
        "hotelId": {
          "description": "Property where the payment is being posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surchargeAmount": {
          "description": "The total Surcharge amount which is to be applied to this payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "surchargeInfo": {
          "description": "Details on the Surcharge configuration. The percentage and a threshold amount in case it is defined.",
          "$ref": "#/definitions/cCSurchargeInfoType"
        },
        "paymentMethod": {
          "description": "Payment method used for the payment.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        }
      }
    },
    "cCSurchargeInfoType": {
      "type": "object",
      "description": "Credit Card Surcharge Information type. Information regarding surcharge which can be applied to a Credit Card payment.",
      "properties": {
        "percentage": {
          "description": "The percentage on the payment amount which will be the Surcharge.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "threshold": {
          "description": "The threshold payment amount above which the Surcharge will be applied.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "The Payment Transaction Code for which the Surcharge Applies.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "reservationDepositFolios": {
      "type": "object",
      "description": "Deposit Posting Information for a reservation. Contains all deposit payments made for a reservation.",
      "properties": {
        "reservationDepositFoliosInfo": {
          "description": "Collection of Reservations and their Deposit Information. Includes a list of all deposit payments and folios(if applicable).",
          "$ref": "#/definitions/reservationDepositFoliosInfoType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response folio.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationDepositFoliosInfoType": {
      "type": "array",
      "description": "Detailed information of a reservation and its deposit payment posting information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationDepositFolioInfoType"
      }
    },
    "reservationDepositFolioInfoType": {
      "type": "object",
      "description": "Detailed information of a reservation and its deposit payment posting information.",
      "properties": {
        "totalAmountDue": {
          "description": "Total Deposit Amount which is due for this reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "deposits": {
          "description": "Window count will be hotel based configurable.",
          "$ref": "#/definitions/depositPostingsType"
        },
        "totalAmountTransferrable": {
          "description": "Total Deposit Amount that can be transferred to another Reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "projectedRevenue": {
          "description": "Projected revenue for the reservation.",
          "$ref": "#/definitions/projectedRevenueType"
        },
        "policySummaryInfo": {
          "description": "Summary information for the Deposit and Cancellation Policies on the reservation.",
          "$ref": "#/definitions/reservationPolicySummaryType"
        },
        "depositType": {
          "description": "The Reservation's Deposit Status Type. This can indicate if the Reservation is only allowed to create Folios for Deposits or Receipts for Deposits or by Default Any. Used when Deposit Folio Functionality is ON.",
          "$ref": "#/definitions/depositType"
        },
        "depositMaturityType": {
          "description": "The Reservation's Deposit Status Type. When preference is set to Check In, the deposit is transferred when the guest checks in. When the preference is set to Last Night Stay, then the deposit is transferred during the last nights night audit. For example, if the departure date for a reservation is July 14th, then the deposit would be posted during the night audit for July 13th.",
          "$ref": "#/definitions/depositMaturityType"
        },
        "advanceFolioGenerated": {
          "type": "boolean",
          "description": "Flag to indicate if an Advance Folio is already generated."
        }
      }
    },
    "depositPostingsType": {
      "type": "array",
      "description": "A List of Deposit Payments.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/depositPostingType"
      }
    },
    "depositPostingType": {
      "type": "object",
      "description": "Posting details.",
      "properties": {
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "updateBy": {
              "type": "string"
            }
          }
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "depositPolicy": {
          "description": "Deposit Policy information if this payment was applied to a deposit policy.",
          "$ref": "#/definitions/resDepositPolicyType"
        },
        "comments": {
          "description": "User defined comments for the deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "paymentMethod": {
          "description": "Defined method of payment for this transaction.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "receiptSummaryInfo": {
          "description": "Information regarding receipt of the posted deposit",
          "$ref": "#/definitions/receiptSummaryType"
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "transferred": {
          "description": "Indicates if the deposit was transferred either to a reservation or from a reservation.",
          "type": "boolean"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "resDepositPolicyType": {
      "type": "object",
      "description": "A deposit policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "depositCancelRevenueType": {
      "type": "string",
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "depositPolicyType": {
      "type": "object",
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        }
      }
    },
    "policyAmountPercentType": {
      "type": "object",
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "properties": {
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "policyBasisTypeType": {
      "type": "string",
      "description": "Full Amount.",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "policyDeadlineType": {
      "type": "object",
      "description": "Cancellation deadline, absolute or relative.",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "receiptSummaryType": {
      "type": "object",
      "description": "Contains Receipt Details.",
      "properties": {
        "payeeInfo": {
          "description": "Payee information for the Receipt.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "receiptAmount": {
          "description": "Receipt gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "customNumbers": {
          "description": "Custom Number.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 200
          }
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "Receipt Number.",
          "type": "number"
        },
        "receiptTypeDescription": {
          "description": "Receipt Type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "transactionNo": {
          "description": "Transaction Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "receiptType": {
          "description": "Receipt Type.",
          "$ref": "#/definitions/receiptType"
        },
        "taxInvoice": {
          "description": "Tax Invoice Number of the Receipt.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "receiptType": {
      "type": "string",
      "description": "This contains the receipt type.",
      "enum": [
        "Payment",
        "Deposit",
        "Paidout",
        "Transaction",
        "CheckExchange",
        "CurrencyExchangeCheck",
        "CurrencyExchangeCash",
        "DepositRequest",
        "DepositRefundReceipt",
        "Acknowledgement",
        "ARPayment"
      ]
    },
    "projectedRevenueType": {
      "type": "object",
      "description": "Information about projected catering and room revenue for the reservation.",
      "properties": {
        "projectedRoomRevenue": {
          "description": "Projected room revenue for the reservation",
          "$ref": "#/definitions/currencyAmountType"
        },
        "projectedCateringRevenue": {
          "description": "Projected catering revenue for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomNights": {
          "description": "Number of room nights for the reservation.",
          "type": "integer"
        }
      }
    },
    "reservationPolicySummaryType": {
      "type": "object",
      "description": "A collection of reservation deposit and cancellation policies.",
      "properties": {
        "cancellationPolicies": {
          "description": "A collection of reservation cancellation policies..",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "A collection of reservation deposit policies.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "reservationIdList": {
          "description": "A list of Ids for reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "name": {
          "description": "Name identifier for the reservation.",
          "type": "string"
        }
      }
    },
    "resCancellationPoliciesType": {
      "type": "array",
      "description": "A list of reservation cancellation policies.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resCancellationPolicyType"
      }
    },
    "resCancellationPolicyType": {
      "type": "object",
      "description": "A cancellation policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "resCancelPenaltyType": {
      "type": "object",
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "properties": {
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "effective": {
          "description": "Indicator if Cancellation Penalty is currently applicable or not.",
          "type": "boolean"
        }
      }
    },
    "offsetUnitType": {
      "type": "string",
      "description": "Indicates deadline offset unit type.",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "resDepositPoliciesType": {
      "type": "array",
      "description": "A list of deposit policies attached with the reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resDepositPolicyType"
      }
    },
    "depositType": {
      "type": "string",
      "description": "Enumeration Type of Deposit.",
      "enum": [
        "Folios",
        "Receipts",
        "None"
      ]
    },
    "depositMaturityType": {
      "type": "string",
      "description": "The deposit is transferred when the guest checks in.",
      "enum": [
        "CheckIn",
        "LastNightStay",
        "LastDayAdvanceDeposit",
        "None"
      ]
    },
    "depositFolioTransactionDetails": {
      "type": "object",
      "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
      "properties": {
        "transactions": {
          "description": "The details regarding the transaction(Posting).",
          "$ref": "#/definitions/depositDetailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositDetailPostingsType": {
      "type": "array",
      "description": "List of Deposit Postings with details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/depositDetailPostingType"
      }
    },
    "depositDetailPostingType": {
      "type": "object",
      "description": "Posting information of the transaction .",
      "properties": {
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "updateBy": {
              "type": "string"
            }
          }
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "depositPolicy": {
          "description": "Deposit Policy information if this payment was applied to a deposit policy.",
          "$ref": "#/definitions/resDepositPolicyType"
        },
        "comments": {
          "description": "User defined comments for the deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "paymentMethod": {
          "description": "Defined method of payment for this transaction.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "receiptSummaryInfo": {
          "description": "Information regarding receipt of the posted deposit",
          "$ref": "#/definitions/receiptSummaryType"
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "transferred": {
          "description": "Indicates if the deposit was transferred either to a reservation or from a reservation.",
          "type": "boolean"
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "subPostings": {
          "description": "SubPostings for the posting.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "currencyExchangeInfo": {
          "description": "Currency exchange information if the posting was made using a currency different from the default currency.",
          "$ref": "#/definitions/transactionCurrencyExchangeInfoType"
        },
        "miscellaneousInfo": {
          "type": "object",
          "properties": {
            "createDateTime": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "paidOut": {
              "type": "boolean"
            }
          }
        },
        "internalFolioWindowID": {
          "description": "Internal Unique id for the Folio Window.",
          "type": "string"
        }
      }
    },
    "depositFolioValidateCriteria": {
      "type": "object",
      "description": "Request to validate a Deposit Folio for a reservation.",
      "properties": {
        "criteria": {
          "description": "Criteria for validating if a Deposit Folio can be created for a reservation. Deposit Folio functionality should be active.",
          "$ref": "#/definitions/depositFolioValidateCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositFolioValidateCriteriaType": {
      "type": "object",
      "description": "Criteria for posting a Deposit Folio.",
      "properties": {
        "hotelId": {
          "description": "Property where the reservation exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation for which the Deposit Folio is required.",
          "$ref": "#/definitions/reservationId"
        },
        "profileId": {
          "description": "Profile Id of the Payee for this Deposit Folio.",
          "$ref": "#/definitions/profileId"
        },
        "depositPolicyId": {
          "description": "The deposit policy ID for which the Deposit Folio is being created.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "depositedFolioValidate": {
      "type": "object",
      "description": "Information regarding the Deposit Policy if a Deposit Folio is going to be created for this policy.",
      "properties": {
        "policyInfoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resDepositPolicyType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositPayment": {
      "type": "object",
      "description": "Request to post a deposit payment to a reservation.",
      "properties": {
        "criteria": {
          "description": "Criteria for the deposit payment information to be posted.",
          "$ref": "#/definitions/depositPaymentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositPaymentCriteriaType": {
      "type": "object",
      "description": "Criteria for posting a deposit payment to a reservation.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Payment method used by the payee.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "postingAmount": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "comments": {
          "description": "User Defined Comments. Used for Deposit Payment postings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "applyCCSurcharge": {
          "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
          "type": "boolean"
        },
        "manualPaymentTaxInfo": {
          "description": "The Payment Tax information for Thailand Tax functionality. The invoice number and the date will be used.",
          "$ref": "#/definitions/paymentTaxType"
        },
        "creditablePaymentTaxes": {
          "description": "Used for Thailand Tax Functionality.The payment tax records that can be used for a Credit Note for this reservation.",
          "$ref": "#/definitions/paymentTaxesType"
        },
        "terminalId": {
          "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
          "type": "string"
        },
        "overrideInsufficientCC": {
          "description": "Flag to allow a rebate by Credit Card",
          "type": "boolean"
        },
        "changeDueAmount": {
          "description": "Amount of change given to guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compRedemptions": {
          "description": "Comp redemption information used to post as payment.",
          "$ref": "#/definitions/compRedemptionsType"
        },
        "overrideARCreditLimit": {
          "description": "Flag to override account receivable credit limit",
          "type": "boolean"
        },
        "applyCurrencyTaxes": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        },
        "vATOffset": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        },
        "action": {
          "description": "Payment action to know from where the payment has been made.",
          "$ref": "#/definitions/postPaymentActionType"
        },
        "prepaidCardRedemptions": {
          "description": "Prepaid Card redemption information used to post as payment.",
          "$ref": "#/definitions/prepaidCardRedemptionsType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "guaranteeCode": {
          "description": "New guarantee code associated with reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPolicyId": {
          "description": "The deposit policy ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileId": {
          "description": "The Payee ID for the deposit. Used for some country requirements.",
          "$ref": "#/definitions/profileId"
        },
        "associatedTrxNo": {
          "description": "Transaction number of the payment being deposited.",
          "type": "number"
        },
        "overrideInventoryCheck": {
          "description": "Flag to indicate if the Inventory check has to be overridden when the guarantee code of the reservation is changed.",
          "type": "boolean"
        },
        "updateReservationPaymentMethod": {
          "description": "Flag to indicate if the payment method on the reservation, for Window 1, is to be updated with the payment method used for this deposit.",
          "type": "boolean"
        },
        "receiptType": {
          "description": "Receipt Type.",
          "$ref": "#/definitions/receiptType"
        },
        "generateFiscalPayload": {
          "description": "Flag to indicate if a fiscal payload should be generated for the Payment.",
          "type": "boolean"
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        }
      }
    },
    "depositedPayment": {
      "type": "object",
      "description": "Response for the post deposit payment request.",
      "properties": {
        "deposits": {
          "description": "Deposit payment information of the payment which was posted.",
          "$ref": "#/definitions/depositPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "financialPostings": {
      "type": "object",
      "description": "Response for fetching the Posting Journal.",
      "properties": {
        "journalPostings": {
          "description": "Journal entries of the response.",
          "$ref": "#/definitions/financialPostingsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalFolioCriteria": {
      "type": "object",
      "description": "Request to generate an Initial/Zero invoice from Fiscal Terminals screen.",
      "properties": {
        "criteria": {
          "description": "Criteria for the creation of fiscal invoice.",
          "$ref": "#/definitions/fiscalFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalFolioCriteriaType": {
      "type": "object",
      "description": "Criteria for calling fiscal folio service for the generation of invoices",
      "properties": {
        "hotelId": {
          "description": "Property where the folio is being generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioCommand": {
          "description": "Type of fiscal folio operation.",
          "$ref": "#/definitions/folioCommandType"
        },
        "effectiveDate": {
          "description": "Effective date to run fiscal command.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folios": {
          "description": "Folio details.",
          "$ref": "#/definitions/fiscalInvoiceSummaryType"
        }
      }
    },
    "folioCommandType": {
      "type": "string",
      "enum": [
        "Invoice",
        "Info",
        "ResendInvoice",
        "Cancellation",
        "EodReset",
        "XReport",
        "SendFiscalInvoice",
        "ZeroInvoice",
        "EndOfPeriod",
        "ZeroInvoiceWithReceipt",
        "FiscalUpdate",
        "CheckOut"
      ]
    },
    "fiscalInvoiceSummaryType": {
      "type": "object",
      "description": "Contains information required for the generation of fiscal invoice.",
      "properties": {
        "fiscalTerminalId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "transactionType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        },
        "queueName": {
          "description": "Folio Queue name",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "generateFiscalFolio": {
          "description": "Fiscal folio flag to call fiscal Information folio web service.",
          "type": "boolean"
        }
      }
    },
    "fiscalCommandsResponseInfo": {
      "type": "object",
      "description": "Response after generating a commands from Fiscal Terminals screen.",
      "properties": {
        "fiscalResponseInfo": {
          "description": "Command information returned from the Fiscal service.",
          "$ref": "#/definitions/fiscalResponseInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalResponseInfoType": {
      "type": "object",
      "description": "Invoice information returned from the fiscal service.",
      "properties": {
        "invoiceNo": {
          "description": "Fiscal terminal invoice number returned from fiscal service.",
          "type": "number"
        },
        "fiscalResponseId": {
          "description": "Uniquely identifies data sent from FLIP.",
          "type": "number"
        }
      }
    },
    "folioActivityDetailsType": {
      "type": "object",
      "description": "Fiscal Folio Activity information",
      "properties": {
        "folioActivityDetailInfo": {
          "type": "array",
          "description": "Details of Fiscal Folio Activity made.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioActivityDetailType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioActivityDetailType": {
      "type": "object",
      "description": "Details of Fiscal Folio Activity made.",
      "properties": {
        "fiscalBillNo": {
          "description": "Fiscal Bill Number returned from Fiscal Program.",
          "type": "string"
        },
        "billNo": {
          "description": "Bill Number.",
          "type": "string"
        },
        "folioType": {
          "description": "Folio Type.",
          "type": "string"
        },
        "queueName": {
          "description": "Queue Name.",
          "type": "string"
        },
        "billGenerationDate": {
          "description": "Bill Generation Date.",
          "type": "string"
        },
        "status": {
          "description": "Return Status from Fiscal Program Application (Fiscal Printer).",
          "type": "string"
        },
        "partnerFiscalFolioStatus": {
          "description": "Fiscal folio status for the partner system.",
          "type": "string"
        },
        "responseAttemptNo": {
          "description": "Number of fiscal response attempts made for the folio",
          "type": "integer"
        },
        "messageText": {
          "description": "Return Message from Fiscal Printing Program.",
          "type": "string"
        }
      }
    },
    "folioActivityResponseDetailType": {
      "type": "object",
      "description": "Fiscal Folio Activity Details Information",
      "properties": {
        "folioActivityResponseDetailsInfo": {
          "type": "array",
          "description": "Details of response for the Fiscal Folio Activity made.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioActivityResponseDetailsType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioActivityResponseDetailsType": {
      "type": "object",
      "description": "Details of response for the Fiscal Folio Activity made.",
      "properties": {
        "businessDate": {
          "description": "Business Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "responseType": {
          "description": "Type of the response, possible values: ERROR, WARNING, RESPONSE.",
          "type": "string"
        },
        "responseName": {
          "description": "Name of the response element.",
          "type": "string"
        },
        "responseValue": {
          "description": "Value of the response element.",
          "type": "string"
        },
        "responseAttemptNo": {
          "description": "Number of fiscal response attempt made for the folio",
          "type": "integer"
        }
      }
    },
    "fiscalInfoFolioCriteria": {
      "type": "object",
      "description": "Request to generate fiscal Information folio.",
      "properties": {
        "criteria": {
          "description": "Criteria for generating fiscal folio information.",
          "$ref": "#/definitions/fiscalInfoFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalInfoFolioCriteriaType": {
      "type": "object",
      "description": "Criteria for calling fiscal Info type folio service",
      "properties": {
        "hotelId": {
          "description": "Property where the Folio History exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioCommand": {
          "description": "Type of fiscal folio operation.",
          "$ref": "#/definitions/folioCommandType"
        },
        "folios": {
          "description": "Folio History details.",
          "$ref": "#/definitions/folioSummaryType"
        }
      }
    },
    "folioSummaryType": {
      "type": "object",
      "description": "Contains Folio Details including payee information and the reservation which it's attached to.",
      "properties": {
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "payeeInfo": {
          "description": "Payee information for the folio.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "folioAmount": {
          "description": "Folio gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "allowConvertFolioYn": {
          "description": "Flag to check Folio Conversion Allowed.",
          "type": "boolean"
        },
        "isARAttached": {
          "description": "Flag to check if the folio has an AR number attached.",
          "type": "boolean"
        },
        "isFiscalFolio": {
          "description": "Flag to check if the folio type is fiscal or not.",
          "type": "boolean"
        },
        "creditBillGenerated": {
          "description": "Flag which indicates whether credit folio has been generated.",
          "type": "boolean"
        },
        "accountReceivablesFolio": {
          "description": "Flag to check Folio generated from Acoount Receivables.",
          "type": "boolean"
        },
        "creditFolio": {
          "description": "Indicates if the folio is a Credit Folio.",
          "type": "boolean"
        },
        "debitFolio": {
          "description": "Indicates if the folio is a Debit Folio.",
          "type": "boolean"
        },
        "passerbyFolio": {
          "description": "Indicates if the folio is a Passer By Folio.",
          "type": "boolean"
        },
        "officialBIRReceiptExists": {
          "description": "Flag to indicate if an Official Receipt is generated for the folio window. Applicable only in the Philippines.",
          "type": "boolean"
        },
        "paymentTrxNo": {
          "description": "Bill Payment transaction Number.",
          "type": "number"
        },
        "reservationInfo": {
          "description": "ReservationID to which this record applies.",
          "type": "object",
          "properties": {
            "reservationId": {
              "description": "ReservationID to which this record applies.",
              "type": "number"
            },
            "room": {
              "description": "Room Number to which this record applies.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "nameId": {
              "description": "Guest Name ID",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "guestName": {
              "description": "Guest Name",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "altName": {
              "description": "Guest Alternate Last and First Name",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            }
          }
        },
        "postItNo": {
          "description": "Number for Post-It transactions.",
          "type": "number"
        },
        "associatedBills": {
          "description": "Bill Number.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        },
        "accountCode": {
          "description": "Account Code.",
          "type": "number"
        },
        "payment": {
          "description": "Payment Posting for the folio.",
          "$ref": "#/definitions/summaryPostingType"
        },
        "addresseeInfo": {
          "description": "Addressee Information for the Folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio.",
          "$ref": "#/definitions/profileInfoType"
        },
        "fiscalInvoicingCurrencyInfo": {
          "description": "Exchange Rate information selected to be used by the Fiscal Service.",
          "$ref": "#/definitions/exchangeRateInfoType"
        },
        "anonymizedFolio": {
          "description": "Indicates if this folio is linked to an anonymized Guest/Payee/Addressee.",
          "type": "boolean"
        },
        "customNumbers": {
          "description": "Custom Number.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 200
          }
        },
        "operaFiscalFolioStatus": {
          "description": "Opera Fiscal Folio Status for the Folio.",
          "type": "string"
        },
        "partnerFiscalFolioStatus": {
          "description": "Stores the fiscal folio status for the partner system.",
          "type": "string"
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revisionNo": {
          "description": "Folio Revision number.",
          "type": "number"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "fiscalFolioNo": {
          "description": "Bill Number returned by the Fiscal Printer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        },
        "queueName": {
          "description": "Folio Queue name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "generateFiscalFolio": {
          "description": "Fiscal folio flag to call fiscal Information folio web service.",
          "type": "boolean"
        }
      }
    },
    "fiscalInformationFolio": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "fiscalResponseList": {
          "type": "array",
          "description": "Provides information which is used for fiscal response processing.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/fiscalResponseType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalCallStatus": {
      "type": "object",
      "description": "Check if it will call fiscal or not.",
      "properties": {
        "isValid": {
          "description": "Flag which contains if its valid or not.",
          "type": "boolean"
        },
        "folioTypeName": {
          "description": "Folio Type Name.",
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "convertFolioCriteria": {
      "type": "object",
      "description": "Request to convert folio from a Non Fiscal Folio type to a Fiscal Folio Type. Functionality is used in Italy and is only available when the country mode is set to Italy.",
      "properties": {
        "criteria": {
          "description": "Criteria to Convert a Folio from a Non Fiscal Type to a Fiscal Type.",
          "$ref": "#/definitions/convertFolioType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "convertFolioType": {
      "type": "object",
      "description": "Criteria for Converting Folio.",
      "properties": {
        "hotelId": {
          "description": "Hotel code where this folio was generated at.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioNo": {
          "description": "Folio number of the Folio which is going to be converted.",
          "type": "number"
        },
        "folioTypeName": {
          "description": "Folio Type of the folio(Example: Ricevuta, Fattura).",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "folioDate": {
          "description": "Date of folio generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "convertFolioDetails": {
      "type": "object",
      "description": "Response to the request to Convert Folio. Includes the new converted folio information.",
      "properties": {
        "folio": {
          "description": "Converted Folio Information.",
          "$ref": "#/definitions/folioType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioHistoryResponse": {
      "type": "object",
      "description": "Response for the fetch Folio History.",
      "properties": {
        "folioHistory": {
          "description": "List of Folio History.",
          "$ref": "#/definitions/foliosType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "foliosType": {
      "type": "array",
      "description": "Folio History details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioSummaryType"
      }
    },
    "folioPrinters": {
      "type": "object",
      "description": "Response to the request to fetch the Folio Printers applicable for a Folio, based on the",
      "properties": {
        "printers": {
          "description": "List of Printers which are applicable for this Folio.",
          "$ref": "#/definitions/folioPrintersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioPrintersType": {
      "type": "object",
      "description": "List of Folio Printers.",
      "properties": {
        "folioTypeName": {
          "description": "Name of the Folio Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "printer": {
          "description": "Folio Printer Information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioPrinterType"
          }
        }
      }
    },
    "folioPrinterType": {
      "type": "object",
      "description": "Information about a Printer which can be used to print a Folio.",
      "properties": {
        "printerName": {
          "description": "Description of the Printer",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "device": {
          "description": "The Printer Device name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioType": {
          "description": "The Folio Type for which this printer is being used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioQueueName": {
          "description": "Folio Queue name for which this printer is being used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "folioTypeNameInfo": {
      "type": "object",
      "description": "Response for the fetch Folio Type Information.",
      "properties": {
        "details": {
          "description": "Information regarding the Folio Type.",
          "$ref": "#/definitions/folioTypeNameInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeNameInfoType": {
      "type": "object",
      "description": "Details of a Folio Type configuration.",
      "properties": {
        "hotelId": {
          "description": "Property where the Folio Type exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioTypeName": {
          "description": "The Folio Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "folioReportName": {
          "description": "The report name which should be used as the Folio for printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "folioReportModuleId": {
          "description": "The internal report ID of the Folio report which is to be used.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "folioLanguageCode": {
          "description": "The Language Code for which the folio is effective.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "folioTypesInfo": {
      "type": "object",
      "description": "Information regarding the Folio Types.",
      "properties": {
        "folioInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioTypesInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypesInfoType": {
      "type": "object",
      "description": "Folio Types details.",
      "properties": {
        "folioType": {
          "description": "Folio Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fiscal": {
          "description": "Fiscal Folio indicator.",
          "type": "boolean"
        },
        "compress": {
          "description": "Indicates folio to be use for compress bills.",
          "type": "boolean"
        },
        "credit": {
          "description": "Indicates folio type can be used for Credit bills.",
          "type": "boolean"
        },
        "sendFiscalFolio": {
          "description": "Adding this flag at folio type level would decide to send fiscal folio (generate payload) or not.",
          "type": "boolean"
        }
      }
    },
    "processFiscalRetry": {
      "type": "object",
      "description": "The request object to process fiscal retry functionality.",
      "properties": {
        "criteria": {
          "description": "Criteria to call the fiscal service again.",
          "$ref": "#/definitions/fiscalRetryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalRetryType": {
      "type": "object",
      "description": "Generate Fiscal Folio Retry Criteria type to be used for fiscal folio generation",
      "properties": {
        "hotelId": {
          "description": "Hotel where the transaction belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "voidFolioModes": {
          "description": "Different modes to perform void folio.",
          "$ref": "#/definitions/voidFolioModes"
        },
        "fiscalFolioInstruction": {
          "description": "Defines the action of the retrival process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        }
      }
    },
    "voidFolioModes": {
      "type": "string",
      "description": "Different modes to perform void folio.",
      "enum": [
        "Invoice",
        "InfoFolio",
        "CreditFolio",
        "DepositFolio",
        "PostIt",
        "PasserBy",
        "VoidFolio",
        "SupplementalFolio",
        "SendFiscalFolio",
        "ResendFolio"
      ]
    },
    "processFiscalRetryStatus": {
      "type": "object",
      "description": "The response object to send back the fiscal service response to opera.",
      "properties": {
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "isLastRetry": {
          "description": "Indicating if it is last trial for fiscal printing.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "passerBySalesCriteria": {
      "type": "object",
      "description": "Request to post a set of charges, payments and generate a bill for a PasserBy or for the Post-It functionality . A PasserBy is someone who is not staying at the Property. A PasserBy transaction requires a Profile in Opera for whom the the folio is being created.",
      "properties": {
        "criteria": {
          "description": "Criteria for posting the Sale.",
          "$ref": "#/definitions/passerByCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "passerByCriteriaType": {
      "type": "object",
      "description": "Criteria type for posting charges.",
      "properties": {
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "profileId": {
          "description": "The Profile ID of the PasserBy. If the sale is not a Post-It Sale, then a Profile ID is required.",
          "$ref": "#/definitions/profileId"
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        }
      }
    },
    "passerBySale": {
      "type": "object",
      "description": "Details of the folio created.",
      "properties": {
        "folioWindowDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "payeeTaxNumber": {
      "type": "object",
      "description": "Request to validate and change Payee Tax Number.",
      "properties": {
        "criteria": {
          "description": "Criteria to validate and change Payee Tax Number.",
          "$ref": "#/definitions/changePayeeTaxNumberCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changePayeeTaxNumberCriteriaType": {
      "type": "object",
      "description": "Criteria to validate and change payee tax number.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "taxNumber": {
          "description": "Payee Tax Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ignoreWarnings": {
          "description": "Flag to ignore warnings while updating a payee folio tax number.",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "attachPolicyApplyCriteria": {
      "type": "object",
      "description": "Request to attach an existing Deposit Policy on a reservation towards an existing deposit payment on the same reservation.",
      "properties": {
        "criteria": {
          "description": "Criteria for applying a policy to an existing deposit payment.",
          "$ref": "#/definitions/policyApplyCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "policyApplyCriteriaType": {
      "type": "object",
      "description": "Criteria for Attaching or Detaching a Deposit Policy towards a Deposit payment.",
      "properties": {
        "hotelId": {
          "description": "Property where the deposit exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "policyId": {
          "description": "Deposit Policy Id of the policy which would be attached to the payment.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionNo": {
          "description": "The transaction number of the payment to which the Deposit policy is being attached or detached.",
          "type": "number"
        }
      }
    },
    "postingSummaryList": {
      "type": "object",
      "description": "Response object to fetch daily summary charges from Opera which are posted in Opera by external system.",
      "properties": {
        "postingSummaries": {
          "description": "List of Summary of total postings in Opera.",
          "$ref": "#/definitions/postingSummaryListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postingSummaryListType": {
      "type": "array",
      "description": "Summary of the postings by external system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/postingSummaryType"
      }
    },
    "postingSummaryType": {
      "type": "object",
      "description": "summary of the postings by external system.",
      "properties": {
        "totalPostings": {
          "description": "Total count of postings.",
          "type": "integer"
        },
        "totalAmount": {
          "description": "Total Amount Posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCheckCount": {
          "description": "Total count of checks posted.",
          "type": "integer"
        }
      }
    },
    "prepaidCardCriteria": {
      "type": "object",
      "description": "Request type for prepaid card creation/reload/redeem/removal process",
      "properties": {
        "criteria": {
          "description": "Criteria for creation/reload/redeem/removal of prepaid cards.",
          "$ref": "#/definitions/prepaidCardCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCardCriteriaType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        },
        "postChargeToRoom": {
          "type": "boolean"
        },
        "saleCriteria": {
          "$ref": "#/definitions/saleCriteriaType"
        },
        "vendorInterfaceID": {
          "type": "number"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "prepaidCardDetailsType": {
      "type": "object",
      "description": "Prepaid Card Details.",
      "properties": {
        "initialLoadDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "activateDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCreditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservedTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balanceTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "validUntilDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiredDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactions": {
          "description": "Holds fixed charge detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/prepaidCardTransactionType"
          }
        }
      }
    },
    "prepaidCardTransactionType": {
      "type": "object",
      "description": "Prepaid Card transaction.",
      "properties": {
        "transactionType": {
          "description": "Transaction type enumeration.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        },
        "transactionDate": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "number"
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "prepaidCardTrxTypeType": {
      "type": "string",
      "description": "Reload transaction.",
      "enum": [
        "Activate",
        "Cancel",
        "Cashout",
        "Inquiry",
        "Issue",
        "Redeem",
        "Reload"
      ]
    },
    "activatePrepaidCard": {
      "type": "object",
      "description": "Request type for activate prepaid card.",
      "properties": {
        "criteria": {
          "description": "Prepaid card criteria type used to perform manage operation on the card.",
          "type": "object",
          "properties": {
            "hotelId": {
              "description": "Hotel code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "cardNo": {
              "description": "Prepaid card number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "interfaceId": {
              "description": "The unique ID for the Interface.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "profileId": {
              "description": "The guest name id associated to the card.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "reservationId": {
              "description": "The reservation name id where the transaction is associated.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "pin": {
              "description": "PIN code associated for the prepaid card.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "amount": {
              "description": "Prepaid card transaction amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "postChargeToRoom": {
              "description": "Indicate that charges will be posted to the room.",
              "type": "boolean"
            },
            "saleCriteria": {
              "description": "Represent the sale criteria.",
              "$ref": "#/definitions/saleCriteriaType"
            },
            "giftCard": {
              "description": "Indicates a gift card type.",
              "type": "boolean"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "activatePrepaidCardStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cancelPrepaidCardTransaction": {
      "type": "object",
      "description": "Request type for cancel prepaid card transaction.",
      "properties": {
        "criteria": {
          "description": "Prepaid card criteria type used to perform manage operation on the card.",
          "type": "object",
          "properties": {
            "hotelId": {
              "description": "Hotel code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "cardNo": {
              "description": "Prepaid card number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "interfaceId": {
              "description": "The unique ID for the Interface.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "profileId": {
              "description": "The guest name id associated to the card.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "reservationId": {
              "description": "The reservation name id where the transaction is associated.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "pin": {
              "description": "PIN code associated for the prepaid card.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "amount": {
              "description": "Prepaid card transaction amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "vendorTransactionNo": {
              "description": "The vendor transaction number associated with prepaid card transaction.",
              "$ref": "#/definitions/stringLength100"
            },
            "transactionNo": {
              "description": "The opera transaction number associated with prepaid card transaction.",
              "type": "integer"
            },
            "transactionTye": {
              "description": "The transaction type of a given transaction.",
              "$ref": "#/definitions/prepaidCardTrxTypeType"
            },
            "postChargeToRoom": {
              "description": "Indicate that charges will be posted to the room.",
              "type": "boolean"
            },
            "saleCriteria": {
              "description": "Represent the sale criteria.",
              "$ref": "#/definitions/saleCriteriaType"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stringLength100": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 100.",
      "maxLength": 100,
      "minLength": 0
    },
    "cancelPrepaidCardTransactionStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashOutPrepaidCard": {
      "type": "object",
      "description": "Request type for cashout prepaid card.",
      "properties": {
        "criteria": {
          "description": "Prepaid card criteria type used to perform manage operation on the card.",
          "type": "object",
          "properties": {
            "hotelId": {
              "description": "Hotel code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "cardNo": {
              "description": "Prepaid card number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "interfaceId": {
              "description": "The unique ID for the Interface.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "profileId": {
              "description": "The guest name id associated to the card.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "reservationId": {
              "description": "The reservation name id where the transaction is associated.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "pin": {
              "description": "PIN code associated for the prepaid card.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "amount": {
              "description": "Prepaid card transaction amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "postChargeToRoom": {
              "description": "Indicate that charges will be posted to the room.",
              "type": "boolean"
            },
            "saleCriteria": {
              "description": "Represent the sale criteria.",
              "$ref": "#/definitions/saleCriteriaType"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashOutPrepaidCardStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reloadPrepaidCard": {
      "type": "object",
      "description": "Request type for reload prepaid card.",
      "properties": {
        "criteria": {
          "description": "Prepaid card criteria type used to perform manage operation on the card.",
          "type": "object",
          "properties": {
            "hotelId": {
              "description": "Hotel code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "cardNo": {
              "description": "Prepaid card number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "interfaceId": {
              "description": "The unique ID for the Interface.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "profileId": {
              "description": "The guest name id associated to the card.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "reservationId": {
              "description": "The reservation name id where the transaction is associated.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "pin": {
              "description": "PIN code associated for the prepaid card.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "amount": {
              "description": "Prepaid card transaction amount.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "postChargeToRoom": {
              "description": "Indicate that charges will be posted to the room.",
              "type": "boolean"
            },
            "saleCriteria": {
              "description": "Represent the sale criteria.",
              "$ref": "#/definitions/saleCriteriaType"
            },
            "giftCard": {
              "description": "Indicates a gift card type.",
              "type": "boolean"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reloadPrepaidCardStatus": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccAuthorizationCriteria": {
      "type": "object",
      "description": "Request for a credit card authorization. An authorization request will be sent to the Credit Card Vendor as part of this request.",
      "properties": {
        "criteria": {
          "description": "Criteria for the credit card authorization.",
          "$ref": "#/definitions/cCAuthorizationCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cCAuthorizationCriteriaType": {
      "type": "object",
      "description": "Contains the credit card criteria for authorization.",
      "properties": {
        "hotelId": {
          "description": "Identifies the hotel code to authorize a credit card amount for.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Identifies the reservation to authorize a credit card amount for.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "amount": {
          "description": "The amount to authorize.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioView": {
          "description": "The folio window where this authorization is applied.",
          "type": "integer"
        },
        "payment": {
          "description": "Details of the payment card to which the authorization is to be applied. If this card does not exist on the reservation, it will not be added to the reservation.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "terminalId": {
          "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected.",
          "type": "string"
        },
        "incidentalAmount": {
          "description": "The incidental part of the amount to authorize.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "evaluateApprovalAmount": {
          "description": "Flag to indicate if the approval amount should be calculated before authorization. If this is true and if the amount is 0 the approval amount will be calculated based on the rules.",
          "type": "boolean"
        },
        "sourceOfAuthorization": {
          "description": "Source of the authorization.",
          "$ref": "#/definitions/cardAuthorizationTransactionType"
        },
        "updateReservation": {
          "description": "Update the card details on the reservations for Chip and Pin Authorizations.",
          "type": "boolean"
        },
        "ccRequestId": {
          "description": "Session Id registered in the WebSocket component for asynchronous Credit Card handling.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "authorizationInfo": {
      "type": "object",
      "description": "Response to the credit card authorization request.",
      "properties": {
        "authInfo": {
          "description": "Information regarding the authorization done.",
          "$ref": "#/definitions/authorizationInfoType"
        },
        "payment": {
          "description": "Details of the payment card to which the authorization was applied. The payment details would be returned in the case of Chip and Pin cards. For non chip and pin cards, only the authorization will be returned.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "ccAuthorizationInstructions": {
      "type": "object",
      "description": "Response to the fetch authorization instructions. Based on the criteria requested, the response can contain information required to send a credit card authorization to the Vendor.",
      "properties": {
        "details": {
          "$ref": "#/definitions/cCAuthorizationInstructionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cCAuthorizationInstructionType": {
      "type": "object",
      "description": "Contains the details to use for a credit card authorization.",
      "properties": {
        "currentApprovalAmount": {
          "description": "The current amount to authorize as part of this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalApprovalAmount": {
          "description": "The total amount authorized(including the current amount).",
          "$ref": "#/definitions/currencyAmountType"
        },
        "incidentalAmount": {
          "description": "The incidental amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationSetup": {
          "description": "Indicates the Credit Card EFT payment method authorization rules setup.",
          "type": "object",
          "properties": {
            "checkIn": {
              "description": "Indicates if authorization at Check In is allowed for this payment method. False will indicate that no authorization will be done at Check In for this payment method.",
              "type": "boolean"
            },
            "stay": {
              "description": "Indicates if authorization during the stay of the guest is allowed for this payment method. False will indicate that no authorization will be done during the stay and prior to settlements for this payment method. The settlement request will be sent without an authorization request.",
              "type": "boolean"
            },
            "deposit": {
              "description": "Indicates if authorization at Deposit is allowed for this payment method. False will indicate that no authorization will be done at the time of deposit payments, for this payment method. The settlement request will be sent without an authorization request.",
              "type": "boolean"
            },
            "payOnly": {
              "description": "Indicates if this payment method is setup as a PayOnly, which does not require authorization to be done prior to settlement. The special settlement handling will take care of both Authorization and Settlement together.",
              "type": "boolean"
            }
          }
        },
        "reservationDetail": {
          "description": "Reservation Details required for the authorization. The details returned are Hotel Code, Reservation Id, Guest Name, Arrival Date, Departure Date, Create Date,Room , Reservation Balance and Payment Information.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "paymentMethodInfo": {
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "sequenceNumber": {
          "description": "Unique sequence for this authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionType": {
          "description": "Transaction type of the authorization(INIT or SUPP).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "originalAuthSequence": {
          "description": "Unique Authorization Sequence for the authorization and settlement.",
          "type": "integer"
        },
        "usageType": {
          "description": "Usage type used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vendorTranId": {
          "description": "Vendor transaction id for the authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "initialAuthorizationRequired": {
          "description": "Flag to indicate if initial authorization required.",
          "type": "boolean"
        },
        "businessDate": {
          "description": "The current date of the Property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "receiptHistoryResponse": {
      "type": "object",
      "description": "Response for the fetch Receipt History.",
      "properties": {
        "receiptHistory": {
          "description": "List of Receipt History.",
          "$ref": "#/definitions/receiptsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "receiptsType": {
      "type": "array",
      "description": "Receipt History details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/receiptSummaryType"
      }
    },
    "postRateCodeCriteria": {
      "type": "object",
      "description": "Request to check if a Rate Code can be posted to the room manually. This will check if the Rate Code is valid, if the Products(Packages) which are defined as part of the Rate Code can be posted or reversed.",
      "properties": {
        "criteria": {
          "description": "Information on the Rate Code and reservation where it should be posted.",
          "$ref": "#/definitions/postRateCodeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postRateCodeCriteriaType": {
      "type": "object",
      "description": "Criteria type for posting a Rate Code amount to a guest folio.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation e",
          "$ref": "#/definitions/reservationId"
        },
        "rateCode": {
          "description": "The Rate Code which is to be posted on the Guest Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Price of the Rate Code.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Posting quantity.",
          "type": "integer"
        },
        "guestCounts": {
          "description": "Holds the guest counts(adults or children) for posting the Rate Code to the reservation.",
          "$ref": "#/definitions/guestCountsType"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "nights": {
          "description": "Number of nights to post the Rate Code for. Used for Comp Accounting.",
          "type": "integer"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "adjustmentCode": {
          "description": "Adjustment code to be used for the manual posting of rate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueDate": {
          "description": "Revenue Date or the business date of the posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "parentTrxNo": {
          "description": "The linked transaction number for this Posting of Rate Code.",
          "type": "number"
        },
        "postProducts": {
          "description": "Flag to indicate if Products(Packages) which are part of the Rate Code should be posted as part of this operation. If products are not required, the entire amount will be posted towards the room element of the Rate Code.",
          "type": "boolean"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "cashierId": {
          "description": "The Cashier who is posting.",
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "guestCountsType": {
      "type": "object",
      "description": "A collection of GuestCount by age group.",
      "properties": {
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "type": "array",
      "description": "Age of a child in years.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childAgeType": {
      "type": "object",
      "description": "Defines Child's Age.",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childBucketsType": {
      "type": "object",
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "postedRateCode": {
      "type": "object",
      "description": "Response for the operation that posts a Rate Code amount on the reservation.",
      "properties": {
        "postings": {
          "description": "The postings which were made as part of the operation.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkedRateCode": {
      "type": "object",
      "description": "Response for the request to check if a Rate Code can be posted to a reservation .",
      "properties": {
        "checks": {
          "description": "Includes flags to indicate if Products(Packages) are included in the Rate Code and if Products(Packages) can be posted or reversed.",
          "$ref": "#/definitions/postRateCodeCheckType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postRateCodeCheckType": {
      "type": "object",
      "description": "The response type for Checks done before Posting a Rate Code amount to a reservation.",
      "properties": {
        "rateCodeHasProducts": {
          "description": "Indicates that the Rate Code has Products(Packages) for the user to determine if they should be posted.",
          "type": "boolean"
        },
        "canPostProducts": {
          "description": "Indicates that the Products(Packages) which are included in the Rate Code cannot be posted as part of this transaction. This could be the case where the reservation is an Open Folio or has Post Stay.",
          "type": "boolean"
        },
        "canReverseProducts": {
          "description": "Indicates that the Products(Packages) which are included in the Rate Code cannot be reversed as part of this transaction. This could be the case when the reservation has consumed the allowance already and is now trying to reverse the Rate Code by using a negative quantity.",
          "type": "boolean"
        }
      }
    },
    "billingChargesInBatchCriteria": {
      "type": "object",
      "description": "Operation to post billing charge to list of reservations.",
      "properties": {
        "criteria": {
          "description": "Information regarding the Rate Code and reservation to which the rate amount should be posted.",
          "$ref": "#/definitions/postBillingChargesInBatchCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postBillingChargesInBatchCriteriaType": {
      "type": "object",
      "description": "Criteria type for posting charges.",
      "properties": {
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "reservations": {
          "$ref": "#/definitions/reservations"
        }
      }
    },
    "postedBillingChargesInBatch": {
      "type": "object",
      "description": "Operation response to post billing charge with list of reservations.",
      "properties": {
        "reservationBatchChargeInfoList": {
          "type": "array",
          "description": "Information regarding charges in batch result for each reservation.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationChargesInBatchInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationChargesInBatchInfoType": {
      "type": "object",
      "description": "Result of charges in batch for each reservation.",
      "properties": {
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "arrivalDate": {
          "description": "Arrival date of the reservation.",
          "type": "string",
          "format": "date-time"
        },
        "departureDate": {
          "description": "Departure date of the reservation.",
          "type": "string",
          "format": "date-time"
        },
        "guestName": {
          "description": "Guest name associated to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "roomId": {
          "description": "Room number associated to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingAllowed": {
          "description": "Indicator that tells whether posting is allowed for the reservation",
          "type": "boolean"
        },
        "success": {
          "$ref": "#/definitions/successType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "errors": {
          "$ref": "#/definitions/errorsType"
        }
      }
    },
    "successType": {
      "type": "object",
      "description": "Returning an empty element of this type indicates the successful processing of an message. This is used in conjunction with the Warning Type to report any warnings or business errors.",
      "properties": {}
    },
    "errorsType": {
      "type": "array",
      "description": "An error that occurred during the processing of a message.",
      "maxItems": 99,
      "items": {
        "$ref": "#/definitions/errorType"
      }
    },
    "ccBatchSettlements": {
      "type": "object",
      "description": "Response for credit card settlements.",
      "properties": {
        "batchSettlements": {
          "description": "List of credit card transaction.",
          "$ref": "#/definitions/cCBatchSettlementsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cCBatchSettlementsType": {
      "type": "array",
      "description": "List of Settlement transaction details for credit card transaction.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cCBatchSettlementType"
      }
    },
    "additionalTaxesDetails": {
      "type": "object",
      "description": "Response object containing additional tax information.",
      "properties": {
        "taxAmountInfo": {
          "description": "Tax amount to be adjusted.",
          "$ref": "#/definitions/taxAmountInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxAmountInfoType": {
      "type": "object",
      "description": "Tax amount to be adjusted for the guest",
      "properties": {
        "amount": {
          "description": "Amount to be adjusted for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "advancePaymentBalance": {
      "type": "object",
      "description": "Response for the advance payment balance.",
      "properties": {
        "paymentBalance": {
          "description": "Advance payment balance.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "advanceRoomCharges": {
      "type": "object",
      "description": "Request to post the Room Charges for a reservation in advance. This request posts the Room Charges for a reservation for tonight or for many nights starting from the last posted night. This can also be used to verify if the reservation has already been charged for the full stay. Setting the Verify flag will return details regarding the last Room Charge posted date and if there are any available dates for which the room charges can be posted in advance. Room Charges cannot be posted for dates prior to the business date of the resort. To make the actual posting, the verification flag should be false.",
      "properties": {
        "criteria": {
          "description": "Criteria for creating the advance folio. Includes information regarding the reservation(s) for which the advance bill is to be generated and the nights for which the postings have to be created.",
          "$ref": "#/definitions/advanceRoomChargesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "advanceRoomChargesCriteriaType": {
      "type": "object",
      "description": "Type to set the criteria for generation of advance folios. This will post the room and tax transactions for the nights requested.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "description": "Reservation id for which the advance bill will be generated.",
          "$ref": "#/definitions/reservationIdList"
        },
        "postForEntireStay": {
          "description": "Indicates if the posting of room charges have to be done for the entire stay.",
          "type": "boolean"
        },
        "endDateToCharge": {
          "description": "Indicates the last date until which the Advance Room Charges have to be posted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "verifyOnly": {
          "description": "Flag to indicate if only a verification is required. This checks if advance bills have been generated for this reservation and returns the last date in the response. Setting this flag to true, will return the information for the below elements in the response: AvailablePostingDates, GeneratedForEntireStay, LastRoomAndTaxPostedDate and the Reservation Information. No posting will be done. In order for the actual posting to occur this flag should be false.",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "eventType": {
          "description": "Event to which this process will be logged.",
          "$ref": "#/definitions/cashieringEventType"
        }
      }
    },
    "advanceRoomChargesReservationInfo": {
      "type": "object",
      "description": "Response for the generate advance folio request. Post Advance Room Charges Request can return the below error codes : FOF00065 - Reservation ID or Resort was not supplied. FOF00147 - Reservation is currently not In-House. FOF00148 - Date range requested is not valid. FOF00149 - Advance Room Charges Posting was not completed successfully as there was an Error during posting. FOF00150 - Room Charges have already been posted for the requested dates. FOF00151 - Advance Room Charges could not be completed {the error message if any}.",
      "properties": {
        "reservationInfo": {
          "description": "Reservation id for which the advance bill information is requested.",
          "$ref": "#/definitions/advanceRoomChargesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "advanceRoomChargesInfoType": {
      "type": "object",
      "properties": {
        "availablePostingDates": {
          "description": "The Time Span for which the Advance Room Charges can be done.",
          "$ref": "#/definitions/timeSpanType"
        },
        "reservation": {
          "description": "Reservation id for which the advance bill information is requested.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "generatedForEntireStay": {
          "description": "Indicates if the advance folio has been generated for the entire stay.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Indicates the date of the stay until which the advance bill has been generated .",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "alertNotices": {
      "type": "object",
      "description": "Response with the fetched alerts, includes global alerts.",
      "properties": {
        "alerts": {
          "description": "The Alert information returned as per the request.",
          "$ref": "#/definitions/alertsType"
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "alertsType": {
      "type": "array",
      "description": "List of alerts.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alertType"
      }
    },
    "alertType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code identifying the type of alert.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "global": {
          "description": "Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.",
          "type": "boolean"
        },
        "area": {
          "description": "The Area where the alert will be attached and shown.",
          "$ref": "#/definitions/alertAreaType"
        },
        "description": {
          "description": "The alert message.",
          "type": "string"
        },
        "screenNotification": {
          "description": "Notify by showing the alert on the screen",
          "type": "boolean"
        },
        "printerNotification": {
          "description": "Notify by sending the message to the printer.",
          "type": "boolean"
        },
        "printerName": {
          "description": "Printer used to print the alert notification.",
          "type": "string"
        },
        "reportId": {
          "description": "The module id of the report. This is used to printer the alert.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportName": {
          "description": "Report name of the report type.",
          "type": "string"
        },
        "reportDescription": {
          "description": "Report description. Mainly used for as a parameter for printing the alerts.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "guestInfo": {
          "description": "Contains information regarding the guest.",
          "$ref": "#/definitions/alertGuestInfoType"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "welcomeOffer": {
          "description": "Contains information regarding welcome offer.",
          "$ref": "#/definitions/welcomeOfferType"
        },
        "stopCheckInCheckOut": {
          "description": "Indicates the Reservation Stop Check In/Check Out Global Alert.",
          "type": "boolean"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "alertAreaType": {
      "type": "string",
      "enum": [
        "CheckIn",
        "CheckOut",
        "Reservation",
        "Billing",
        "InHouse"
      ]
    },
    "alertGuestInfoType": {
      "type": "object",
      "properties": {
        "guestName": {
          "description": "Guest Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membership": {
          "description": "Membership information of the guest.",
          "$ref": "#/definitions/membershipType"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        },
        "lastHotelCode": {
          "description": "Hotel code of the last stay location of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayDate": {
          "description": "Last stay date at the property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalStay": {
          "description": "Holds total number of days that the guest have stayed in the property.",
          "type": "integer"
        },
        "comments": {
          "description": "Additional alert information regarding the membership of the guest.",
          "type": "string"
        },
        "preference": {
          "description": "Additional alert information regarding the guest.",
          "type": "string"
        },
        "preference2": {
          "description": "Additional mandatory alert information regarding the guest preferences.",
          "type": "string"
        },
        "guestPreferredLanguage": {
          "description": "Holds the language preferred by the guest.",
          "$ref": "#/definitions/languageType"
        },
        "totalBrandStay": {
          "description": "Holds total number of days that the guest have stayed in the properties for the same brand.",
          "type": "integer"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        }
      }
    },
    "membershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "paragraphType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "membershipEarningPreferenceType": {
      "type": "string",
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "benefitsType": {
      "type": "array",
      "description": "Basic information about membership benefit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "benefitType": {
      "type": "object",
      "description": "Basic information about membership benefit.",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        }
      }
    },
    "tierAdministrationType": {
      "type": "string",
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "downgradeType": {
      "type": "string",
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "cardReIssueType": {
      "type": "string",
      "description": "Request to re issue a new card.",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "vIPStatusType": {
      "type": "object",
      "description": "VIP status of the customer.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 2000.",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "languageType": {
      "type": "string",
      "minLength": 0,
      "maxLength": 40
    },
    "userDefinedFieldsType": {
      "type": "object",
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        }
      }
    },
    "characterUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "characterUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Character/String Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "numericUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "numericUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "properties": {
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "dateUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Date Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "dateUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Date Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "welcomeOfferType": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Determines the status of the welcome offer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Determines the welcome offer option selected while availing the welcome offer.",
          "$ref": "#/definitions/welcomeOfferOptionsType"
        }
      }
    },
    "welcomeOfferOptionsType": {
      "type": "string",
      "description": "None of the Welcome Offer option is selected.",
      "enum": [
        "BonusPoints",
        "Ecoupons",
        "Items",
        "PostIt",
        "NotSelected"
      ]
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "authorizationHistory": {
      "type": "object",
      "description": "The result element containing a history list of credit card authorizations for a particular reservation, filtered by the requested criteria.",
      "properties": {
        "folioHistory": {
          "description": "The collection of credit card history records.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/authorizationHistoryType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationHistoryType": {
      "type": "object",
      "description": "Information on a single credit card authorization transaction.",
      "properties": {
        "businessDate": {
          "description": "The corresponding business date for this record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionType": {
          "$ref": "#/definitions/cardAuthorizationTransactionType"
        },
        "approvalAmount": {
          "description": "Amount sent for authorization for this transaction.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardPaymentInformation": {
          "description": "Payment Card information that was sent for authorization",
          "type": "object",
          "properties": {
            "paymentCard": {
              "$ref": "#/definitions/resPaymentCardType"
            },
            "balance": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "authorizationRule": {
              "$ref": "#/definitions/authorizationRuleType"
            },
            "emailFolioInfo": {
              "description": "Information on an email for the customer.",
              "type": "object",
              "properties": {
                "email": {
                  "description": "eMail deatils for the profile.",
                  "$ref": "#/definitions/emailType"
                },
                "emailFolio": {
                  "type": "boolean"
                },
                "id": {
                  "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                },
                "type": {
                  "description": "A reference to the type of object defined by the UniqueID element.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 40
                }
              }
            },
            "paymentMethod": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "folioView": {
              "type": "integer"
            }
          }
        },
        "status": {
          "description": "Contains he authorization status indicator - either Successful for Failed.",
          "type": "object",
          "properties": {
            "successful": {
              "description": "An indicator that the authorization was successful.",
              "type": "object",
              "properties": {
                "approvalCode": {
                  "description": "Approval code sent by the credit card company on a successful authorization.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                }
              }
            },
            "failed": {
              "description": "An indicator that the authorization failed.",
              "type": "object",
              "properties": {
                "reason": {
                  "description": "The reason for the authorization failure.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 2000
                }
              }
            }
          }
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "History type can only be either Settlement or Authorization or Payment or Refunds.",
          "type": "string",
          "enum": [
            "Settlement",
            "Authorization",
            "Payment",
            "Refunds"
          ]
        }
      }
    },
    "billingChargesStatus": {
      "type": "object",
      "description": "Response when checking or inquiring the available options for a set of billing charges.",
      "properties": {
        "options": {
          "description": "Set of consumables and the available options for each one.",
          "$ref": "#/definitions/checkPostBillingChargesOptionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkPostBillingChargesOptionsType": {
      "type": "array",
      "description": "TAvailable options for this consumable",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "consumable": {
            "$ref": "#/definitions/chargeCriteriaType"
          },
          "packageAllowance": {
            "description": "Determines if the package allowance is available to be consumed.",
            "type": "boolean"
          },
          "roomRouting": {
            "description": "Room routing is applicable on the requested consumable.",
            "type": "object",
            "properties": {
              "roomId": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "guest": {
                "$ref": "#/definitions/personNameType"
              },
              "applicable": {
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "personNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "billingCharges": {
      "type": "object",
      "description": "Request to post a charge on a reservation's folio.",
      "properties": {
        "criteria": {
          "description": "Criteria for the charge information to be posted.",
          "$ref": "#/definitions/billingChargesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingChargesCriteriaType": {
      "type": "object",
      "description": "Criteria type for posting charges.",
      "properties": {
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postIt": {
          "description": "Flag to indicate it is part of a PostIt Sale.",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "welcomeOfferPosting": {
          "description": "Flag to indicate that current posting is a Welcome Offer Posting.",
          "type": "boolean"
        }
      }
    },
    "billingChargesDetails": {
      "type": "object",
      "description": "Response notifying if the posting of a charge to a reservation was successful.",
      "properties": {
        "postings": {
          "description": "List of Postings produced by Billing Charge Request.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingCheckChargesCriteria": {
      "type": "object",
      "description": "Request object for PostBillingCheckCharges operation.",
      "properties": {
        "check": {
          "description": "Details of the check to be posted.",
          "$ref": "#/definitions/postBillingCheckChargesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postBillingCheckChargesCriteriaType": {
      "type": "object",
      "description": "Details of the check with line item charges to post to a guest folio.",
      "properties": {
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "checkNumber": {
          "description": "Indicates the check number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "revenueDate": {
          "description": "The date against which charges are posted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "items": {
          "description": "Line items of the check.",
          "$ref": "#/definitions/postBillingCheckChargesItemsCriteriaType"
        },
        "checkId": {
          "description": "Unique identifier of this check in the partner system, applicable only if the charge is originated in a partner system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        }
      }
    },
    "postBillingCheckChargesItemsCriteriaType": {
      "type": "array",
      "description": "Line items of the check.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/postBillingCheckChargesItemCriteriaType"
      }
    },
    "postBillingCheckChargesItemCriteriaType": {
      "type": "object",
      "description": "Line item of check to post.",
      "properties": {
        "transactionCode": {
          "description": "Transaction code to use for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Amount to post.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingRemark": {
          "description": "Text describing any applicable detail of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "reservation": {
      "type": "object",
      "description": "Checkout request can be used to verify a reservation for checkout and do an actual checkout. In case the verificationOnly attribute is sent false, the operation will perform an actual checkout. In case the verificationOnly attribute is sent true, the operation goes through the reservation in question and verifies if it's Ok to checkout, otherwise the verification status element will provide you the verification code. The verification codes are described in the documentation of verificationOnly attribute.",
      "properties": {
        "reservation": {
          "description": "Check in reservation request.",
          "$ref": "#/definitions/checkoutReservationType"
        },
        "verificationOnly": {
          "description": "VerificationOnly \"true\" validates the hotel code and reservation id supplied in the request. VerificationOnly \"false\" validates and then check-out the guest using the request details. Following codes might be returned during the verification: FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation can't be found with the supplied hotel code and reservation id. FOF00107 - The guest's departure is not scheduled for today. Check-out not possible. FOF00109 - The guest's reservation is not in a valid status for check-out. FOF00108 - The guest has a balance. Check-out not possible.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reinstateCheckedOutReservation": {
      "type": "object",
      "description": "Request to reinstate checkout reservation in order to post additional transactions, etc.",
      "properties": {
        "hotelId": {
          "description": "Hotel code.",
          "$ref": "#/definitions/codeType"
        },
        "reservationId": {
          "description": "Identifies the reservation to reinstate..",
          "$ref": "#/definitions/reservationId"
        },
        "notifyInterfaces": {
          "description": "Indicates whether interfaces should be notified.",
          "type": "boolean"
        },
        "overrideFlag": {
          "description": "Indicate whether user wants to reinstate even if some other guest already checked in into same room.",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoSettleCompFolios": {
      "type": "object",
      "description": "Request to auto settle comp folios. OPERA will reference the 'Default Comp Payment Method' setting to settle the folio if no authorizer AR account is associated with the folio.",
      "properties": {
        "criteria": {
          "description": "Criteria to auto settle comp folios.",
          "$ref": "#/definitions/autoSettleCompFoliosCriteriaType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoSettleCompFoliosCriteriaType": {
      "type": "object",
      "description": "Criteria to auto settle comp folios of a reservation.",
      "properties": {
        "hotelId": {
          "description": "Hotel code of the folios to be auto settled.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation Unique ID of the folios to be auto settled.",
          "$ref": "#/definitions/reservationId"
        },
        "eventType": {
          "description": "Event to which this process will be logged. Possible values are CheckOut, InterimBill, AdvanceBill.",
          "$ref": "#/definitions/cashieringEventType"
        },
        "cashierId": {
          "description": "Numeric ID of the cashier.",
          "type": "number"
        }
      }
    },
    "autoSettleCompFoliosStatus": {
      "type": "object",
      "description": "Response for auto settle comp folios. This includes collection of auto settled comp folios.",
      "properties": {
        "folios": {
          "description": "Collection of auto settled comp folios.",
          "$ref": "#/definitions/autoSettleCompFoliosType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoSettleCompFoliosType": {
      "type": "array",
      "description": "Information about comp folio that was auto settled.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/autoSettleCompFolioType"
      }
    },
    "autoSettleCompFolioType": {
      "type": "object",
      "description": "Information about comp folio that was auto settled.",
      "properties": {
        "payeeId": {
          "description": "Unique ID of payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "folioView": {
          "description": "Comp folio window that was attempted to be auto settled.",
          "type": "integer"
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        }
      }
    },
    "postCompRedemptions": {
      "type": "object",
      "description": "Request type of complimentary bucket redemptions posting.",
      "properties": {
        "criteria": {
          "description": "Criteria to post complimentary bucket redemptions request.",
          "type": "object",
          "properties": {
            "membershipId": {
              "description": "Membership number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 100
            },
            "compRedemptions": {
              "description": "Complimentary bucket redemptions to post as payment.",
              "$ref": "#/definitions/compRedemptionsType"
            },
            "cashierId": {
              "description": "Numeric ID of the cashier.",
              "$ref": "#/definitions/cashierId"
            },
            "folioView": {
              "description": "Folio Window.",
              "type": "integer"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reverseCompRedemptions": {
      "type": "object",
      "description": "Request type of complimentary bucket redemptions reversal.",
      "properties": {
        "criteria": {
          "description": "Criteria to reverse complimentary bucket redemptions request.",
          "type": "object",
          "properties": {
            "membershipId": {
              "description": "Membership number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 100
            },
            "compRedemptions": {
              "description": "Complimentary bucket redemptions to post as negative payment.",
              "$ref": "#/definitions/compRedemptionsType"
            },
            "cashierId": {
              "description": "Numeric ID of the cashier.",
              "$ref": "#/definitions/cashierId"
            },
            "folioView": {
              "description": "Folio Window.",
              "type": "integer"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "deferredTaxesProcess": {
      "type": "object",
      "description": "Request for submitting post deferred taxes for a reservation.",
      "properties": {
        "criteria": {
          "description": "Contains criteria to post the deferred taxes for the given reservation.",
          "$ref": "#/definitions/deferredTaxesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "deferredTaxesCriteriaType": {
      "type": "object",
      "description": "Contains criteria to post the deferred taxes for the given reservation.",
      "properties": {
        "hotelId": {
          "description": "Property context of the reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Unique identifier of a reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "cashierId": {
          "description": "Unique cashier identifier.",
          "$ref": "#/definitions/cashierId"
        },
        "refreshAlways": {
          "description": "Configuring this flag to be TRUE will make the postDeferredTax job to be submitted always.",
          "type": "boolean"
        }
      }
    },
    "deferredTaxesProcessDetails": {
      "type": "object",
      "description": "Response of submitting post deferred taxes for a reservation.",
      "properties": {
        "processId": {
          "description": "Job process identifier.",
          "$ref": "#/definitions/stringLength40"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationDepositCriteria": {
      "type": "object",
      "description": "Request object to process reservation deposit.",
      "properties": {
        "criteria": {
          "description": "Criteria to process deposit reservation.",
          "$ref": "#/definitions/processReservationDepositCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "processReservationDepositCriteriaType": {
      "type": "object",
      "description": "Criteria to process reservation deposit.",
      "properties": {
        "hotelId": {
          "description": "Hotel code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositProcessType": {
          "description": "Deposit process type of the reservation.",
          "$ref": "#/definitions/depositProcessType"
        },
        "reservationId": {
          "description": "Reservation id of the reservation",
          "$ref": "#/definitions/reservationId"
        },
        "amount": {
          "description": "The Amount would be transferred to the Guest Ledger of the Psuedo Posting Room if the DepositProcessingType = Keep/Return otherwise it will be transferred to the Guest Ledger of the current reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "description": "The Percentage would be transferred to the Guest Ledger of the Psuedo Posting Room if the DepositProcessingType = Keep/Return otherwise it will be transferred to the Guest Ledger of the current reservation.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "depositProcessType": {
      "type": "string",
      "description": "The Deposit is transferred to an internal account for returned deposits to be handled by the property. Users can select to keep all (not exceeding total), a portion of, or none of the deposit.",
      "enum": [
        "Keep",
        "Return",
        "Mature"
      ]
    },
    "depositFolioCriteria": {
      "type": "object",
      "description": "Request to create a Deposit Folio for a reservation.",
      "properties": {
        "criteria": {
          "description": "Criteria for creating a Deposit Folio. Deposit Folio functionality should be active.",
          "$ref": "#/definitions/depositFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositFolioCriteriaType": {
      "type": "object",
      "description": "The Deposit folio posting and payments information.",
      "properties": {
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "reservationId": {
          "description": "Reservation for which the Deposit Folio is required.",
          "$ref": "#/definitions/reservationId"
        },
        "profileId": {
          "description": "Profile Id of the Payee for this Deposit Folio.",
          "$ref": "#/definitions/profileId"
        },
        "guaranteeCode": {
          "description": "New guarantee code associated with reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPolicyId": {
          "description": "The deposit policy ID to which the Deposit Folio is being associated.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "paymentMethod": {
          "description": "Payment method to update the reservation with, if the payment did not match.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "simpleFolio": {
          "description": "This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.",
          "type": "boolean"
        },
        "overrideInventoryCheck": {
          "description": "Flag to indicate if the Inventory check has to be overridden when the guarantee code of the reservation is changed.",
          "type": "boolean"
        },
        "manualFolioNo": {
          "description": "Manual Folio Number used for deposit folio.This applies to certain country requirements.",
          "type": "integer"
        }
      }
    },
    "postedDepositFolio": {
      "type": "object",
      "description": "Response to the request to create a Deposit Folio for a reservation.",
      "properties": {
        "folioWindow": {
          "description": "Information regarding the new Deposit Folio created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "deposits": {
          "description": "Deposit payment information of the payment which was posted.",
          "$ref": "#/definitions/depositPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositMaturityDetails": {
      "type": "object",
      "description": "Response object for deposit maturity information type.",
      "properties": {
        "depositMaturityInfo": {
          "description": "Deposit Maturity Information type .",
          "$ref": "#/definitions/depositMaturityInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositMaturityInfoType": {
      "type": "object",
      "description": "Deposit maturity information type.",
      "properties": {
        "depositMaturityType": {
          "description": "The Reservation's Deposit Status Type. When preference is set to Check In, the deposit is transferred when the guest checks in. When the preference is set to Last Night Stay,then the deposit is transferred during the last nights night audit. For example, if the departure date for a reservation is July 14th, then the deposit would be posted during the night audit for July 13th.",
          "$ref": "#/definitions/depositMaturityType"
        },
        "totalAmountTransferrable": {
          "description": "Total Deposit Amount that can be transferred to another Reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalAmountDue": {
          "description": "Total Deposit Amount which is due for this reservation.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "maturedDepositsDetails": {
      "type": "object",
      "description": "Response of matured deposits.",
      "properties": {
        "maturedDeposits": {
          "description": "Collection of matured deposits.",
          "$ref": "#/definitions/maturedDepositsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "maturedDepositsType": {
      "type": "array",
      "description": "Detailed information of matured deposits.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/maturedDepositType"
      }
    },
    "maturedDepositType": {
      "type": "object",
      "description": "Matured Deposits detail.",
      "properties": {
        "transaction": {
          "description": "Transaction detail of matured deposits.",
          "$ref": "#/definitions/transactionType"
        },
        "guestCreditAmount": {
          "description": "Deposit amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioView": {
          "description": "The folio window where this authorization is applied.",
          "type": "integer"
        },
        "cashierInfo": {
          "description": "Chashier information of user",
          "$ref": "#/definitions/cashierInfoType"
        },
        "remark": {
          "description": "User defined remarks of the matured deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User defined reference of the matured deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "transactionType": {
      "type": "object",
      "description": "Transaction type.",
      "properties": {
        "transactionNo": {
          "description": "Unique transaction identifier.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "transactionDate": {
          "description": "Transaction date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Transaction description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "depositToGuestFolio": {
      "type": "object",
      "description": "Request to post an existing deposit on a reservation to the Guest Folio for No Show or Canceled Reservations. Deposits remain in the deposit ledger until Checkin/Checkout. In the case of No Show or Canceled reservations they remain in the deposit ledger until this request is done.",
      "properties": {
        "criteria": {
          "description": "Criteria to move the deposit from the Deposit Ledger to the Guest Folio(Ledger).",
          "$ref": "#/definitions/postDepositToGuestFolioType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postDepositToGuestFolioType": {
      "type": "object",
      "description": "Criteria for transferring the Deposit Amount to the Guest Folio",
      "properties": {
        "hotelId": {
          "description": "Resort for which the reservation defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Unique ID of a reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "earlyDeparture": {
      "type": "object",
      "description": "Request to change a reservation to an Early Departure. As part of this process the reservation will be changed to a Due Out status with the departure date being the current business date. Only Inhouse reservations can be changed to Early Departure. Before changing the reservation to early departure, rate restrictions on the rate code used and any allowances consumed by the guest for today will be checked. If there is a penalty applicable this can be posted to the reservation.",
      "properties": {
        "criteria": {
          "description": "Criteria for changing a reservation to an early departure. As part of the criteria, flags can be sent to ignore any check on rate code restrictions, Tiered rate changes, post allowance consumed to guest account and post the early departure penalty if applicable, can be used to indicate the user preferences.",
          "$ref": "#/definitions/earlyDepartureCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "earlyDepartureCriteriaType": {
      "type": "object",
      "description": "Criteria type for verifying or changing an Early Departure reservation.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "description": "Reservation id for which the early departure is to be done.",
          "$ref": "#/definitions/reservationIdList"
        },
        "ignoreRateRestriction": {
          "description": "Indicates if Rate Restriction check should be overridden.",
          "type": "boolean"
        },
        "postConsumedAllowanceToGuest": {
          "description": "Indicates if any allowance consumed by the guest for today can be posted to the Guest Folio. If this cannot be done then the Early Departure cannot proceed.",
          "type": "boolean"
        },
        "ignoreCheckOnTieredRate": {
          "description": "Indicates if check has to be done for Rate Tiers.",
          "type": "boolean"
        },
        "postEarlyDeparturePenalty": {
          "description": "Indicates if the early departure penalty should be posted .",
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "earlyDepartureInfo": {
      "type": "object",
      "description": "Response for Early departure verification. Contains information regarding early departure penalty amount if applicable and any errors or warnings as to why the early departure cannot be done. Possible error codes are: FOF00152: An early departure could result in a change to the room rate, due to the reduced length of stay. FOF00153: Exchange Rates not setup for {currency code} . FOF00155: The partially consumed package(s) will be charged to the guest account. FOF00156: There is a Rate Code Restriction for {restriction information}. FOF00157: The reservation status is not valid for an early departure. FOF00158: Early Departure is not required as the reservation is already in Due Out status.",
      "properties": {
        "earlyDepartureDetails": {
          "description": "Information for the Early Departure. Has details regarding the Early Departure penalty if applicable for the property and reservation.",
          "$ref": "#/definitions/earlyDepartureInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "earlyDepartureInfoType": {
      "type": "object",
      "description": "Information regarding Early Departure for a reservation. Contains information regarding penalty, if any.",
      "properties": {
        "penaltyAmount": {
          "description": "Amount that can be charged as Early Departure Penalty",
          "$ref": "#/definitions/currencyAmountType"
        },
        "penaltyDescription": {
          "description": "Description of the Early Departure Penalty calculation rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "stagedTransactions": {
      "type": "object",
      "description": "Response to the request to get staged transaction information for a Reservation",
      "properties": {
        "stagedCompTransactionsInfo": {
          "description": "Transaction details of staged comp transactions for the requested reservation.",
          "$ref": "#/definitions/stagedCompTransactionsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stagedCompTransactionsInfoType": {
      "type": "array",
      "description": "Transaction ID List of staged comp transactions for the reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueIDListType"
      }
    },
    "finalPostings": {
      "type": "object",
      "description": "Request to apply any final charges or payments to a reservation prior to checkout. This operation should be called prior to the guest settlement which would then reflect the balance the guest has to pay.",
      "properties": {
        "reservation": {
          "description": "Check out reservation request.",
          "$ref": "#/definitions/checkoutReservationType"
        },
        "responseInstruction": {
          "description": "This flag will allow the user to control the response performance. Response will return folio information based on the this flag. Possible values are None, Summary, Details",
          "$ref": "#/definitions/responseInstructionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "responseInstructionType": {
      "type": "string",
      "description": "Response types used in the Apply Final Postings request. Based on the request the folio summary , folio details or no details will be returned in the response.",
      "enum": [
        "None",
        "Summary",
        "Details"
      ]
    },
    "fixedChargesDetails": {
      "type": "object",
      "description": "Response that contains either the fixed charges list if fetch was successful or error(s) if not.",
      "properties": {
        "fixedCharges": {
          "description": "List of Fixed Charges. Contains information on Fixed Charges Frequency, Schedule and Charge Details. Refer to the Generic Common Types document for information on the Fixed Charges Type",
          "$ref": "#/definitions/fixedChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fixedChargesType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "fixedChargeType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargeScheduleType": {
      "type": "object",
      "description": "Holds schedule of fixed charge.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeFrequencyType": {
      "type": "string",
      "description": "Yearly.",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeDetailType": {
      "type": "object",
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "properties": {
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        }
      }
    },
    "fixedCharges": {
      "type": "object",
      "description": "Method to update fixed charges of a reservation.",
      "properties": {
        "hotelId": {
          "description": "Hotel code of the reservation.",
          "$ref": "#/definitions/codeType"
        },
        "reservationId": {
          "description": "Reservation Id for which the fixed charges need to be updated.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "fixedCharges": {
          "description": "List of the fixed charges that should be updated.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "flexibleBenefitPostingsCriteria": {
      "type": "object",
      "description": "Apply Flexible Benefit Postings.",
      "properties": {
        "applyFlexibleBenefitCriteria": {
          "description": "Criteria for reversing a Flexible Benefit Posting.",
          "$ref": "#/definitions/applyFlexibleBenefitPostingsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "applyFlexibleBenefitPostingsCriteriaType": {
      "type": "object",
      "description": "Criteria for retrieving one or more guest's folio transactions.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation identifier for which Flexible Benefits will be posted.",
          "$ref": "#/definitions/reservationId"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "folioTaxPaymentsInfo": {
      "type": "object",
      "description": "Response to the request for Payment Tax records for a reservation. Lists all the Payment Taxes for the reservation which are available.",
      "properties": {
        "paymentTaxInfo": {
          "$ref": "#/definitions/paymentTaxInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentTaxInfoType": {
      "type": "object",
      "description": "Type for Package Tax Information for Thailand Tax functionality.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation id for which the Payment Tax information is used.",
          "$ref": "#/definitions/reservationId"
        },
        "taxes": {
          "description": "The payment tax records for this reservation.",
          "$ref": "#/definitions/paymentTaxesType"
        }
      }
    },
    "folio": {
      "type": "object",
      "description": "Response to the request to get Financial Information for a Reservation",
      "properties": {
        "reservationFolioInformation": {
          "description": "Financial details for the requested reservation.",
          "$ref": "#/definitions/reservationFolioInfoType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response folio information.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationFolioInfoType": {
      "type": "object",
      "description": "Each folio will include summary and/or detailed information.",
      "properties": {
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "folioWindows": {
          "description": "The Folio Window information of the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "folioHistory": {
          "description": "Folio History element contains all generated folios",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "postStayChargeAllowed": {
          "description": "Computed flag specifying that the reservation has met the criteria which allows charges to be posted after being checked-out.",
          "type": "boolean"
        },
        "preStayChargeAllowed": {
          "description": "Computed flag specifying that the reservation has met the criteria which allows charges to be posted before checking-in.",
          "type": "boolean"
        },
        "autoCheckInAllowed": {
          "description": "Flag specifying that the reservation can be auto check in when Auto Checkin Pseudo Room parameter is active.",
          "type": "boolean"
        },
        "postToNoShowCancelAllowed": {
          "description": "Flag specifying that the reservation can post if the reservation status was No Show or Cancelled.",
          "type": "boolean"
        },
        "stampDutyExists": {
          "description": "Stamp Duty posted in at least one folio window.",
          "type": "boolean"
        },
        "roomAndTaxPosted": {
          "description": "Flag to check if the room and tax are already posted.",
          "type": "boolean"
        },
        "deferredTaxesPosted": {
          "description": "Flag applicable only when ALLOW_DEFERRED_TAXES is ON for the resort. Set to true only when there are any unsettled transactions on any of the windows with the deferred tax entry posted. Set to false only when there are unsettled transactions on any of the windows without deferred tax entry.",
          "type": "string"
        },
        "correctionTrxExists": {
          "description": "Flag indicating if a folio window contains a correction trx. A correction trx indicates a pending required fiscal action over the folio window. Applicable only in Greece.",
          "type": "boolean"
        }
      }
    },
    "closeFolioCriteria": {
      "type": "object",
      "description": "Request to close an Open Folio Reservation. The Property should be using the Open Folio Functionality to use this operation.",
      "properties": {
        "criteria": {
          "description": "Criteria for closing the folio. Property code and Reservation ID is required.",
          "$ref": "#/definitions/closeFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "closeFolioCriteriaType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "folioCriteria": {
      "type": "object",
      "description": "Generate Folio request can be used to create a folio for checked in reservation or reservation with open folios",
      "properties": {
        "criteria": {
          "description": "Property code of the reservation.",
          "$ref": "#/definitions/generateFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "generateFolioCriteriaType": {
      "type": "object",
      "description": "Generate Folio Criteria type to be used for folio generation request",
      "properties": {
        "folioNameValue": {
          "description": "Custom Folio Name Value Information to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventType": {
          "description": "Event to which this process will be logged.",
          "$ref": "#/definitions/cashieringEventType"
        },
        "reservationId": {
          "description": "Reservation identifier that will be used as the context of the available options.",
          "$ref": "#/definitions/reservationId"
        },
        "profileId": {
          "description": "Profile Id corresponding to the guest name.",
          "$ref": "#/definitions/profileId"
        },
        "fiscalInvoicingCurrencyInfo": {
          "description": "Exchange Rate information selected to be used by the Fiscal Service.",
          "$ref": "#/definitions/exchangeRateInfoType"
        },
        "associatedBillInfo": {
          "description": "Bill Information of the original bill for which the Credit Bill is being generated .",
          "$ref": "#/definitions/associatedBillInfoType"
        },
        "folioQueue": {
          "description": "Folio Type , Queue name , Fiscal Flag to be used in folio generation This is a country requirement.",
          "$ref": "#/definitions/folioQueueType"
        },
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "fiscalFolioInstruction": {
          "description": "Defines the action of the generate folio process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "folioTypeValidation": {
          "description": "Override Instruction for the Folio Type",
          "$ref": "#/definitions/folioTypeValidationType"
        },
        "transactions": {
          "description": "list of transaction.",
          "$ref": "#/definitions/transactionsType"
        },
        "transactionServiceType": {
          "description": "Contains transaction service type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "balance": {
          "description": "Balance of a Reservation for this property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "allFolioWindow": {
          "description": "Flag to decide if folios is to be generated for all windows in addition to the one requested with applicable postings and zero balance. If any of the windows have non-zero balance then folios are not generated for other windows.",
          "type": "boolean"
        },
        "correction": {
          "description": "Correction flag",
          "type": "boolean"
        },
        "debitFolio": {
          "description": "Indicates the type of folio to be generated",
          "type": "boolean"
        },
        "manualFolioNo": {
          "description": "Manual Folio Number used for settlement during checkout",
          "type": "integer"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "simpleFolio": {
          "description": "This flag signifies that generated Folio is Normal or Simple Folio. Certain countries of the World mandate a simple folio when the invoice amount is less than defined threshold.",
          "type": "boolean"
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        }
      }
    },
    "associatedBillInfoType": {
      "type": "object",
      "description": "Associated Bill info.",
      "properties": {
        "associatedBillNumber": {
          "description": "The bill number of the original bill for which the Credit Bill is being generated.",
          "type": "number"
        },
        "associatedBillFolioType": {
          "description": "The folio type of the original bill for which the Credit Bill is being generated.",
          "type": "string"
        },
        "associatedBillQueueName": {
          "description": "The folio number queue(used in certain countries) of the original bill for which the Credit Bill is being generated.",
          "type": "string"
        },
        "associatedBillFiscalBillNumber": {
          "description": "The Fiscal Folio Bill Number(from a Fiscal System) of the original bill for which the Credit Bill is being generated.",
          "type": "string"
        },
        "associatedBillGenerationDate": {
          "description": "The bill generation date of the original bill for which the Credit Bill is being generated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "folioTypeValidationType": {
      "type": "string",
      "description": "Profile detail is not configured with Tax ID.",
      "enum": [
        "TaxID"
      ]
    },
    "transactionsType": {
      "type": "array",
      "description": "List of transaction information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionType"
      }
    },
    "generatedFolio": {
      "type": "object",
      "description": "Generate Folio Response contains generated folio no and invoice number along or errors and warnings in case if folio couldn't be generated: FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation cant be found with the supplied hotel code and reservation id. FOF00123 - Folio window has a balance and folio cannot be generated. FOF00124 - The guest's reservation is not in a valid status for folio generation.",
      "properties": {
        "folioWindows": {
          "description": "Window count will be hotel based configurable.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationPackageOptions": {
      "type": "object",
      "description": "Response to fetch reservation package options.",
      "properties": {
        "packagePostings": {
          "description": "List of Packages postings.",
          "$ref": "#/definitions/packagePostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "linkedAllowanceReservationsInfo": {
          "description": "List of reservations with linked package allowances",
          "$ref": "#/definitions/linkedAllowanceReservationsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "packagePostingsType": {
      "type": "array",
      "description": "List of package postings.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/packagePostingType"
      }
    },
    "packagePostingType": {
      "type": "object",
      "description": "Posting details.",
      "properties": {
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "updateBy": {
              "type": "string"
            }
          }
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "customCharge": {
          "description": "Flag to identify a Custom Charge.",
          "type": "boolean"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "packageAllowance": {
          "description": "Package allowance.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "overageAmount": {
          "description": "Overage Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "fromRoom": {
          "description": "Room number for linked reservation package allowance or consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "packageCode": {
          "description": "Package Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "linkedAllowanceReservationsInfoType": {
      "type": "object",
      "description": "List of reservation with linked package allowances.",
      "properties": {
        "hotelId": {
          "description": "The resort code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceReservations": {
          "description": "List of Package Allowance Source reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/linkedAllowanceReservationInfoType"
          }
        },
        "targetReservation": {
          "description": "Package Allowance Target reservation.",
          "$ref": "#/definitions/linkedAllowanceReservationInfoType"
        }
      }
    },
    "linkedAllowanceReservationInfoType": {
      "type": "object",
      "description": "Linked Allowance Reservation Information.",
      "properties": {
        "reservationId": {
          "description": "Reservation name id which package allowances are linked.",
          "$ref": "#/definitions/reservationId"
        },
        "confirmationNo": {
          "description": "Reservation confirmation number.",
          "type": "string"
        },
        "guestNameId": {
          "description": "Guest name unique identifier.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "guestDisplayName": {
          "description": "Display Name for the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "roomId": {
          "description": "Guest Room number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "consumeSharedAllowances": {
          "description": "Indicates that guest is allowed to consumed shared allowances from others.",
          "type": "boolean"
        }
      }
    },
    "ccManualAuthorizationCriteria": {
      "type": "object",
      "description": "Request for registering a Manual Authorization.",
      "properties": {
        "criteria": {
          "description": "Criteria for registering the manual authorization.",
          "$ref": "#/definitions/cCManualAuthorizationCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cCManualAuthorizationCriteriaType": {
      "type": "object",
      "description": "Type for registering a manual authorization.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "description": "Reservation id for the guest whose deposit payment information is being requested.",
          "$ref": "#/definitions/reservationIdList"
        },
        "amount": {
          "description": "The amount to authorize.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "manualApprovalCode": {
          "description": "Approval code is required when making a Manual Authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioView": {
          "description": "The folio window where this authorization is applied.",
          "type": "integer"
        }
      }
    },
    "billingPayment": {
      "type": "object",
      "description": "Request to post a payment on a reservation's folio.",
      "properties": {
        "criteria": {
          "description": "Criteria for the payment information to be posted.",
          "type": "object",
          "properties": {
            "hotelId": {
              "description": "Property code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "paymentMethod": {
              "description": "Payment method used by the payee.",
              "$ref": "#/definitions/cashieringPaymentMethodType"
            },
            "postingAmount": {
              "description": "Amount to post to the folio.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "postingReference": {
              "description": "User-defined posting reference.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "postingRemark": {
              "description": "User-defined posting remark.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "comments": {
              "description": "User Defined Comments. Used for Deposit Payment postings.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "applyCCSurcharge": {
              "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
              "type": "boolean"
            },
            "manualPaymentTaxInfo": {
              "description": "The Payment Tax information for Thailand Tax functionality. The invoice number and the date will be used.",
              "$ref": "#/definitions/paymentTaxType"
            },
            "creditablePaymentTaxes": {
              "description": "Used for Thailand Tax Functionality.The payment tax records that can be used for a Credit Note for this reservation.",
              "$ref": "#/definitions/paymentTaxesType"
            },
            "terminalId": {
              "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
              "type": "string",
              "maxLength": 2000
            },
            "overrideInsufficientCC": {
              "description": "Flag to allow a rebate by Credit Card",
              "type": "boolean"
            },
            "changeDueAmount": {
              "description": "Amount of change given to guest.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "overrideARCreditLimit": {
              "description": "Flag to override account receivable credit limit",
              "type": "boolean"
            },
            "applyCurrencyTaxes": {
              "description": "Flag to indicate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
              "type": "boolean"
            },
            "vATOffset": {
              "description": "Flag to indicate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
              "type": "boolean"
            },
            "action": {
              "description": "Payment action to know from where the payment has been made.",
              "$ref": "#/definitions/postPaymentActionType"
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            },
            "reservationId": {
              "$ref": "#/definitions/reservationId"
            },
            "generateFiscalPayload": {
              "description": "Flag to indicate if a fiscal payload should be generated for the Payment.",
              "type": "boolean"
            },
            "fiscalTerminalId": {
              "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
              "type": "string"
            },
            "originalInvoice": {
              "description": "User-defined original invoice number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "invoiceType": {
              "description": "Type of invoice specified in the originalInvoice field.",
              "type": "string",
              "minLength": 0,
              "maxLength": 10
            }
          }
        },
        "advanceDeposit": {
          "description": "Flag to indicate if the advance bill is being posted from deposits prior to check-in",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postedBillingPayment": {
      "type": "object",
      "description": "Response notifying if the posting of a payment to a reservation was successful.",
      "properties": {
        "postings": {
          "description": "List of Postings produced by Billing Payment Request.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postingActivityDetail": {
      "type": "object",
      "description": "Response to the request to get financial details for a Posting Activity. This will return the before and after values for the transactions which were changed.",
      "properties": {
        "details": {
          "description": "The details of the changes made during the activity.",
          "$ref": "#/definitions/postingActivityDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postingActivityDetailType": {
      "type": "object",
      "description": "Details of a Posting transaction change.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "activity": {
          "description": "Information of the Activity that changed the Posting transaction.",
          "$ref": "#/definitions/activityLogType"
        },
        "oldInfo": {
          "description": "The original information prior to the change.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "newInfo": {
          "description": "The new information after the change.",
          "$ref": "#/definitions/summaryPostingsType"
        }
      }
    },
    "activityLogType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "module": {
          "type": "string"
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "refActionId": {
          "type": "number"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "machineStation": {
          "type": "string"
        },
        "croCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "actionDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "iPAddress": {
          "description": "The IP Address of the machine that performed the activity",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "redeemPrepaidCards": {
      "type": "object",
      "description": "Request type for Prepaid card redeem amount request",
      "properties": {
        "criteria": {
          "description": "Criteria for Prepaid card redeem request.",
          "$ref": "#/definitions/redeemPrepaidCardCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "redeemPrepaidCardCriteriaType": {
      "type": "object",
      "description": "Criteria for Prepaid card redeem request.",
      "properties": {
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation id of the reservation",
          "$ref": "#/definitions/reservationId"
        },
        "prepaidCardRedemptions": {
          "description": "Prepaid Card redemption information used to post as payment.",
          "$ref": "#/definitions/prepaidCardRedemptionsType"
        },
        "cashierId": {
          "description": "Numeric ID of the cashier.",
          "$ref": "#/definitions/cashierId"
        },
        "folioView": {
          "description": "Folio Window.",
          "type": "integer"
        }
      }
    },
    "redeemPrepaidCardsStatus": {
      "type": "object",
      "description": "Response for redeem Prepaid cards request.",
      "properties": {
        "prepaidCards": {
          "description": "Prepaid Card details type.",
          "$ref": "#/definitions/prepaidCardsInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCardsInfoType": {
      "type": "array",
      "description": "Prepaid card info object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardInfoType"
      }
    },
    "prepaidCardInfoType": {
      "type": "object",
      "description": "Detailed information about the prepaid card.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the prepaid card.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "The reservation name id where the transaction is associated.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNo": {
          "description": "Prepaid card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "initialLoadDate": {
          "description": "Initial Load Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issueDate": {
          "description": "Issue Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "validUntil": {
          "description": "Validity of the prepaid card amount.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiryDate": {
          "description": "Expiry Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCredit": {
          "description": "Initial Credit of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalDebit": {
          "description": "Total Debt of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCredit": {
          "description": "Total Credit of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "availableCashoutAmount": {
          "description": "Available cashout of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservedAmount": {
          "description": "Reserved Amount of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "prepaidCardTransactions": {
          "description": "List of prepaid card transactions.",
          "$ref": "#/definitions/prepaidCardTransactionsType"
        },
        "vendorTransactionsActive": {
          "description": "Indicate if vendor transactions are included on the transactions list.",
          "type": "boolean"
        },
        "operaTransactionsActive": {
          "description": "Indicate if opera transactions are included on the transactions list.",
          "type": "boolean"
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardTransactionsType": {
      "type": "array",
      "description": "Prepaid card transaction details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardTransactionInfoType"
      }
    },
    "prepaidCardTransactionInfoType": {
      "type": "object",
      "description": "Prepaid Card Transactions",
      "properties": {
        "amount": {
          "description": "Prepaid card transaction amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "type": {
          "description": "Prepaid card transaction type.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        },
        "date": {
          "description": "Prepaid card transaction date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Opera transaction number.",
          "type": "integer"
        },
        "vendorTransactionNo": {
          "description": "Vendor transaction number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "profileId": {
          "description": "The guest name id associated to the card.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "source": {
          "description": "Prepaid card transaction source.",
          "$ref": "#/definitions/prepaidCardTransactionSourceType"
        },
        "cancellable": {
          "description": "Indicate if the transaction is cancellable or not.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardTransactionSourceType": {
      "type": "string",
      "description": "Vendor transaction source type.",
      "enum": [
        "Opera",
        "Vendor"
      ]
    },
    "revenueBucketTotals": {
      "type": "object",
      "description": "Response object for revenue bucket totals for a reservation.",
      "properties": {
        "revenueBucketsInfo": {
          "description": "List of revenue bucket totals.",
          "$ref": "#/definitions/revenueBucketTotalsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueBucketTotalsType": {
      "type": "array",
      "description": "List of revenue bucket total details",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueBucketTotalType"
      }
    },
    "revenueBucketTotalType": {
      "type": "object",
      "description": "reservation revenue bucket total information.",
      "properties": {
        "revenueBucketCode": {
          "description": "Holds Revenue Bucket Type details.",
          "$ref": "#/definitions/revenueBucketCodeType"
        },
        "totalAmount": {
          "description": "Total amount related to the bucket.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "revenueBucketCodeType": {
      "type": "object",
      "description": "This gives detailed information about a trx code arrangement.",
      "properties": {
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "transactionCodes": {
          "description": "Collection of transaction codes which form the trx code arrangement.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueBucketType": {
          "description": "This holds Revenue Bucket Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "pointsEligible": {
          "description": "Bucket is eligible for membership points",
          "type": "boolean"
        },
        "bucketValue": {
          "description": "Stores the default value for the arrangement code for revenue buckets in order to group transaction codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "bucketType": {
          "description": "Flag to identify Fiscal related bucket types.",
          "$ref": "#/definitions/bucketTypeType"
        }
      }
    },
    "bucketTypeType": {
      "type": "string",
      "description": "Fiscal Bucket Type.",
      "enum": [
        "Default",
        "Fiscal"
      ]
    },
    "reverseCertificatePostingsCriteria": {
      "type": "object",
      "description": "Request to reverse the certificate postings of transactions.",
      "properties": {
        "reverseCriteria": {
          "description": "Criteria for reversing the certificate postings of transactions.",
          "$ref": "#/definitions/reverseCertificatePostingsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reverseCertificatePostingsCriteriaType": {
      "type": "object",
      "description": "Criteria type for reversing certificate postings of transactions.",
      "properties": {
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationNameId": {
          "description": "Reservation name id to which reverse certificate postings to be done.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "reasonCode": {
          "description": "The reason code for the deletion.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "routingInstructionsDetails": {
      "type": "object",
      "description": "Response object containing routing instructions for a reservation.",
      "properties": {
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "routingInfoListType": {
      "type": "array",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding instructions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/routingInfoType"
      }
    },
    "routingInfoType": {
      "type": "object",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "properties": {
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            }
          }
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        }
      }
    },
    "routingInstructionsToChange": {
      "type": "object",
      "description": "Request when changing a routing instruction.",
      "properties": {
        "criteria": {
          "description": "Transactions and scheduled instructions included in this routing element will be replaced with the new element.",
          "type": "object",
          "properties": {
            "folio": {
              "description": "Folio routing type.",
              "type": "object",
              "properties": {
                "guestInfo": {
                  "description": "Guest details",
                  "type": "object",
                  "properties": {
                    "profileIdList": {
                      "description": "Unique identifiers for the Profile for both internal and external systems.",
                      "$ref": "#/definitions/profileIdList"
                    }
                  }
                },
                "payeeInfo": {
                  "$ref": "#/definitions/payeeInfoType"
                },
                "aRNumber": {
                  "description": "Accounts Receivable.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                },
                "paymentMethod": {
                  "type": "string",
                  "maxLength": 2000
                },
                "folioWindowNo": {
                  "type": "integer"
                }
              }
            },
            "room": {
              "description": "Room routing type.",
              "type": "object",
              "properties": {
                "roomNumber": {
                  "description": "Room number to route the instructions.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "guestNameId": {
                  "description": "Guest unique identifier to which the instruction will be routed.",
                  "$ref": "#/definitions/uniqueID_Type"
                },
                "guestDisplayName": {
                  "description": "Display Name for the guest.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                },
                "reservationNameId": {
                  "description": "Reservation name id to which the instruction will be routed.",
                  "$ref": "#/definitions/uniqueID_Type"
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                }
              }
            },
            "comp": {
              "description": "Comp Accounting Routing Info",
              "type": "object",
              "properties": {
                "compAccountingInfo": {
                  "$ref": "#/definitions/compAccountingType"
                },
                "compRequestInfo": {
                  "$ref": "#/definitions/compRoutingRequestType"
                },
                "payeeInfo": {
                  "$ref": "#/definitions/payeeInfoType"
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                },
                "folioWindowNo": {
                  "type": "integer"
                }
              }
            },
            "request": {
              "description": "Comp Accounting Request routing",
              "type": "object",
              "properties": {
                "compRequestInfo": {
                  "$ref": "#/definitions/compRoutingRequestType"
                },
                "instructions": {
                  "description": "Set of routing instructions associated to this routing type.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/routingInstructionType"
                  }
                }
              }
            },
            "hotelId": {
              "description": "Hotel context of the reservation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "reservationId": {
              "description": "Unique ID of a reservation.",
              "$ref": "#/definitions/reservationId"
            },
            "refreshFolio": {
              "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
              "type": "boolean"
            },
            "retrievePostingsForRoomRouting": {
              "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
              "type": "boolean"
            },
            "newRoutingInfo": {
              "description": "Transactions and schedule instructions which will replace the base element.",
              "$ref": "#/definitions/routingInfoType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedRoutingInstructions": {
      "type": "object",
      "description": "Response when changing a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the modified routing instruction in case of room routing instruction.",
      "properties": {
        "postingsForRoomRouting": {
          "description": "Transaction details along with the transaction code information.",
          "$ref": "#/definitions/postingsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postingsInfoType": {
      "type": "object",
      "description": "This type is useful to hold the transaction details along the transaction code information.",
      "properties": {
        "transactions": {
          "description": "The details regarding the transaction(Posting).",
          "$ref": "#/definitions/detailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        }
      }
    },
    "roomRoutingPostings": {
      "type": "object",
      "properties": {
        "postingsForRoomRouting": {
          "description": "Transaction details along with the transaction code information.",
          "$ref": "#/definitions/postingsInfoType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "routingInstructions": {
      "type": "object",
      "description": "Request to create a routing instruction.",
      "properties": {
        "criteria": {
          "description": "Reservation routing criteria defining the routing information to be created.",
          "$ref": "#/definitions/resvRoutingCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "resvRoutingCriteriaType": {
      "type": "object",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "properties": {
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            }
          }
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel context of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Unique ID of a reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "retrievePostingsForRoomRouting": {
          "description": "This flag indicates if postings that can be refreshed need to be part of the response when a routing instruction is created, updated or deleted.",
          "type": "boolean"
        }
      }
    },
    "createdRoutingInstructions": {
      "type": "object",
      "description": "Response when creating a routing instruction. It may optionally return a list of postings which are eligible for transfer as per the new routing instruction in case of room routing instruction.",
      "properties": {
        "postingsForRoomRouting": {
          "description": "Transaction details along with the transaction code information.",
          "$ref": "#/definitions/postingsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositRefundEligibleCheck": {
      "type": "object",
      "description": "Response for the refund deposit payment.",
      "properties": {
        "isDepositRefundValid": {
          "description": "Is reservation valid for deposit refund.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "splitDepositTransaction": {
      "type": "object",
      "description": "Request to split deposit transaction for a reservation.",
      "properties": {
        "depositTransaction": {
          "description": "Deposit transaction info to split.",
          "$ref": "#/definitions/depositTransactionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositTransactionType": {
      "type": "object",
      "description": "Deposit transaction of a reservation.",
      "properties": {
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation id of the reservation",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "transactionNo": {
          "description": "The unique transaction number associated with transaction group.",
          "type": "number"
        },
        "splitAmount": {
          "description": "The amount by which the deposit transaction has to be split.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "originalAmount": {
          "description": "The original deposited amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "splitDepositTransactionStatus": {
      "type": "object",
      "description": "Response after spliting deposit transaction.",
      "properties": {
        "transactions": {
          "description": "Collection of transactions.",
          "$ref": "#/definitions/transactionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioToWindow": {
      "type": "object",
      "description": "Request for transaction folio(s) to specific window",
      "properties": {
        "criteria": {
          "description": "Folio(s) transfer criteria.",
          "$ref": "#/definitions/folioTransferCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTransferCriteriaType": {
      "type": "object",
      "description": "Folio(s) Transfer Criteria type to be used for folio transfer request.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation id from where folio will be transfered.",
          "$ref": "#/definitions/reservationId"
        },
        "targetFolioWindowNo": {
          "description": "Folio Window Number to where transactions will be transfered.",
          "type": "integer"
        },
        "folioList": {
          "description": "List of folios to be transfered.",
          "type": "array",
          "maxItems": 7,
          "items": {
            "type": "integer"
          }
        },
        "folioStyle": {
          "description": "Folio style of the folios to be transferred.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "transactionToWindow": {
      "type": "object",
      "description": "Request for transaction transfer",
      "properties": {
        "criteria": {
          "description": "Transaction transfer criteria.",
          "$ref": "#/definitions/trxTransferCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxTransferCriteriaType": {
      "type": "object",
      "description": "Transactions can be transferred to either a FolioWindow Number of the same reservation or to another Inhouse Reservation.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "description": "Reservation id from where transactions will be transfered.",
          "$ref": "#/definitions/reservationIdList"
        },
        "membershipIdNo": {
          "description": "Unique ID of Membership.",
          "type": "integer"
        },
        "targetFolioWindowNo": {
          "description": "Folio Window Number to where transactions will be transfered.",
          "type": "integer"
        },
        "targetReservationIdList": {
          "description": "Reservation Id where the transactions will be transferred.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "transactionList": {
          "description": "List of transactions to be transfered.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "transferTransactionToWindow": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "transactions": {
          "description": "Generated transaction number on destination window.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioToVoid": {
      "type": "object",
      "description": "Request to Void a Guest Folio when the Void Functionality is active.",
      "properties": {
        "criteria": {
          "description": "Criteria for Voiding a Guest Folio.",
          "$ref": "#/definitions/voidFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "voidFolioCriteriaType": {
      "type": "object",
      "description": "Criteria for Voiding a Folio.",
      "properties": {
        "hotelId": {
          "description": "Property where the Folio exists which has to be voided.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation to which the Folio belongs.",
          "$ref": "#/definitions/reservationId"
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "associatedBillInfo": {
          "description": "Bill Information of the original bill for which the Credit Bill is being generated .",
          "$ref": "#/definitions/associatedBillInfoType"
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioSeqNo": {
          "description": "Unique sequence number. Used to identify the current folio tax record.",
          "type": "number"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "fiscalCreditBillQueueName": {
          "description": "Folio Queue name to generate a credit bill for fiscal service.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is voided. This input is mandatory when the parameter Void Bill Reason is active for Void Bills",
          "$ref": "#/definitions/folioReasonType"
        }
      }
    },
    "voidedFolio": {
      "type": "object",
      "description": "Response to the request for voiding a Guest Folio.",
      "properties": {
        "fiscalCreditBillFolio": {
          "description": "Generated fiscal credit bill information.",
          "$ref": "#/definitions/folioWindowType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositTransferCriteria": {
      "type": "object",
      "description": "Request to transfer a deposit amount from one reservation to one or more reservations.",
      "properties": {
        "criteria": {
          "description": "Criteria for the deposit transfer between reservations.",
          "$ref": "#/definitions/depositTransferCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "depositTransferCriteriaType": {
      "type": "object",
      "description": "Criteria type for transfer of deposit amount from one reservation to one or more reservation(s).",
      "properties": {
        "hotelId": {
          "description": "Property where the reservation exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "The unique Id of the source reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "toReservations": {
          "description": "The reservation id and the amount to transfer detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/depositTransferToReservationType"
          }
        },
        "comments": {
          "description": "User Comments for the transfer operation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "depositTransferToReservationType": {
      "type": "object",
      "description": "Deposit Transfer detail for the target reservation.",
      "properties": {
        "reservationId": {
          "description": "The unique ID of the reservation to which the deposit has to be transferred.",
          "$ref": "#/definitions/reservationId"
        },
        "transferAmount": {
          "description": "The deposit amount which has to be transferred to this reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "reservationTransaction": {
      "type": "object",
      "description": "Request to transfer a transaction(s) to a reservation. In the criteria, the target Reservation Id is required for the transfer.",
      "properties": {
        "criteria": {
          "description": "Transaction transfer criteria. Target Reservation Id is required.",
          "$ref": "#/definitions/reservationTrxTransferCriteria"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationTrxTransferCriteria": {
      "type": "object",
      "description": "Criteria for transaction transfer. The choice element should have the target Reservation Id.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "description": "Reservation id from where transactions will be transfered.",
          "$ref": "#/definitions/reservationIdList"
        },
        "membershipIdNo": {
          "description": "Unique ID of Membership.",
          "type": "integer"
        },
        "targetFolioWindowNo": {
          "description": "Folio Window Number to where transactions will be transfered.",
          "type": "integer"
        },
        "targetReservationIdList": {
          "description": "Reservation Id where the transactions will be transferred.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "transactionList": {
          "description": "List of transactions to be transfered.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "hotelRevenueDetails": {
      "type": "object",
      "description": "Response object for hotel room revenue for all HHonors redemption reservation.",
      "properties": {
        "hotelRevenue": {
          "description": "Hotel Room Revenue type.",
          "$ref": "#/definitions/hotelRevenueType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRevenueType": {
      "type": "object",
      "description": "Hotel revenue type.",
      "properties": {
        "roomRevenue": {
          "description": "Total room revenue for this hotel.",
          "type": "number"
        },
        "houseRevenue": {
          "description": "Total house revenue for this hotel.",
          "type": "number"
        },
        "compRevenue": {
          "description": "Total comp revenue for this hotel.",
          "type": "number"
        },
        "occupiedRooms": {
          "description": "Total occupied revenue for this hotel.",
          "type": "number"
        },
        "houseRooms": {
          "description": "Total house rooms for this hotel.",
          "type": "number"
        },
        "compRooms": {
          "description": "Total comp rooms for this hotel.",
          "type": "number"
        },
        "zeroRoomsRevenue": {
          "description": "Total zero rooms revenue for this hotel.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The base currency code for this hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "billingInstructionCodes": {
      "type": "object",
      "properties": {
        "transactionCodes": {
          "description": "Set of Transaction Code results.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "linkReservationPackageAllowance": {
      "type": "object",
      "description": "Method to create package allowance link from a source reservation to the target reservation.",
      "properties": {
        "hotelId": {
          "description": "Property code of the source and target reservations.",
          "$ref": "#/definitions/codeType"
        },
        "linkFromReservationId": {
          "description": "Reservation Id which is the source reservation for creating package link.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "linkToReservationId": {
          "description": "Reservation Id which is the target reservation for creating package link.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "consumeSharedAllowances": {
          "description": "If set to TRUE, the source reservation contributes its allowance(s) to the linked allowance pool and is able to draw from the allowances of the target reservation and/or any other source rooms linked to the target room.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postingsForRefresh": {
      "type": "object",
      "description": "Response object that lists the transactions that can be refreshed when a routing instruction set is refreshed.",
      "properties": {
        "postingsForRoomRouting": {
          "description": "Transaction details along with the transaction code information.",
          "$ref": "#/definitions/postingsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomRoutingRefresh": {
      "type": "object",
      "description": "The request object for processing refreshing of a routing instruction set. This operation transfers the postings to the respective reservation as per the routing instruction set which is created, edited, deleted or refreshed.",
      "properties": {
        "roomRoutingRefreshCriteria": {
          "description": "Criteria to process room routing refresh.",
          "$ref": "#/definitions/roomRoutingRefreshCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomRoutingRefreshCriteriaType": {
      "type": "object",
      "description": "Criteria for refreshing the routing instruction set.",
      "properties": {
        "hotelId": {
          "description": "Property code where the routing instruction set exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "resvNameId": {
          "description": "Source reservation id of the routing instruction set.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "targetResvNameId": {
          "description": "Target reservation id of the routing instruction set.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "originalTargetResvNameId": {
          "description": "Old reservation id of the routing instruction set after it is edited.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "List of transaction number for which the details are required.",
          "$ref": "#/definitions/routingInstructionStatusType"
        },
        "fromBothResvs": {
          "description": "Flag to indicate whether to fetch transaction from both reservations.",
          "type": "boolean"
        },
        "transactions": {
          "description": "Unique Transaction Number of the transaction(posting) which need to be transferred.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "instructions": {
          "description": "Set of routing instructions associated to this routing type.",
          "$ref": "#/definitions/routingInstructionType"
        }
      }
    },
    "routingInstructionStatusType": {
      "type": "string",
      "description": "Routing instruction set is deleted.",
      "enum": [
        "RoutingInstructionNew",
        "RoutingInstructionEdited",
        "RoutingInstructionRemoved"
      ]
    },
    "storedFolioDetailsInfo": {
      "type": "object",
      "description": "Response object for fetch stored folio details operation",
      "properties": {
        "storedFolioDetails": {
          "description": "details of the Stored Folio",
          "$ref": "#/definitions/storedFolioDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "storedFolioDetailsType": {
      "type": "object",
      "description": "Stored Folio Details type.Folio can be printed/viewed without re-generation.",
      "properties": {
        "folioReportURL": {
          "description": "Folio Report URL.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioFileName": {
          "description": "Name of the Stored Folio file.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reportStatus": {
          "description": "Report status. Report status can be Success",
          "$ref": "#/definitions/statusType"
        }
      }
    },
    "statusType": {
      "type": "string",
      "description": "Status of the batch process.",
      "enum": [
        "Success",
        "Error",
        "Running",
        "Stopped",
        "Warning",
        "Failed",
        "Started",
        "CompletedWithLogs"
      ]
    },
    "storedFolioDetails": {
      "type": "object",
      "description": "Request object to update stored folio details.",
      "properties": {
        "storedFolioDetails": {
          "description": "Stored folio details type.",
          "$ref": "#/definitions/storedFolioDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postSupplementalFolio": {
      "type": "object",
      "description": "Request to post a Supplemental Folio for an existing Folio. Debit Bill ( Supplemental Folio ) Functionality parameter is required",
      "properties": {
        "criteria": {
          "description": "Criteria for creating the Supplemental Folio. This should include all charges and payments for the Supplemental Folio.",
          "$ref": "#/definitions/supplementalFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "supplementalFolioCriteriaType": {
      "type": "object",
      "description": "Criteria for posting the Supplemental Folio. Includes charges and payments.",
      "properties": {
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        },
        "folioNameValue": {
          "description": "Custom Folio Name Value Informatoin to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "trxServiceType": {
          "description": "Transaction service type which the Folio is being associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "originalFolio": {
          "description": "Original Folio details. This is the folio for which a Supplemental Folio is required.",
          "$ref": "#/definitions/folioType"
        }
      }
    },
    "postSupplementalFolioStatus": {
      "type": "object",
      "description": "Response for the request to create Supplemental Folio.",
      "properties": {
        "folioWindow": {
          "description": "Information regarding the new Supplemental Folio created.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioWindowType"
          }
        },
        "payments": {
          "description": "Deposit payment information of the payment which was posted.",
          "$ref": "#/definitions/detailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionCodes": {
      "type": "object",
      "description": "Response that contains either the Transaction Code list if fetch was successful or error(s) if not.",
      "properties": {
        "trxCodes": {
          "description": "List of TransactionCode. Contains information on Transaction Code, TransactionCode Description Its Group and Sub Group.",
          "$ref": "#/definitions/trxCodesPostingInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxCodesPostingInfoType": {
      "type": "array",
      "description": "List of TransactionCodes",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxPostingInfoType"
      }
    },
    "trxPostingInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        },
        "price": {
          "description": "Default price of that transaction code.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "minimumPrice": {
          "description": "Minimum quantity needs to be posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "maximumPrice": {
          "description": "Maximum quantity limitation of posting.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "folioTransactionDetails": {
      "type": "object",
      "description": "Response for the fetch transaction details request. Detail information regarding the folio transaction will be returned",
      "properties": {
        "transactions": {
          "description": "The details regarding the transaction(Posting).",
          "$ref": "#/definitions/detailPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guestsTransactions": {
      "type": "object",
      "description": "Lists a summary of transactions of guests.",
      "properties": {
        "reservationFolioInformation": {
          "description": "Folio details for the requested reservation/s.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationFolioInfoType"
          }
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response folio.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionsAdjustment": {
      "type": "object",
      "description": "Request to adjust a transaction. In order to adjust a transaction, a valid amount or percentage is required. A valid reason code and reason text is also required. Only negative adjustments are done. The adjust process will post a new negative transaction for the same transaction code for the current day.",
      "properties": {
        "criteria": {
          "description": "Criteria for the transaction adjustment. To adjust a transaction, a valid amount or percentage and a valid reason code and text are required.",
          "$ref": "#/definitions/trxAdjustCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxAdjustCriteriaType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "details": {
          "description": "The criteria required for the transaction adjustment. Adjustments can be done either by an amount or by a percentage. Atleast one should be defined.",
          "$ref": "#/definitions/adjustmentDetailsType"
        },
        "incomeAuditDate": {
          "description": "Date of the Audit. This is used when postings are being created using the Income Audit functionality.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "aRAccountNo": {
          "description": "The AR Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "aRInvoiceNo": {
          "description": "The AR Invoice Number for the Account.",
          "type": "number"
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "adjustmentDetailsType": {
      "type": "object",
      "description": "Details regarding adjustments of transactions. Adjustment of transactions requires a amount/percentage and the adjustment reason.",
      "properties": {
        "amount": {
          "description": "The Amount by which the transaction has to be adjusted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "description": "The percentage by which the transaction has to be adjusted.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "reasonCode": {
          "description": "The reason code for the adjustment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reasonDescription": {
          "description": "The reason text for the adjustment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "department": {
          "description": "The department name or ID with which the adjustment is associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "customChargeExemptionsType": {
      "type": "array",
      "description": "List of Custom Charge Exemptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionType"
      }
    },
    "customChargeExemptionType": {
      "type": "object",
      "description": "Contains custom charges exemption information.",
      "properties": {
        "customChargesExemption": {
          "description": "Contains exemption code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "customChargeQuantity": {
          "description": "Contains exemption quantity for the stay. When this value is configured, daily exemption quantities are not permitted.",
          "$ref": "#/definitions/customChargeQuantityType"
        },
        "customChargeDates": {
          "description": "Contains exemption detail information for each date.",
          "$ref": "#/definitions/customChargeExemptionDatesType"
        },
        "excludedDates": {
          "description": "Contains list of dates which are not valid for custom charge exemptions.",
          "$ref": "#/definitions/excludedDatesType"
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        }
      }
    },
    "customChargeQuantityType": {
      "type": "object",
      "description": "Contains quantity of custom charge exemptions.",
      "properties": {
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        },
        "available": {
          "description": "Indicates if Custom Charges Exemption information is editable.",
          "type": "boolean"
        },
        "guests": {
          "type": "array",
          "description": "List of guests.",
          "items": {
            "$ref": "#/definitions/customChargeGuestInfoType"
          }
        }
      }
    },
    "customChargeExemptionDatesType": {
      "type": "array",
      "description": "Contains List of Custom Charge Exemption information for a day.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionDateType"
      }
    },
    "customChargeExemptionDateType": {
      "type": "object",
      "description": "Contains Custom Charge Exemption information for a day.",
      "properties": {
        "date": {
          "description": "Contains Custom Charge Exemption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        },
        "guests": {
          "type": "array",
          "description": "List of guests.",
          "items": {
            "$ref": "#/definitions/customChargeGuestInfoType"
          }
        }
      }
    },
    "excludedDatesType": {
      "type": "array",
      "description": "Contains list of dates which are valid for custom charge exemptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/excludedDateType"
      }
    },
    "excludedDateType": {
      "type": "object",
      "description": "Specifies all the enabled dates.",
      "properties": {
        "date": {
          "description": "Contains exclusion date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reason": {
          "description": "Contains reason for exclusion.",
          "$ref": "#/definitions/exclusionReasonType"
        }
      }
    },
    "exclusionReasonType": {
      "type": "string",
      "description": "Custom Charge has already been Processed for this date within the reservation stay.",
      "enum": [
        "NotConfigured",
        "CustomChargeProcessed"
      ]
    },
    "adjustedTransactions": {
      "type": "object",
      "description": "Response for the adjustment of transactions request. Contains any errors or warnings.",
      "properties": {
        "serviceRecoveryAdjustments": {
          "description": "List of service recovery adjustment.This will only return if Adjust is service recovery type.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionToSplit": {
      "type": "object",
      "description": "Request to split a transaction on a reservation. Splitting of transactions requires a list of transactions and a valid amount or a percentage by which the amount can be split. Based on parameters, certain transactions cannot be split. Transaction which are included in an invoice cannot be split Transactions where the generates resides elsewhere(reservation or window) cannot be split. Automatically generated transactions such as taxes, cannot be split by itself. Deposits which were part of a deposit folio cannot be split. After the split is done the transaction resides on the same folio window as the original transaction.",
      "properties": {
        "criteria": {
          "description": "Transaction Split criteria. An Amount or a Percentage is required along with the transactions to split.",
          "$ref": "#/definitions/trxSplitCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxSplitCriteriaType": {
      "type": "object",
      "description": "Criteria which should be used for Splitting a financial transaction which belongs to a reservation.",
      "properties": {
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "splitDetails": {
          "description": "The criteria required for the transaction splitting. Splitting can be done either by an amount or by a percentage. Atleast one should be defined.",
          "type": "object",
          "properties": {
            "amount": {
              "description": "The Amount by which the transaction has to be split.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "percentage": {
              "description": "The percentage by which the transaction has to be split.",
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "quantity": {
              "description": "The quantity to split. This can be used only if the original quantity of the transaction(s) was > 1.",
              "type": "integer"
            }
          }
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "transactionToSplitAndTransfer": {
      "type": "object",
      "description": "Request to split a transaction on a reservation and transfer the new transaction to a different reservation or a different window on the same reservation. Splitting of transactions requires a In-house target reservation, a list of transactions for a In-house reservation and a valid amount or a percentage by which the amount can be split. Based on parameters, certain transactions cannot be split. Transaction which are included in an invoice cannot be split Transactions where the generates resides elsewhere(reservation or window) cannot be split. Automatically generated transactions such as taxes, cannot be split by itself. Deposits which were part of a deposit folio cannot be split. After the split is done the transaction is transferred to the target reservation/window.",
      "properties": {
        "criteria": {
          "description": "Transaction Split and Transfer criteria. A target reservation or a target window, and an Amount or a Percentage is required along with the transactions to split.",
          "$ref": "#/definitions/trxSplitAndTransferCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxSplitAndTransferCriteriaType": {
      "type": "object",
      "description": "Type to define the criteria for Splitting and Transferring the new transaction.",
      "properties": {
        "hotelId": {
          "description": "Property code where the reservation transaction exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionList": {
          "description": "The unique transaction number of this transaction.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "splitDetails": {
          "description": "The criteria required for the transaction splitting. Splitting can be done either by an amount or by a percentage. Atleast one should be defined.",
          "type": "object",
          "properties": {
            "amount": {
              "description": "The Amount by which the transaction has to be split.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "percentage": {
              "description": "The percentage by which the transaction has to be split.",
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "quantity": {
              "description": "The quantity to split. This can be used only if the original quantity of the transaction(s) was > 1.",
              "type": "integer"
            }
          }
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "targetReservationIdList": {
          "description": "Reservation Id where the new transactions will be transferred after the split.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "targetFolioWindowNo": {
          "description": "Folio Window Number to where the new transactions , after split, will be transfered.",
          "type": "integer"
        }
      }
    },
    "validatedTransactionCode": {
      "type": "object",
      "description": "Response notifying if transaction code is valid.",
      "properties": {
        "hotelId": {
          "description": "Hotel context where the Transaction Code will be validated.",
          "$ref": "#/definitions/codeType"
        },
        "trxCode": {
          "description": "Transaction Code.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTransactionCriteria": {
      "type": "object",
      "description": "Request object to submit a comp transaction to gaming system",
      "properties": {
        "hotelId": {
          "description": "Hotel code.",
          "$ref": "#/definitions/codeType"
        },
        "trxNo": {
          "description": "Transaction Number for which request is being submitted.",
          "type": "number"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "billingCharge": {
      "type": "object",
      "description": "Request to edit a billing charge information.",
      "properties": {
        "criteria": {
          "description": "Criteria for the charge information to be edited.",
          "$ref": "#/definitions/changeChargeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeChargeCriteriaType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionNo": {
          "description": "Transaction number of the posting being corrected.",
          "type": "number"
        },
        "price": {
          "description": "Corrected charge price.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Corrected posting quantity.",
          "type": "integer"
        },
        "reference": {
          "description": "Corrected user-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "Corrected user-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNumber": {
          "description": "Corrected Cheque number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "revenueDate": {
          "description": "Corrected Revenue Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "covers": {
          "description": "POS covers",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalDate": {
          "description": "Approval date of the posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "message": {
          "description": "External message coming from the vendor that explains the status of transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "billingChargeStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "gamingRequestStatusInfo": {
      "type": "object",
      "description": "Response object for fetch gaming info",
      "properties": {
        "statusInfo": {
          "description": "details of the guest request provided by the external system",
          "$ref": "#/definitions/gamingRequestStatusInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "gamingRequestStatusInfoType": {
      "type": "array",
      "description": "List of guest request status details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/gamingRequestStatusType"
      }
    },
    "gamingRequestStatusType": {
      "type": "object",
      "description": "Type that holds guest request status details.",
      "properties": {
        "hotelId": {
          "description": "Hotel code corresponding to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "statusCode": {
          "description": "Status code from the External System..",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "status": {
          "description": "Status of the request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "messageId": {
          "description": "Message Id from the External System.",
          "type": "integer"
        },
        "messageText": {
          "description": "Message sent from the External System regarding the status of this request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "requestDate": {
          "description": "Date the request was sent.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "billingPaymentToChange": {
      "type": "object",
      "description": "Request to change a payment posting.",
      "properties": {
        "criteria": {
          "description": "Criteria for the payment information to be edited.",
          "$ref": "#/definitions/changePaymentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changePaymentCriteriaType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionNo": {
          "description": "Transaction number of the payment being corrected.",
          "type": "number"
        },
        "reference": {
          "description": "Corrected user-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "Corrected user-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNumber": {
          "description": "Corrected Cheque number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "covers": {
          "description": "POS covers",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "detachPolicyApplyCriteria": {
      "type": "object",
      "description": "Request to detach a deposit payment from a Deposit Policy on a reservation.",
      "properties": {
        "criteria": {
          "description": "Criteria for unlinking a Deposit Policy from an existing deposit payment.",
          "$ref": "#/definitions/policyApplyCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentReversalCriteria": {
      "type": "object",
      "description": "Request for posting payment reversal.",
      "properties": {
        "payment": {
          "description": "Information regarding the payment transaction to be reversed.",
          "$ref": "#/definitions/paymentReversalType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentReversalType": {
      "type": "object",
      "description": "Information regarding the payment transaction to be reversed.",
      "properties": {
        "hotelId": {
          "description": "Hotel context of the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionNo": {
          "description": "Unique identifier of the transaction to be reversed.",
          "type": "number"
        },
        "reasonCode": {
          "description": "The reason code for payment reversal.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "balanceInfoCriteria": {
      "type": "object",
      "description": "Response for the fetch balance request. This will contain the current balance for the criteria requested.",
      "properties": {
        "balance": {
          "description": "The total balance for the set of charges.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postings": {
          "description": "List of Postings produced for the set of charges.",
          "$ref": "#/definitions/summaryPostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transferCompTransactions": {
      "type": "object",
      "description": "Request type for comp transactions transfer.",
      "properties": {
        "criteria": {
          "description": "Comp transactions transfer criteria.",
          "type": "object",
          "properties": {
            "targetFolioNo": {
              "description": "Folio window number to where transactions will be transfered.",
              "type": "integer"
            },
            "transactionList": {
              "description": "List of transactions to be transfered.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "number"
              }
            },
            "cashierId": {
              "$ref": "#/definitions/cashierId"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchZeroBalanceCheckoutReservation": {
      "type": "object",
      "description": "Request type for batch zero balance checkout.",
      "properties": {
        "criteria": {
          "description": "Criteria for batch zero balance checkout.",
          "$ref": "#/definitions/checkoutZeroBalanceReservationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkoutZeroBalanceReservationType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "batchZeroBalanceCheckoutDetails": {
      "type": "object",
      "description": "Response for batch zero balance check out.",
      "properties": {
        "processId": {
          "description": "Batch process identifier.",
          "$ref": "#/definitions/stringLength40"
        },
        "resvCount": {
          "description": "Zero balance Reservations count identifier.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "postRoomAndTaxForDayUse": {
      "type": "object",
      "properties": {
        "reservationId": {
          "description": "Reservation Id for which room and tax is to be posted.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
          "$ref": "#/definitions/cashierId"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roundingDifferenceAmount": {
      "type": "object",
      "description": "Response to the request to fetch the rounding difference for a payment amount.",
      "properties": {
        "roundingDifference": {
          "description": "The information regarding the rounding difference.",
          "$ref": "#/definitions/roundingDifferenceAmountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roundingDifferenceAmountType": {
      "type": "object",
      "description": "Information regarding the rounding difference which can be applied to the payment amount, based on the payment method.",
      "properties": {
        "hotelId": {
          "description": "Property where the payment is being posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "The amount for which the rounding is to be applied.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roundingDifference": {
          "description": "The rounding difference amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "folioReasonType": {
      "type": "object",
      "description": "Type for Folio Reason and Text.",
      "properties": {
        "code": {
          "description": "The Folio Reason Code.Currently Applicable only for Credit Bills.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "text": {
          "description": "The Folio Reason Text.Currently Applicable only for Credit Bills.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "financialPostingsNetVat": {
      "type": "object",
      "description": "Response for fetching the Posting Journal with Net and Vat breakdown.",
      "properties": {
        "financialPostings": {
          "description": "Journal entries of the response.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/financialPostingsNetVatType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "financialPostingsNetVatType": {
      "type": "object",
      "description": "Financial Postings with their Net and Vat breakup",
      "properties": {
        "posting": {
          "description": "Details of the primary posting.",
          "$ref": "#/definitions/detailPostingType"
        },
        "postingBreakdown": {
          "description": "Details of posting's breakdown.",
          "$ref": "#/definitions/postingBreakdownType"
        }
      }
    },
    "postingBreakdownType": {
      "type": "object",
      "description": "Details of a financial posting's breakdown.",
      "properties": {
        "grossAmount": {
          "description": "Gross amount of posting.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "netAmount": {
          "description": "Net amount of posting.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxes": {
          "type": "array",
          "description": "Taxes breakout associated to postings",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/generatePostingType"
          }
        }
      }
    },
    "generatePostingType": {
      "type": "object",
      "description": "Financial posting with their breakup",
      "properties": {
        "amount": {
          "description": "Gross amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionNo": {
          "description": "Transaction Number for which request is being submitted.",
          "type": "number"
        },
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "customChargeGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "profileId": {
          "description": "Unique profile identifier.",
          "$ref": "#/definitions/profileId"
        }
      }
    },
    "postFiscalInfoType": {
      "type": "object",
      "description": "FiscalInfo criteria type.",
      "properties": {
        "fiscalPayloadType": {
          "description": "Fiscal Payload Type.",
          "$ref": "#/definitions/payloadType"
        }
      }
    },
    "payloadType": {
      "description": "Fiscal Payload Type.",
      "type": "string",
      "enum": [
        "CheckOut",
        "FolioGeneration"
      ]
    },
    "awardPaymentDetails": {
      "type": "object",
      "description": "Request object for fetching a membership transaction.",
      "properties": {
        "awardType": {
          "type": "string",
          "description": "Type of award that is used to redeem points."
        },
        "voucherNo": {
          "type": "string",
          "description": "Voucher number of redeemed award."
        },
        "redeemAmount": {
          "description": "The value of amount or points that is being redeemed.",
          "type": "integer"
        },
        "pointsRequired": {
          "description": "The number of points that are redeemed for this award.",
          "type": "number"
        },
        "folioView": {
          "description": "Folio Window.",
          "type": "integer"
        },
        "billAmount": {
          "description": "A monetary amount representing the outstanding balance.",
          "type": "number"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationRoomOwnershipType": {
      "type": "string",
      "description": "Indicates if the assigned reservation room is an Owner/Referral or Regular room.",
      "enum": [
        "Owner",
        "Referral",
        "Regular"
      ]
    },
    "amountEligible": {
      "description": "List of eligible bill amounts for each folio.",
      "type": "object",
      "properties": {
        "amountEligibleInfo": {
          "type": "array",
          "description": "Retrieves eligible amount details in order to post redemption on a reservation folio <p><strong>OperationId:</strong> getEligibleBillAmount</p>",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/awardFolioInfo"
          }
        }
      }
    },
    "awardFolioInfo": {
      "type": "object",
      "description": "eligible amount that is allowed to pay with award payment",
      "properties": {
        "folioView": {
          "description": "Folio Window.",
          "type": "integer"
        },
        "eligibleBill": {
          "description": "Eligible Bill Amount",
          "type": "number"
        }
      }
    },
    "fiscalSupportingDocumentsResponse": {
      "type": "object",
      "description": "Response for the supporting documents.",
      "properties": {
        "supportingDocuments": {
          "description": "List of supporting documents.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/supportingDocumentType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index of the page being requested. If the index goes out of the bounds of the total set count, no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records the API should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "supportingDocumentType": {
      "type": "object",
      "description": "Supporting document details.",
      "properties": {
        "hotelId": {
          "description": "Unique ID of the hotel",
          "type": "string"
        },
        "documentDate": {
          "description": "Supporting document creation date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "documentNo": {
          "description": "Supporting document number.",
          "type": "integer"
        },
        "documentType": {
          "description": "Supporting document type.",
          "$ref": "#/definitions/fiscalSupportingDocumentType"
        },
        "documentCategory": {
          "description": "Supporting document category.",
          "$ref": "#/definitions/fiscalSupportingDocumentCategory"
        },
        "fiscalStatus": {
          "description": "OPERA Fiscal status.",
          "type": "string"
        },
        "roomId": {
          "description": "Room number of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "confirmationNo": {
          "description": "Confirmation number of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "resvNameId": {
          "description": "Reservation Name ID.",
          "type": "string"
        },
        "profileId": {
          "description": "Unique ID of the profile.",
          "type": "string"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/nameTypeType"
        },
        "reportModuleId": {
          "description": "The internal report ID of the Folio report which is to be used.",
          "type": "string"
        },
        "documentRefId": {
          "description": "The internal reference ID of the document type.",
          "type": "string"
        }
      }
    },
    "fiscalSupportingDocumentType": {
      "type": "string",
      "description": "Fiscal Supporting Document Type",
      "enum": [
        "InformationFolio",
        "ProformaFolio",
        "ConfirmationLetter"
      ]
    },
    "fiscalSupportingDocumentCategory": {
      "description": "Supporting document category.",
      "type": "string",
      "enum": [
        "Financial",
        "Reservation"
      ]
    },
    "postingTimeType": {
      "type": "object",
      "description": "Time of posting.",
      "properties": {
        "time": {
          "description": "Time of posting.",
          "type": "string",
          "format": "date-time"
        },
        "timezone": {
          "description": "Timezone associated with posting time.",
          "type": "string"
        }
      }
    },
    "fiscalSupportingDocumentCriteria": {
      "type": "object",
      "description": "Request to send supporting document to fiscal partner.",
      "properties": {
        "criteria": {
          "description": "Criteria for sending supporting document.",
          "$ref": "#/definitions/fiscalSupportingDocumentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalSupportingDocumentCriteriaType": {
      "type": "object",
      "description": "Criteria for sending supporting document to fiscal partner.",
      "properties": {
        "hotelId": {
          "description": "Unique ID of the hotel",
          "type": "string"
        },
        "documentNo": {
          "description": "Supporting document number.",
          "type": "integer"
        },
        "documentType": {
          "description": "Supporting document type.",
          "$ref": "#/definitions/fiscalSupportingDocumentType"
        }
      }
    },
    "creditCardInfo": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardNumberMasked": {
          "type": "string",
          "minLength": 10,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDateString": {
          "description": "Expiration date in string representation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "creditCardWallet": {
      "type": "object",
      "description": "Response to the credit card wallet request. The wallet contains all the credit cards used in OPERA for a profile/reservation.",
      "properties": {
        "creditCardInfoList": {
          "type": "array",
          "description": "Contains a list of credit cards.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/creditCardInfo"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioSplitInfoType": {
      "type": "object",
      "description": "Containsts the folio split posting information.",
      "properties": {
        "folioSplitType": {
          "description": "Contains the folio split type.",
          "$ref": "#/definitions/folioSplitType"
        },
        "revenue": {
          "description": "Revenue amount of the transactions.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payment": {
          "description": "Payment amount of the transactions.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Running balance of the transactions.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPostings": {
          "description": "Running total number of the transactions.",
          "type": "integer"
        }
      }
    },
    "folioSplitType": {
      "type": "string",
      "description": "Indicates the type of folio to be created on the window.",
      "enum": [
        "TAXTRX",
        "REVTRX"
      ]
    },
    "reservationVouchersType": {
      "type": "object",
      "description": "Vouchers information of a reservation.",
      "properties": {
        "vouchers": {
          "description": "List of vouchers associated with the reservation.",
          "type": "array",
          "maxItems": 2000,
          "items": {
            "$ref": "#/definitions/reservationVoucherType"
          }
        }
      }
    },
    "reservationVoucherType": {
      "type": "object",
      "description": "Reservation voucher detail.",
      "properties": {
        "amount": {
          "description": "The amount value of the voucher.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "status": {
          "description": "Reflect the current status of the voucher.",
          "type": "string",
          "enum": [
            "Print",
            "Reprint",
            "New",
            "Void"
          ]
        },
        "voucherNo": {
          "description": "Voucher no of the voucher",
          "type": "number"
        },
        "voucherDate": {
          "description": "Date of the voucher",
          "type": "string",
          "format": "date",
          "maxLength": 10
        },
        "reservationId": {
          "description": "Reservation identifier that will be used as the context of the available options.",
          "$ref": "#/definitions/reservationId"
        }
      }
    },
    "chargesAndPaymentsCriteria": {
      "type": "object",
      "description": "Request to post charges and payments on a reservation.",
      "properties": {
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/chargeCriteriaType"
          }
        },
        "payments": {
          "description": "The payment information to be posted.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/paymentCriteriaType"
          }
        },
        "cashierId": {
          "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
          "type": "number",
          "minimum": 0
        }
      }
    },
    "createProformaCriteriaType": {
      "type": "object",
      "description": "Criteria for creating Proforma transactions for a reservation. These transactions will be used by the Opera Proforma Report.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "description": "Reservation id for which the Proforma has to be created.",
          "$ref": "#/definitions/reservationIdList"
        },
        "responseInstruction": {
          "description": "Response instructions for the Proforma transactions creation. Possible values are None or Folio Summary. A Summary of the Proforma Folio can be returned, if requested.",
          "$ref": "#/definitions/proformaResponseInstructionType"
        }
      }
    },
    "proformaResponseInstructionType": {
      "type": "string",
      "description": "Response instructions for Proforma Creation.",
      "enum": [
        "None",
        "FolioSummary"
      ]
    },
    "reservationFolio": {
      "type": "object",
      "description": "Request to create a Proforma(folio) transactions for a reservation. The request generates the internal transactions required to create a Proforma report. After this request is called , the Opera Proforma report should be called so that these transactions can be used in the report. If the report is called without this request, the report will be incorrect and will not have the complete information. If the report is not used after this request, the internal transactions will be removed either by night audit or by the next request.",
      "properties": {
        "criteria": {
          "description": "Criteria to create a Proforma for a reservation.",
          "$ref": "#/definitions/createProformaCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationFolioInformation": {
      "type": "object",
      "description": "Response for the Create Proforma WS. After the proforma is created by this request, the Opera Proforma report should be called to generate the actual physical Proforma report. The response can have the summary of the Guests Proforma Folio, if requested.",
      "properties": {
        "reservationFolioInformation": {
          "description": "This type will return a summary Proforma Folio information in the response based on the Response Instruction flag passed in request.",
          "$ref": "#/definitions/reservationFolioInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bulkPrepaidCardCriteria": {
      "type": "object",
      "description": "Request type for bulk prepaid card creation/reload/redeem/removal process",
      "properties": {
        "criteria": {
          "description": "Criteria for creation/reload/redeem/removal of bulk prepaid cards.",
          "$ref": "#/definitions/bulkPrepaidCardCriteriaType"
        },
        "cardDetails": {
          "type": "array",
          "description": "List of card-specific details for creation/reload/redeem/removal of bulk prepaid cards.",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/bulkPrepaidCardDetailsType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bulkPrepaidCardCriteriaType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "postChargeToRoom": {
          "type": "boolean"
        },
        "saleCriteria": {
          "$ref": "#/definitions/saleCriteriaType"
        },
        "vendorInterfaceID": {
          "type": "number"
        },
        "cashierId": {
          "type": "number"
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        }
      }
    },
    "bulkPrepaidCardDetailsType": {
      "type": "object",
      "description": "Holds prepaid card information.",
      "properties": {
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        }
      }
    },
    "bulkPrepaidCardsType": {
      "type": "object",
      "description": "Response for posting bulk prepaid cards.",
      "properties": {
        "activatedCards": {
          "type": "array",
          "description": "List of card-specific details for prepaid cards that were successfully activated.",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/bulkPrepaidCardDetailsType"
          }
        },
        "unsuccessfulCards": {
          "type": "array",
          "description": "List of prepaid cards that were not activated with response information.",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/bulkPrepaidCardsStatusType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bulkPrepaidCardsStatusType": {
      "type": "object",
      "description": "Provides status information for bulk Prepaid Cards.",
      "properties": {
        "recordNumber": {
          "description": "A unique identifying value assigned to the card.",
          "type": "integer",
          "minLength": 0,
          "maxLength": 80
        },
        "responseCode": {
          "description": "Status of prepaid card.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "responseText": {
          "description": "Status of prepaid card.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "depositTransitionStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "folios": {
          "description": "This element returns any automatically generated folios during check-in, based on the Fetch Instruction \"AutoFolios\". When the parameter \"Auto Generate Credit Bill for Deposit upon Check In\" is enabled, during check-in credit bills are automatically generated for the deposits. The generated credit bill details are returned so that user can preview/print the folio. For some countries like Portugal, it is mandatory to print the folio and hence this information is needed",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioShortInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioShortInfoType": {
      "type": "object",
      "description": "This type contains information of generated folios.",
      "properties": {
        "folioNo": {
          "description": "Folio No of the bill generated.",
          "type": "number"
        },
        "folioType": {
          "description": "Folio type of the bill generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioView": {
          "description": "The folio window where the settlement is applied.",
          "type": "integer"
        },
        "autoGenerated": {
          "description": "Flag to indicate if the folio is auto generated or not.",
          "type": "boolean"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date"
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        }
      }
    },
    "batchVouchersType": {
      "type": "object",
      "properties": {
        "reservations": {
          "description": "List of unique reservation identifiers having deposits to process. Reservations should come from the same property.",
          "$ref": "#/definitions/reservations"
        }
      }
    },
    "batchVouchersCriteria": {
      "type": "object",
      "description": "Request type for batch vouchers.",
      "properties": {
        "criteria": {
          "description": "Criteria for batch vouchers.",
          "$ref": "#/definitions/batchVouchersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "coversInfoType": {
      "type": "object",
      "description": "Type to provide the information related to covers based on the transaction code and date.",
      "properties": {
        "transactionCode": {
          "description": "Unique transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionDescription": {
          "description": "Transaction description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "coversDate": {
          "description": "Date on which needs to be searched for covers.",
          "type": "string",
          "format": "date"
        },
        "revenueToday": {
          "description": "Total revenue for the transaction code today",
          "type": "number"
        },
        "coversToday": {
          "description": "Covers for current date i.e., Today.",
          "type": "number",
          "minimum": 0,
          "maximum": 4000
        },
        "coversJournal": {
          "description": "Journal of the covers posted.",
          "type": "number",
          "minimum": 0,
          "maximum": 8000
        },
        "coversMtd": {
          "description": "Covers posted from Month to Date.",
          "type": "number",
          "minimum": 0,
          "maximum": 16000
        },
        "coversYtd": {
          "description": "Covers posted from Year to Date.",
          "type": "number",
          "minimum": 0,
          "maximum": 64000
        }
      }
    },
    "coversInfo": {
      "type": "object",
      "description": "Response that contains either the Transaction Code list with Covers info if fetch was successful or error(s) if not.",
      "properties": {
        "coversInfo": {
          "description": "List of TransactionCode. Contains information on Transaction Code with Covers Info.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/coversInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "backToBackResSequenceType": {
      "type": "object",
      "description": "Type object represents Back To Back Sequence Position and Total Count of Linked Back To Back Reservations ordered by consecutive Stay Dates.",
      "properties": {
        "position": {
          "description": "Indicates the Sequence position of Back to Back Reservation.",
          "type": "integer"
        },
        "totalCount": {
          "description": "Indicates the total count of Back To Back Reservations in the group of Linked Reservations.",
          "type": "integer"
        }
      }
    },
    "bookingTimeSpanType": {
      "type": "object",
      "description": "The booking time span of the reservation, only applicable when time increments are being used.",
      "properties": {
        "startDateTime": {
          "type": "string",
          "description": "The start time of the reservation booking",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "description": "The end time of the reservation booking",
          "format": "date-time"
        }
      }
    },
    "createProformaFolioCriteriaType": {
      "type": "object",
      "description": "Criteria for creating Pro-Forma transactions for a reservation. These transactions will be used by the Opera Proforma Report.",
      "properties": {
        "proformaResponseInstruction": {
          "description": "Response instructions for the Pro-Forma transactions creation. Possible values are None or Folio Summary. A Summary of the Proforma Folio can be returned, if requested.",
          "$ref": "#/definitions/proformaFolioResponseInstructionType"
        }
      }
    },
    "proformaFolioResponseInstructionType": {
      "type": "string",
      "description": "Response instructions for Proforma Folio Creation.",
      "enum": [
        "Summary",
        "Details"
      ]
    },
    "proformaReservationFolio": {
      "type": "object",
      "description": "Request to create a Pro-Forma(folio) transactions for a reservation. The request generates the internal transactions required to create a Pro-Forma folio, pass it into the response and finally remove/cleanup these transactions.",
      "properties": {
        "criteria": {
          "description": "Criteria to create a Proforma for a reservation.",
          "$ref": "#/definitions/createProformaFolioCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "proformaFolio": {
      "type": "object",
      "description": "Response for the Create Proforma WS. The proforma is created by this request, passed into the response and finally the proforma transactions are removed.",
      "properties": {
        "reservationFolioInformation": {
          "description": "This type will return a detailed Proforma Folio information in the response.",
          "$ref": "#/definitions/reservationFolioInfoType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Cashiering",
      "description": "Cashiering module provides APIs to service front desk billing requirements, as well as any requirements related to a reservation's folio. You can retrieve a guest folio, post billing charges to guest folio, add routing instructions to a reservation, view authorization history, all the way through to checking the guest out using the postCheckOut API."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}